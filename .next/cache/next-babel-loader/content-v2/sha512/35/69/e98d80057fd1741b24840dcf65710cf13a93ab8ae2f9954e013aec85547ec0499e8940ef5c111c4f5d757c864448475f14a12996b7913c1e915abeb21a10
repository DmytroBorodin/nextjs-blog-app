{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/components/contacts/contact-form/contact-form.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useRef, useState } from \"react\";\nimport Notification from \"../../ui/notification/notification\";\nimport classes from \"./contact-form.module.css\";\n\nfunction ContactForm(props) {\n  _s();\n\n  var emailInputRef = useRef();\n  var nameInputRef = useRef();\n  var messageInputRef = useRef();\n\n  var _useState = useState(),\n      responseStatus = _useState[0],\n      setResponseStatus = _useState[1];\n\n  function submitFormHandler() {\n    return {\n      email: emailInputRef.current.value,\n      name: nameInputRef.current.value,\n      message: messageInputRef.current.value\n    };\n  }\n\n  function sendMessageOnSubmit(e) {\n    e.preventDefault();\n    setResponseStatus({\n      title: \"Sending Message...\",\n      status: \"panding\",\n      message: \"Sending your message, please wait...\"\n    });\n    fetch(\"/api/contact\", {\n      method: \"POST\",\n      body: JSON.stringify(_objectSpread({}, submitFormHandler())),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      console.log(res);\n      setResponseStatus({\n        title: \"Sent Message\",\n        status: \"success\",\n        message: \"Message sent succesfuly\"\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n      setResponseStatus({\n        title: \"Error\",\n        status: \"error\",\n        message: \"Sending message id failed\"\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.contact,\n      onSubmit: sendMessageOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"How can I help you?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.controls,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Your email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: emailInputRef,\n              type: \"email\",\n              id: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.control,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: nameInputRef,\n              type: \"text\",\n              id: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: messageInputRef,\n            name: \"message\",\n            id: \"message\",\n            cols: \"30\",\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.actions,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Send message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      title: responseStatus.title,\n      message: responseStatus.message,\n      status: responseStatus.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"momU9vJt46qopyjdGDFhcwSIVjY=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/components/contacts/contact-form/contact-form.js"],"names":["useRef","useState","Notification","classes","ContactForm","props","emailInputRef","nameInputRef","messageInputRef","responseStatus","setResponseStatus","submitFormHandler","email","current","value","name","message","sendMessageOnSubmit","e","preventDefault","title","status","fetch","method","body","JSON","stringify","headers","then","res","json","console","log","error","contact","form","controls","control","actions"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport Notification from \"../../ui/notification/notification\";\n\nimport classes from \"./contact-form.module.css\";\n\nfunction ContactForm(props) {\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const messageInputRef = useRef();\n\n  const [responseStatus, setResponseStatus] = useState();\n\n  function submitFormHandler() {\n    return {\n      email: emailInputRef.current.value,\n      name: nameInputRef.current.value,\n      message: messageInputRef.current.value,\n    };\n  }\n\n  function sendMessageOnSubmit(e) {\n    e.preventDefault();\n    setResponseStatus({\n      title: \"Sending Message...\",\n      status: \"panding\",\n      message: \"Sending your message, please wait...\",\n    });\n    fetch(\"/api/contact\", {\n      method: \"POST\",\n      body: JSON.stringify({ ...submitFormHandler() }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        console.log(res);\n        setResponseStatus({\n          title: \"Sent Message\",\n          status: \"success\",\n          message: \"Message sent succesfuly\",\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        setResponseStatus({\n          title: \"Error\",\n          status: \"error\",\n          message: \"Sending message id failed\",\n        });\n      });\n  }\n\n  return (\n    <Fragment>\n      <section className={classes.contact} onSubmit={sendMessageOnSubmit}>\n        <h1>How can I help you?</h1>\n        <form action=\"\" className={classes.form}>\n          <div className={classes.controls}>\n            <div className={classes.control}>\n              <label htmlFor=\"email\">Your email</label>\n              <input ref={emailInputRef} type=\"email\" id=\"email\" required />\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"name\">Your name</label>\n              <input ref={nameInputRef} type=\"text\" id=\"name\" />\n            </div>\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"message\">Your message</label>\n            <textarea\n              ref={messageInputRef}\n              name=\"message\"\n              id=\"message\"\n              cols=\"30\"\n              rows=\"5\"\n            ></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button>Send message</button>\n          </div>\n        </form>\n      </section>\n      <Notification\n        title={responseStatus.title}\n        message={responseStatus.message}\n        status={responseStatus.status}\n      />\n    </Fragment>\n  );\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}