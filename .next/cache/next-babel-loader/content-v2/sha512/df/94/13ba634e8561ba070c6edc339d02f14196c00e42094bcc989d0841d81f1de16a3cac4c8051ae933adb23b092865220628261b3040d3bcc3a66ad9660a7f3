{"ast":null,"code":"const {\n  MongoClient\n} = require(\"mongodb\");\n\nexport default async function handler(req, res) {\n  if (req.method === \"POST\") {\n    const {\n      email,\n      name,\n      message\n    } = req.body;\n\n    if (!email || !email.includes(\"@\") || !name || name.trim() === \"\" || !message || message.trim() === \"\") {\n      res.status(500).json({\n        message: \"Invalid input value\"\n      });\n      return;\n    }\n\n    const newMessage = {\n      email,\n      name,\n      message\n    };\n    let client;\n    const connectionString = `mongodb+srv://${process.env.mongodb_username}:${process.env.mongodb_password}@${process.env.mongodb_cluster}.rptrona.mongodb.net/${process.env.mongodb_database}?retryWrites=true&w=majority`;\n\n    try {\n      client = await MongoClient.connect(connectionString);\n    } catch (error) {\n      res.status(500).json({\n        message: error\n      });\n      return;\n    }\n\n    const db = client.db();\n    let result;\n\n    try {\n      result = await db.collection(\"my-blog\").insertOne(newMessage);\n    } catch (error) {\n      client.close();\n      res.status(500).json({\n        message: \"Storing message is failed\"\n      });\n      return;\n    }\n\n    console.log(newMessage, result);\n    client.close();\n    res.status(201).json({\n      message: \"Success!\"\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}