{"code":"(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[12],{\"6dBs\":function(e,n,t){\"use strict\";var r=Object.prototype.hasOwnProperty,o=Object.prototype.toString,i=Object.defineProperty,l=Object.getOwnPropertyDescriptor,a=function(e){return\"function\"===typeof Array.isArray?Array.isArray(e):\"[object Array]\"===o.call(e)},u=function(e){if(!e||\"[object Object]\"!==o.call(e))return!1;var n,t=r.call(e,\"constructor\"),i=e.constructor&&e.constructor.prototype&&r.call(e.constructor.prototype,\"isPrototypeOf\");if(e.constructor&&!t&&!i)return!1;for(n in e);return\"undefined\"===typeof n||r.call(e,n)},s=function(e,n){i&&\"__proto__\"===n.name?i(e,n.name,{enumerable:!0,configurable:!0,value:n.newValue,writable:!0}):e[n.name]=n.newValue},c=function(e,n){if(\"__proto__\"===n){if(!r.call(e,n))return;if(l)return l(e,n).value}return e[n]};e.exports=function e(){var n,t,r,o,i,l,f=arguments[0],p=1,d=arguments.length,h=!1;for(\"boolean\"===typeof f&&(h=f,f=arguments[1]||{},p=2),(null==f||\"object\"!==typeof f&&\"function\"!==typeof f)&&(f={});p<d;++p)if(null!=(n=arguments[p]))for(t in n)r=c(f,t),f!==(o=c(n,t))&&(h&&o&&(u(o)||(i=a(o)))?(i?(i=!1,l=r&&a(r)?r:[]):l=r&&u(r)?r:{},s(f,{name:t,newValue:e(h,l,o)})):\"undefined\"!==typeof o&&s(f,{name:t,newValue:o}));return f}},BEtg:function(e,n){e.exports=function(e){return null!=e&&null!=e.constructor&&\"function\"===typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}},CC3I:function(e,n,t){var r=t(\"Lc7W\");e.exports=function(e,n){var t,o=null;if(!e||\"string\"!==typeof e)return o;for(var i,l,a=r(e),u=\"function\"===typeof n,s=0,c=a.length;s<c;s++)i=(t=a[s]).property,l=t.value,u?n(i,l,t):l&&(o||(o={}),o[i]=l);return o}},FEXr:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"uriTransformer\",(function(){return l})),t.d(n,\"default\",(function(){return Zt}));var r={};t.r(r),t.d(r,\"document\",(function(){return rn})),t.d(r,\"contentInitial\",(function(){return on})),t.d(r,\"flowInitial\",(function(){return ln})),t.d(r,\"flow\",(function(){return an})),t.d(r,\"string\",(function(){return un})),t.d(r,\"text\",(function(){return sn})),t.d(r,\"insideSpan\",(function(){return cn})),t.d(r,\"attentionMarkers\",(function(){return fn})),t.d(r,\"disable\",(function(){return pn}));var o={};t.r(o),t.d(o,\"boolean\",(function(){return ut})),t.d(o,\"booleanish\",(function(){return st})),t.d(o,\"overloadedBoolean\",(function(){return ct})),t.d(o,\"number\",(function(){return ft})),t.d(o,\"spaceSeparated\",(function(){return pt})),t.d(o,\"commaSeparated\",(function(){return dt})),t.d(o,\"commaOrSpaceSeparated\",(function(){return ht}));const i=[\"http\",\"https\",\"mailto\",\"tel\"];function l(e){const n=(e||\"\").trim(),t=n.charAt(0);if(\"#\"===t||\"/\"===t)return n;const r=n.indexOf(\":\");if(-1===r)return n;let o=-1;for(;++o<i.length;){const e=i[o];if(r===e.length&&n.slice(0,e.length).toLowerCase()===e)return n}return o=n.indexOf(\"?\"),-1!==o&&r>o?n:(o=n.indexOf(\"#\"),-1!==o&&r>o?n:\"javascript:void(0)\")}var a=t(\"q1tI\"),u=t.n(a),s=t(\"BEtg\"),c=t.n(s);function f(e){return e&&\"object\"===typeof e?\"position\"in e||\"type\"in e?d(e.position):\"start\"in e||\"end\"in e?d(e):\"line\"in e||\"column\"in e?p(e):\"\":\"\"}function p(e){return h(e&&e.line)+\":\"+h(e&&e.column)}function d(e){return p(e&&e.start)+\"-\"+p(e&&e.end)}function h(e){return e&&\"number\"===typeof e?e:1}class g extends Error{constructor(e,n,t){const r=[null,null];let o={start:{line:null,column:null},end:{line:null,column:null}};if(super(),\"string\"===typeof n&&(t=n,n=void 0),\"string\"===typeof t){const e=t.indexOf(\":\");-1===e?r[1]=t:(r[0]=t.slice(0,e),r[1]=t.slice(e+1))}n&&(\"type\"in n||\"position\"in n?n.position&&(o=n.position):\"start\"in n||\"end\"in n?o=n:(\"line\"in n||\"column\"in n)&&(o.start=n)),this.name=f(n)||\"1:1\",this.message=\"object\"===typeof e?e.message:e,this.stack=\"object\"===typeof e?e.stack:\"\",this.reason=this.message,this.fatal,this.line=o.start.line,this.column=o.start.column,this.source=r[0],this.ruleId=r[1],this.position=o,this.actual,this.expected,this.file,this.url,this.note}}g.prototype.file=\"\",g.prototype.name=\"\",g.prototype.reason=\"\",g.prototype.message=\"\",g.prototype.stack=\"\",g.prototype.fatal=null,g.prototype.column=null,g.prototype.line=null,g.prototype.source=null,g.prototype.ruleId=null,g.prototype.position=null;const m={basename:function(e,n){if(void 0!==n&&\"string\"!==typeof n)throw new TypeError('\"ext\" argument must be a string');y(e);let t,r=0,o=-1,i=e.length;if(void 0===n||0===n.length||n.length>e.length){for(;i--;)if(47===e.charCodeAt(i)){if(t){r=i+1;break}}else o<0&&(t=!0,o=i+1);return o<0?\"\":e.slice(r,o)}if(n===e)return\"\";let l=-1,a=n.length-1;for(;i--;)if(47===e.charCodeAt(i)){if(t){r=i+1;break}}else l<0&&(t=!0,l=i+1),a>-1&&(e.charCodeAt(i)===n.charCodeAt(a--)?a<0&&(o=i):(a=-1,o=l));r===o?o=l:o<0&&(o=e.length);return e.slice(r,o)},dirname:function(e){if(y(e),0===e.length)return\".\";let n,t=-1,r=e.length;for(;--r;)if(47===e.charCodeAt(r)){if(n){t=r;break}}else n||(n=!0);return t<0?47===e.charCodeAt(0)?\"/\":\".\":1===t&&47===e.charCodeAt(0)?\"//\":e.slice(0,t)},extname:function(e){y(e);let n,t=e.length,r=-1,o=0,i=-1,l=0;for(;t--;){const a=e.charCodeAt(t);if(47!==a)r<0&&(n=!0,r=t+1),46===a?i<0?i=t:1!==l&&(l=1):i>-1&&(l=-1);else if(n){o=t+1;break}}if(i<0||r<0||0===l||1===l&&i===r-1&&i===o+1)return\"\";return e.slice(i,r)},join:function(...e){let n,t=-1;for(;++t<e.length;)y(e[t]),e[t]&&(n=void 0===n?e[t]:n+\"/\"+e[t]);return void 0===n?\".\":function(e){y(e);const n=47===e.charCodeAt(0);let t=function(e,n){let t,r,o=\"\",i=0,l=-1,a=0,u=-1;for(;++u<=e.length;){if(u<e.length)t=e.charCodeAt(u);else{if(47===t)break;t=47}if(47===t){if(l===u-1||1===a);else if(l!==u-1&&2===a){if(o.length<2||2!==i||46!==o.charCodeAt(o.length-1)||46!==o.charCodeAt(o.length-2))if(o.length>2){if(r=o.lastIndexOf(\"/\"),r!==o.length-1){r<0?(o=\"\",i=0):(o=o.slice(0,r),i=o.length-1-o.lastIndexOf(\"/\")),l=u,a=0;continue}}else if(o.length>0){o=\"\",i=0,l=u,a=0;continue}n&&(o=o.length>0?o+\"/..\":\"..\",i=2)}else o.length>0?o+=\"/\"+e.slice(l+1,u):o=e.slice(l+1,u),i=u-l-1;l=u,a=0}else 46===t&&a>-1?a++:a=-1}return o}(e,!n);0!==t.length||n||(t=\".\");t.length>0&&47===e.charCodeAt(e.length-1)&&(t+=\"/\");return n?\"/\"+t:t}(n)},sep:\"/\"};function y(e){if(\"string\"!==typeof e)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}const b={cwd:function(){return\"/\"}};function k(e){return null!==e&&\"object\"===typeof e&&e.href&&e.origin}function x(e){if(\"string\"===typeof e)e=new URL(e);else if(!k(e)){const n=new TypeError('The \"path\" argument must be of type string or an instance of URL. Received `'+e+\"`\");throw n.code=\"ERR_INVALID_ARG_TYPE\",n}if(\"file:\"!==e.protocol){const e=new TypeError(\"The URL must be of scheme file\");throw e.code=\"ERR_INVALID_URL_SCHEME\",e}return function(e){if(\"\"!==e.hostname){const e=new TypeError('File URL host must be \"localhost\" or empty on darwin');throw e.code=\"ERR_INVALID_FILE_URL_HOST\",e}const n=e.pathname;let t=-1;for(;++t<n.length;)if(37===n.charCodeAt(t)&&50===n.charCodeAt(t+1)){const e=n.charCodeAt(t+2);if(70===e||102===e){const e=new TypeError(\"File URL path must not include encoded / characters\");throw e.code=\"ERR_INVALID_FILE_URL_PATH\",e}}return decodeURIComponent(n)}(e)}const v=[\"history\",\"path\",\"basename\",\"stem\",\"extname\",\"dirname\"];class w{constructor(e){let n;n=e?\"string\"===typeof e||c()(e)?{value:e}:k(e)?{path:e}:e:{},this.data={},this.messages=[],this.history=[],this.cwd=b.cwd(),this.value,this.stored,this.result,this.map;let t,r=-1;for(;++r<v.length;){const e=v[r];e in n&&void 0!==n[e]&&(this[e]=\"history\"===e?[...n[e]]:n[e])}for(t in n)v.includes(t)||(this[t]=n[t])}get path(){return this.history[this.history.length-1]}set path(e){k(e)&&(e=x(e)),E(e,\"path\"),this.path!==e&&this.history.push(e)}get dirname(){return\"string\"===typeof this.path?m.dirname(this.path):void 0}set dirname(e){A(this.basename,\"dirname\"),this.path=m.join(e||\"\",this.basename)}get basename(){return\"string\"===typeof this.path?m.basename(this.path):void 0}set basename(e){E(e,\"basename\"),S(e,\"basename\"),this.path=m.join(this.dirname||\"\",e)}get extname(){return\"string\"===typeof this.path?m.extname(this.path):void 0}set extname(e){if(S(e,\"extname\"),A(this.dirname,\"extname\"),e){if(46!==e.charCodeAt(0))throw new Error(\"`extname` must start with `.`\");if(e.includes(\".\",1))throw new Error(\"`extname` cannot contain multiple dots\")}this.path=m.join(this.dirname,this.stem+(e||\"\"))}get stem(){return\"string\"===typeof this.path?m.basename(this.path,this.extname):void 0}set stem(e){E(e,\"stem\"),S(e,\"stem\"),this.path=m.join(this.dirname||\"\",e+(this.extname||\"\"))}toString(e){return(this.value||\"\").toString(e)}message(e,n,t){const r=new g(e,n,t);return this.path&&(r.name=this.path+\":\"+r.name,r.file=this.path),r.fatal=!1,this.messages.push(r),r}info(e,n,t){const r=this.message(e,n,t);return r.fatal=null,r}fail(e,n,t){const r=this.message(e,n,t);throw r.fatal=!0,r}}function S(e,n){if(e&&e.includes(m.sep))throw new Error(\"`\"+n+\"` cannot be a path: did not expect `\"+m.sep+\"`\")}function E(e,n){if(!e)throw new Error(\"`\"+n+\"` cannot be empty\")}function A(e,n){if(!e)throw new Error(\"Setting `\"+n+\"` requires `path` to be set too\")}function C(e){if(e)throw e}var L=t(\"6dBs\"),T=t.n(L);function D(e){if(\"object\"!==typeof e||null===e)return!1;const n=Object.getPrototypeOf(e);return(null===n||n===Object.prototype||null===Object.getPrototypeOf(n))&&!(Symbol.toStringTag in e)&&!(Symbol.iterator in e)}function q(){const e=[],n={run:function(...n){let t=-1;const r=n.pop();if(\"function\"!==typeof r)throw new TypeError(\"Expected function as last argument, not \"+r);!function o(i,...l){const a=e[++t];let u=-1;if(i)r(i);else{for(;++u<n.length;)null!==l[u]&&void 0!==l[u]||(l[u]=n[u]);n=l,a?function(e,n){let t;return r;function r(...n){const r=e.length>n.length;let a;r&&n.push(o);try{a=e.apply(this,n)}catch(i){const n=i;if(r&&t)throw n;return o(n)}r||(a instanceof Promise?a.then(l,o):a instanceof Error?o(a):l(a))}function o(e,...r){t||(t=!0,n(e,...r))}function l(e){o(null,e)}}(a,o)(...l):r(null,...l)}}(null,...n)},use:function(t){if(\"function\"!==typeof t)throw new TypeError(\"Expected `middelware` to be a function, not \"+t);return e.push(t),n}};return n}const F=function e(){const n=q(),t=[];let r,o={},i=-1;return l.data=function(e,n){if(\"string\"===typeof e)return 2===arguments.length?(B(\"data\",r),o[e]=n,l):P.call(o,e)&&o[e]||null;if(e)return B(\"data\",r),o=e,l;return o},l.Parser=void 0,l.Compiler=void 0,l.freeze=function(){if(r)return l;for(;++i<t.length;){const[e,...r]=t[i];if(!1===r[0])continue;!0===r[0]&&(r[0]=void 0);const o=e.call(l,...r);\"function\"===typeof o&&n.use(o)}return r=!0,i=Number.POSITIVE_INFINITY,l},l.attachers=t,l.use=function(e,...n){let i;if(B(\"use\",r),null===e||void 0===e);else if(\"function\"===typeof e)c(e,...n);else{if(\"object\"!==typeof e)throw new TypeError(\"Expected usable value, not `\"+e+\"`\");Array.isArray(e)?s(e):u(e)}i&&(o.settings=Object.assign(o.settings||{},i));return l;function a(e){if(\"function\"===typeof e)c(e);else{if(\"object\"!==typeof e)throw new TypeError(\"Expected usable value, not `\"+e+\"`\");if(Array.isArray(e)){const[n,...t]=e;c(n,...t)}else u(e)}}function u(e){s(e.plugins),e.settings&&(i=Object.assign(i||{},e.settings))}function s(e){let n=-1;if(null===e||void 0===e);else{if(!Array.isArray(e))throw new TypeError(\"Expected a list of plugins, not `\"+e+\"`\");for(;++n<e.length;){a(e[n])}}}function c(e,n){let r,o=-1;for(;++o<t.length;)if(t[o][0]===e){r=t[o];break}r?(D(r[1])&&D(n)&&(n=T()(!0,r[1],n)),r[1]=n):t.push([...arguments])}},l.parse=function(e){l.freeze();const n=M(e),t=l.Parser;if(I(\"parse\",t),O(t,\"parse\"))return new t(String(n),n).parse();return t(String(n),n)},l.stringify=function(e,n){l.freeze();const t=M(n),r=l.Compiler;if(R(\"stringify\",r),z(e),O(r,\"compile\"))return new r(e,t).compile();return r(e,t)},l.run=function(e,t,r){z(e),l.freeze(),r||\"function\"!==typeof t||(r=t,t=void 0);if(!r)return new Promise(o);function o(o,i){function l(n,t,l){t=t||e,n?i(n):o?o(t):r(null,t,l)}n.run(e,M(t),l)}o(null,r)},l.runSync=function(e,n){let t,r;return l.run(e,n,o),N(\"runSync\",\"run\",r),t;function o(e,n){C(e),t=n,r=!0}},l.process=function(e,n){if(l.freeze(),I(\"process\",l.Parser),R(\"process\",l.Compiler),!n)return new Promise(t);function t(t,r){const o=M(e);function i(e,o){e||!o?r(e):t?t(o):n(null,o)}l.run(l.parse(o),o,((e,n,t)=>{if(!e&&n&&t){const o=l.stringify(n,t);void 0===o||null===o||(\"string\"===typeof(r=o)||c()(r)?t.value=o:t.result=o),i(e,t)}else i(e);var r}))}t(null,n)},l.processSync=function(e){let n;l.freeze(),I(\"processSync\",l.Parser),R(\"processSync\",l.Compiler);const t=M(e);return l.process(t,r),N(\"processSync\",\"process\",n),t;function r(e){n=!0,C(e)}},l;function l(){const n=e();let r=-1;for(;++r<t.length;)n.use(...t[r]);return n.data(T()(!0,{},o)),n}}().freeze(),P={}.hasOwnProperty;function O(e,n){return\"function\"===typeof e&&e.prototype&&(function(e){let n;for(n in e)if(P.call(e,n))return!0;return!1}(e.prototype)||n in e.prototype)}function I(e,n){if(\"function\"!==typeof n)throw new TypeError(\"Cannot `\"+e+\"` without `Parser`\")}function R(e,n){if(\"function\"!==typeof n)throw new TypeError(\"Cannot `\"+e+\"` without `Compiler`\")}function B(e,n){if(n)throw new Error(\"Cannot call `\"+e+\"` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.\")}function z(e){if(!D(e)||\"string\"!==typeof e.type)throw new TypeError(\"Expected node, got `\"+e+\"`\")}function N(e,n,t){if(!t)throw new Error(\"`\"+e+\"` finished async. Use `\"+n+\"` instead\")}function M(e){return function(e){return Boolean(e&&\"object\"===typeof e&&\"message\"in e&&\"messages\"in e)}(e)?e:new w(e)}function U(e,n){return e&&\"object\"===typeof e&&(e.value||(n?e.alt:\"\")||\"children\"in e&&j(e.children,n)||Array.isArray(e)&&j(e,n))||\"\"}function j(e,n){for(var t=[],r=-1;++r<e.length;)t[r]=U(e[r],n);return t.join(\"\")}function V(e,n,t,r){const o=e.length;let i,l=0;if(n=n<0?-n>o?0:o+n:n>o?o:n,t=t>0?t:0,r.length<1e4)i=Array.from(r),i.unshift(n,t),[].splice.apply(e,i);else for(t&&[].splice.apply(e,[n,t]);l<r.length;)i=r.slice(l,l+1e4),i.unshift(n,0),[].splice.apply(e,i),l+=1e4,n+=1e4}function H(e,n){return e.length>0?(V(e,e.length,0,n),e):n}const _={}.hasOwnProperty;function G(e,n){let t;for(t in n){const r=(_.call(e,t)?e[t]:void 0)||(e[t]={}),o=n[t];let i;for(i in o){_.call(r,i)||(r[i]=[]);const e=o[i];$(r[i],Array.isArray(e)?e:e?[e]:[])}}}function $(e,n){let t=-1;const r=[];for(;++t<n.length;)(\"after\"===n[t].add?e:r).push(n[t]);V(e,0,0,r)}const W=ie(/[A-Za-z]/),Q=ie(/\\d/),Y=ie(/[\\dA-Fa-f]/),J=ie(/[\\dA-Za-z]/),K=ie(/[!-/:-@[-`{-~]/),Z=ie(/[#-'*+\\--9=?A-Z^-~]/);function X(e){return null!==e&&(e<32||127===e)}function ee(e){return null!==e&&(e<0||32===e)}function ne(e){return null!==e&&e<-2}function te(e){return-2===e||-1===e||32===e}const re=ie(/\\s/),oe=ie(/[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/);function ie(e){return function(n){return null!==n&&e.test(String.fromCharCode(n))}}function le(e,n,t,r){const o=r?r-1:Number.POSITIVE_INFINITY;let i=0;return function(r){if(te(r))return e.enter(t),l(r);return n(r)};function l(r){return te(r)&&i++<o?(e.consume(r),l):(e.exit(t),n(r))}}const ae={tokenize:function(e){const n=e.attempt(this.parser.constructs.contentInitial,(function(t){if(null===t)return void e.consume(t);return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),le(e,n,\"linePrefix\")}),(function(n){return e.enter(\"paragraph\"),r(n)}));let t;return n;function r(n){const r=e.enter(\"chunkText\",{contentType:\"text\",previous:t});return t&&(t.next=r),t=r,o(n)}function o(n){return null===n?(e.exit(\"chunkText\"),e.exit(\"paragraph\"),void e.consume(n)):ne(n)?(e.consume(n),e.exit(\"chunkText\"),r):(e.consume(n),o)}}};const ue={tokenize:function(e){const n=this,t=[];let r,o,i,l=0;return a;function a(r){if(l<t.length){const o=t[l];return n.containerState=o[1],e.attempt(o[0].continuation,u,s)(r)}return s(r)}function u(e){if(l++,n.containerState._closeFlow){n.containerState._closeFlow=void 0,r&&b();const t=n.events.length;let o,i=t;for(;i--;)if(\"exit\"===n.events[i][0]&&\"chunkFlow\"===n.events[i][1].type){o=n.events[i][1].end;break}y(l);let a=t;for(;a<n.events.length;)n.events[a][1].end=Object.assign({},o),a++;return V(n.events,i+1,0,n.events.slice(t)),n.events.length=a,s(e)}return a(e)}function s(o){if(l===t.length){if(!r)return p(o);if(r.currentConstruct&&r.currentConstruct.concrete)return h(o);n.interrupt=Boolean(r.currentConstruct&&!r._gfmTableDynamicInterruptHack)}return n.containerState={},e.check(se,c,f)(o)}function c(e){return r&&b(),y(l),p(e)}function f(e){return n.parser.lazy[n.now().line]=l!==t.length,i=n.now().offset,h(e)}function p(t){return n.containerState={},e.attempt(se,d,h)(t)}function d(e){return l++,t.push([n.currentConstruct,n.containerState]),p(e)}function h(t){return null===t?(r&&b(),y(0),void e.consume(t)):(r=r||n.parser.flow(n.now()),e.enter(\"chunkFlow\",{contentType:\"flow\",previous:o,_tokenizer:r}),g(t))}function g(t){return null===t?(m(e.exit(\"chunkFlow\"),!0),y(0),void e.consume(t)):ne(t)?(e.consume(t),m(e.exit(\"chunkFlow\")),l=0,n.interrupt=void 0,a):(e.consume(t),g)}function m(e,t){const a=n.sliceStream(e);if(t&&a.push(null),e.previous=o,o&&(o.next=e),o=e,r.defineSkip(e.start),r.write(a),n.parser.lazy[e.start.line]){let e=r.events.length;for(;e--;)if(r.events[e][1].start.offset<i&&(!r.events[e][1].end||r.events[e][1].end.offset>i))return;const t=n.events.length;let o,a,u=t;for(;u--;)if(\"exit\"===n.events[u][0]&&\"chunkFlow\"===n.events[u][1].type){if(o){a=n.events[u][1].end;break}o=!0}for(y(l),e=t;e<n.events.length;)n.events[e][1].end=Object.assign({},a),e++;V(n.events,u+1,0,n.events.slice(t)),n.events.length=e}}function y(r){let o=t.length;for(;o-- >r;){const r=t[o];n.containerState=r[1],r[0].exit.call(n,e)}t.length=r}function b(){r.write([null]),o=void 0,r=void 0,n.containerState._closeFlow=void 0}}},se={tokenize:function(e,n,t){return le(e,e.attempt(this.parser.constructs.document,n,t),\"linePrefix\",this.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)}};const ce={tokenize:function(e,n,t){return le(e,(function(e){return null===e||ne(e)?n(e):t(e)}),\"linePrefix\")},partial:!0};function fe(e){const n={};let t,r,o,i,l,a,u,s=-1;for(;++s<e.length;){for(;s in n;)s=n[s];if(t=e[s],s&&\"chunkFlow\"===t[1].type&&\"listItemPrefix\"===e[s-1][1].type&&(a=t[1]._tokenizer.events,o=0,o<a.length&&\"lineEndingBlank\"===a[o][1].type&&(o+=2),o<a.length&&\"content\"===a[o][1].type))for(;++o<a.length&&\"content\"!==a[o][1].type;)\"chunkText\"===a[o][1].type&&(a[o][1]._isInFirstContentOfListItem=!0,o++);if(\"enter\"===t[0])t[1].contentType&&(Object.assign(n,pe(e,s)),s=n[s],u=!0);else if(t[1]._container){for(o=s,r=void 0;o--&&(i=e[o],\"lineEnding\"===i[1].type||\"lineEndingBlank\"===i[1].type);)\"enter\"===i[0]&&(r&&(e[r][1].type=\"lineEndingBlank\"),i[1].type=\"lineEnding\",r=o);r&&(t[1].end=Object.assign({},e[r][1].start),l=e.slice(r,s),l.unshift(t),V(e,r,s-r+1,l))}}return!u}function pe(e,n){const t=e[n][1],r=e[n][2];let o=n-1;const i=[],l=t._tokenizer||r.parser[t.contentType](t.start),a=l.events,u=[],s={};let c,f,p=-1,d=t,h=0,g=0;const m=[g];for(;d;){for(;e[++o][1]!==d;);i.push(o),d._tokenizer||(c=r.sliceStream(d),d.next||c.push(null),f&&l.defineSkip(d.start),d._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=!0),l.write(c),d._isInFirstContentOfListItem&&(l._gfmTasklistFirstContentOfListItem=void 0)),f=d,d=d.next}for(d=t;++p<a.length;)\"exit\"===a[p][0]&&\"enter\"===a[p-1][0]&&a[p][1].type===a[p-1][1].type&&a[p][1].start.line!==a[p][1].end.line&&(g=p+1,m.push(g),d._tokenizer=void 0,d.previous=void 0,d=d.next);for(l.events=[],d?(d._tokenizer=void 0,d.previous=void 0):m.pop(),p=m.length;p--;){const n=a.slice(m[p],m[p+1]),t=i.pop();u.unshift([t,t+n.length-1]),V(e,t,2,n)}for(p=-1;++p<u.length;)s[h+u[p][0]]=h+u[p][1],h+=u[p][1]-u[p][0]-1;return s}const de={tokenize:function(e,n){let t;return function(n){return e.enter(\"content\"),t=e.enter(\"chunkContent\",{contentType:\"content\"}),r(n)};function r(n){return null===n?o(n):ne(n)?e.check(he,i,o)(n):(e.consume(n),r)}function o(t){return e.exit(\"chunkContent\"),e.exit(\"content\"),n(t)}function i(n){return e.consume(n),e.exit(\"chunkContent\"),t.next=e.enter(\"chunkContent\",{contentType:\"content\",previous:t}),t=t.next,r}},resolve:function(e){return fe(e),e}},he={tokenize:function(e,n,t){const r=this;return function(n){return e.exit(\"chunkContent\"),e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),le(e,o,\"linePrefix\")};function o(o){if(null===o||ne(o))return t(o);const i=r.events[r.events.length-1];return!r.parser.constructs.disable.null.includes(\"codeIndented\")&&i&&\"linePrefix\"===i[1].type&&i[2].sliceSerialize(i[1],!0).length>=4?n(o):e.interrupt(r.parser.constructs.flow,t,n)(o)}},partial:!0};const ge={tokenize:function(e){const n=this,t=e.attempt(ce,(function(r){if(null===r)return void e.consume(r);return e.enter(\"lineEndingBlank\"),e.consume(r),e.exit(\"lineEndingBlank\"),n.currentConstruct=void 0,t}),e.attempt(this.parser.constructs.flowInitial,r,le(e,e.attempt(this.parser.constructs.flow,r,e.attempt(de,r)),\"linePrefix\")));return t;function r(r){if(null!==r)return e.enter(\"lineEnding\"),e.consume(r),e.exit(\"lineEnding\"),n.currentConstruct=void 0,t;e.consume(r)}}};const me={resolveAll:xe()},ye=ke(\"string\"),be=ke(\"text\");function ke(e){return{tokenize:function(n){const t=this,r=this.parser.constructs[e],o=n.attempt(r,i,l);return i;function i(e){return u(e)?o(e):l(e)}function l(e){if(null!==e)return n.enter(\"data\"),n.consume(e),a;n.consume(e)}function a(e){return u(e)?(n.exit(\"data\"),o(e)):(n.consume(e),a)}function u(e){if(null===e)return!0;const n=r[e];let o=-1;if(n)for(;++o<n.length;){const e=n[o];if(!e.previous||e.previous.call(t,t.previous))return!0}return!1}},resolveAll:xe(\"text\"===e?ve:void 0)}}function xe(e){return function(n,t){let r,o=-1;for(;++o<=n.length;)void 0===r?n[o]&&\"data\"===n[o][1].type&&(r=o,o++):n[o]&&\"data\"===n[o][1].type||(o!==r+2&&(n[r][1].end=n[o-1][1].end,n.splice(r+2,o-r-2),o=r+2),r=void 0);return e?e(n,t):n}}function ve(e,n){let t=0;for(;++t<=e.length;)if((t===e.length||\"lineEnding\"===e[t][1].type)&&\"data\"===e[t-1][1].type){const r=e[t-1][1],o=n.sliceStream(r);let i,l=o.length,a=-1,u=0;for(;l--;){const e=o[l];if(\"string\"===typeof e){for(a=e.length;32===e.charCodeAt(a-1);)u++,a--;if(a)break;a=-1}else if(-2===e)i=!0,u++;else if(-1!==e){l++;break}}if(u){const o={type:t===e.length||i||u<2?\"lineSuffix\":\"hardBreakTrailing\",start:{line:r.end.line,column:r.end.column-u,offset:r.end.offset-u,_index:r.start._index+l,_bufferIndex:l?a:r.start._bufferIndex+a},end:Object.assign({},r.end)};r.end=Object.assign({},o.start),r.start.offset===r.end.offset?Object.assign(r,o):(e.splice(t,0,[\"enter\",o,n],[\"exit\",o,n]),t+=2)}t++}return e}function we(e,n,t){const r=[];let o=-1;for(;++o<e.length;){const i=e[o].resolveAll;i&&!r.includes(i)&&(n=i(n,t),r.push(i))}return n}function Se(e,n,t){let r=Object.assign(t?Object.assign({},t):{line:1,column:1,offset:0},{_index:0,_bufferIndex:-1});const o={},i=[];let l=[],a=[],u=!0;const s={consume:function(e){ne(e)?(r.line++,r.column=1,r.offset+=-3===e?2:1,x()):-1!==e&&(r.column++,r.offset++);r._bufferIndex<0?r._index++:(r._bufferIndex++,r._bufferIndex===l[r._index].length&&(r._bufferIndex=-1,r._index++));c.previous=e,u=!0},enter:function(e,n){const t=n||{};return t.type=e,t.start=h(),c.events.push([\"enter\",t,c]),a.push(t),t},exit:function(e){const n=a.pop();return n.end=h(),c.events.push([\"exit\",n,c]),n},attempt:b((function(e,n){k(e,n.from)})),check:b(y),interrupt:b(y,{interrupt:!0})},c={previous:null,code:null,containerState:{},events:[],parser:e,sliceStream:d,sliceSerialize:function(e,n){return function(e,n){let t=-1;const r=[];let o;for(;++t<e.length;){const i=e[t];let l;if(\"string\"===typeof i)l=i;else switch(i){case-5:l=\"\\r\";break;case-4:l=\"\\n\";break;case-3:l=\"\\r\\n\";break;case-2:l=n?\" \":\"\\t\";break;case-1:if(!n&&o)continue;l=\" \";break;default:l=String.fromCharCode(i)}o=-2===i,r.push(l)}return r.join(\"\")}(d(e),n)},now:h,defineSkip:function(e){o[e.line]=e.column,x()},write:function(e){if(l=H(l,e),g(),null!==l[l.length-1])return[];return k(n,0),c.events=we(i,c.events,c),c.events}};let f,p=n.tokenize.call(c,s);return n.resolveAll&&i.push(n),c;function d(e){return function(e,n){const t=n.start._index,r=n.start._bufferIndex,o=n.end._index,i=n.end._bufferIndex;let l;t===o?l=[e[t].slice(r,i)]:(l=e.slice(t,o),r>-1&&(l[0]=l[0].slice(r)),i>0&&l.push(e[o].slice(0,i)));return l}(l,e)}function h(){return Object.assign({},r)}function g(){let e;for(;r._index<l.length;){const n=l[r._index];if(\"string\"===typeof n)for(e=r._index,r._bufferIndex<0&&(r._bufferIndex=0);r._index===e&&r._bufferIndex<n.length;)m(n.charCodeAt(r._bufferIndex));else m(n)}}function m(e){u=void 0,f=e,p=p(e)}function y(e,n){n.restore()}function b(e,n){return function(t,o,i){let l,f,p,d;return Array.isArray(t)?g(t):\"tokenize\"in t?g([t]):function(e){return n;function n(n){const t=null!==n&&e[n],r=null!==n&&e.null;return g([...Array.isArray(t)?t:t?[t]:[],...Array.isArray(r)?r:r?[r]:[]])(n)}}(t);function g(e){return l=e,f=0,0===e.length?i:m(e[f])}function m(e){return function(t){d=function(){const e=h(),n=c.previous,t=c.currentConstruct,o=c.events.length,i=Array.from(a);return{restore:l,from:o};function l(){r=e,c.previous=n,c.currentConstruct=t,c.events.length=o,a=i,x()}}(),p=e,e.partial||(c.currentConstruct=e);if(e.name&&c.parser.constructs.disable.null.includes(e.name))return b(t);return e.tokenize.call(n?Object.assign(Object.create(c),n):c,s,y,b)(t)}}function y(n){return u=!0,e(p,d),o}function b(e){return u=!0,d.restore(),++f<l.length?m(l[f]):i}}}function k(e,n){e.resolveAll&&!i.includes(e)&&i.push(e),e.resolve&&V(c.events,n,c.events.length-n,e.resolve(c.events.slice(n),c)),e.resolveTo&&(c.events=e.resolveTo(c.events,c))}function x(){r.line in o&&r.column<2&&(r.column=o[r.line],r.offset+=o[r.line]-1)}}const Ee={name:\"thematicBreak\",tokenize:function(e,n,t){let r,o=0;return function(n){return e.enter(\"thematicBreak\"),r=n,i(n)};function i(a){return a===r?(e.enter(\"thematicBreakSequence\"),l(a)):te(a)?le(e,i,\"whitespace\")(a):o<3||null!==a&&!ne(a)?t(a):(e.exit(\"thematicBreak\"),n(a))}function l(n){return n===r?(e.consume(n),o++,l):(e.exit(\"thematicBreakSequence\"),i(n))}}};const Ae={name:\"list\",tokenize:function(e,n,t){const r=this,o=r.events[r.events.length-1];let i=o&&\"linePrefix\"===o[1].type?o[2].sliceSerialize(o[1],!0).length:0,l=0;return function(n){const o=r.containerState.type||(42===n||43===n||45===n?\"listUnordered\":\"listOrdered\");if(\"listUnordered\"===o?!r.containerState.marker||n===r.containerState.marker:Q(n)){if(r.containerState.type||(r.containerState.type=o,e.enter(o,{_container:!0})),\"listUnordered\"===o)return e.enter(\"listItemPrefix\"),42===n||45===n?e.check(Ee,t,u)(n):u(n);if(!r.interrupt||49===n)return e.enter(\"listItemPrefix\"),e.enter(\"listItemValue\"),a(n)}return t(n)};function a(n){return Q(n)&&++l<10?(e.consume(n),a):(!r.interrupt||l<2)&&(r.containerState.marker?n===r.containerState.marker:41===n||46===n)?(e.exit(\"listItemValue\"),u(n)):t(n)}function u(n){return e.enter(\"listItemMarker\"),e.consume(n),e.exit(\"listItemMarker\"),r.containerState.marker=r.containerState.marker||n,e.check(ce,r.interrupt?t:s,e.attempt(Ce,f,c))}function s(e){return r.containerState.initialBlankLine=!0,i++,f(e)}function c(n){return te(n)?(e.enter(\"listItemPrefixWhitespace\"),e.consume(n),e.exit(\"listItemPrefixWhitespace\"),f):t(n)}function f(t){return r.containerState.size=i+r.sliceSerialize(e.exit(\"listItemPrefix\"),!0).length,n(t)}},continuation:{tokenize:function(e,n,t){const r=this;return r.containerState._closeFlow=void 0,e.check(ce,(function(t){return r.containerState.furtherBlankLines=r.containerState.furtherBlankLines||r.containerState.initialBlankLine,le(e,n,\"listItemIndent\",r.containerState.size+1)(t)}),(function(t){if(r.containerState.furtherBlankLines||!te(t))return r.containerState.furtherBlankLines=void 0,r.containerState.initialBlankLine=void 0,o(t);return r.containerState.furtherBlankLines=void 0,r.containerState.initialBlankLine=void 0,e.attempt(Le,n,o)(t)}));function o(o){return r.containerState._closeFlow=!0,r.interrupt=void 0,le(e,e.attempt(Ae,n,t),\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)(o)}}},exit:function(e){e.exit(this.containerState.type)}},Ce={tokenize:function(e,n,t){const r=this;return le(e,(function(e){const o=r.events[r.events.length-1];return!te(e)&&o&&\"listItemPrefixWhitespace\"===o[1].type?n(e):t(e)}),\"listItemPrefixWhitespace\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:5)},partial:!0},Le={tokenize:function(e,n,t){const r=this;return le(e,(function(e){const o=r.events[r.events.length-1];return o&&\"listItemIndent\"===o[1].type&&o[2].sliceSerialize(o[1],!0).length===r.containerState.size?n(e):t(e)}),\"listItemIndent\",r.containerState.size+1)},partial:!0};const Te={name:\"blockQuote\",tokenize:function(e,n,t){const r=this;return function(n){if(62===n){const t=r.containerState;return t.open||(e.enter(\"blockQuote\",{_container:!0}),t.open=!0),e.enter(\"blockQuotePrefix\"),e.enter(\"blockQuoteMarker\"),e.consume(n),e.exit(\"blockQuoteMarker\"),o}return t(n)};function o(t){return te(t)?(e.enter(\"blockQuotePrefixWhitespace\"),e.consume(t),e.exit(\"blockQuotePrefixWhitespace\"),e.exit(\"blockQuotePrefix\"),n):(e.exit(\"blockQuotePrefix\"),n(t))}},continuation:{tokenize:function(e,n,t){return le(e,e.attempt(Te,n,t),\"linePrefix\",this.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)}},exit:function(e){e.exit(\"blockQuote\")}};function De(e,n,t,r,o,i,l,a,u){const s=u||Number.POSITIVE_INFINITY;let c=0;return function(n){if(60===n)return e.enter(r),e.enter(o),e.enter(i),e.consume(n),e.exit(i),f;if(null===n||41===n||X(n))return t(n);return e.enter(r),e.enter(l),e.enter(a),e.enter(\"chunkString\",{contentType:\"string\"}),h(n)};function f(t){return 62===t?(e.enter(i),e.consume(t),e.exit(i),e.exit(o),e.exit(r),n):(e.enter(a),e.enter(\"chunkString\",{contentType:\"string\"}),p(t))}function p(n){return 62===n?(e.exit(\"chunkString\"),e.exit(a),f(n)):null===n||60===n||ne(n)?t(n):(e.consume(n),92===n?d:p)}function d(n){return 60===n||62===n||92===n?(e.consume(n),p):p(n)}function h(o){return 40===o?++c>s?t(o):(e.consume(o),h):41===o?c--?(e.consume(o),h):(e.exit(\"chunkString\"),e.exit(a),e.exit(l),e.exit(r),n(o)):null===o||ee(o)?c?t(o):(e.exit(\"chunkString\"),e.exit(a),e.exit(l),e.exit(r),n(o)):X(o)?t(o):(e.consume(o),92===o?g:h)}function g(n){return 40===n||41===n||92===n?(e.consume(n),h):h(n)}}function qe(e,n,t,r,o,i){const l=this;let a,u=0;return function(n){return e.enter(r),e.enter(o),e.consume(n),e.exit(o),e.enter(i),s};function s(f){return null===f||91===f||93===f&&!a||94===f&&!u&&\"_hiddenFootnoteSupport\"in l.parser.constructs||u>999?t(f):93===f?(e.exit(i),e.enter(o),e.consume(f),e.exit(o),e.exit(r),n):ne(f)?(e.enter(\"lineEnding\"),e.consume(f),e.exit(\"lineEnding\"),s):(e.enter(\"chunkString\",{contentType:\"string\"}),c(f))}function c(n){return null===n||91===n||93===n||ne(n)||u++>999?(e.exit(\"chunkString\"),s(n)):(e.consume(n),a=a||!te(n),92===n?f:c)}function f(n){return 91===n||92===n||93===n?(e.consume(n),u++,c):c(n)}}function Fe(e,n,t,r,o,i){let l;return function(n){return e.enter(r),e.enter(o),e.consume(n),e.exit(o),l=40===n?41:n,a};function a(t){return t===l?(e.enter(o),e.consume(t),e.exit(o),e.exit(r),n):(e.enter(i),u(t))}function u(n){return n===l?(e.exit(i),a(l)):null===n?t(n):ne(n)?(e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),le(e,u,\"linePrefix\")):(e.enter(\"chunkString\",{contentType:\"string\"}),s(n))}function s(n){return n===l||null===n||ne(n)?(e.exit(\"chunkString\"),u(n)):(e.consume(n),92===n?c:s)}function c(n){return n===l||92===n?(e.consume(n),s):s(n)}}function Pe(e,n){let t;return function r(o){if(ne(o))return e.enter(\"lineEnding\"),e.consume(o),e.exit(\"lineEnding\"),t=!0,r;if(te(o))return le(e,r,t?\"linePrefix\":\"lineSuffix\")(o);return n(o)}}function Oe(e){return e.replace(/[\\t\\n\\r ]+/g,\" \").replace(/^ | $/g,\"\").toLowerCase().toUpperCase()}const Ie={name:\"definition\",tokenize:function(e,n,t){const r=this;let o;return function(n){return e.enter(\"definition\"),qe.call(r,e,i,t,\"definitionLabel\",\"definitionLabelMarker\",\"definitionLabelString\")(n)};function i(n){return o=Oe(r.sliceSerialize(r.events[r.events.length-1][1]).slice(1,-1)),58===n?(e.enter(\"definitionMarker\"),e.consume(n),e.exit(\"definitionMarker\"),Pe(e,De(e,e.attempt(Re,le(e,l,\"whitespace\"),le(e,l,\"whitespace\")),t,\"definitionDestination\",\"definitionDestinationLiteral\",\"definitionDestinationLiteralMarker\",\"definitionDestinationRaw\",\"definitionDestinationString\"))):t(n)}function l(i){return null===i||ne(i)?(e.exit(\"definition\"),r.parser.defined.includes(o)||r.parser.defined.push(o),n(i)):t(i)}}},Re={tokenize:function(e,n,t){return function(n){return ee(n)?Pe(e,r)(n):t(n)};function r(n){return 34===n||39===n||40===n?Fe(e,le(e,o,\"whitespace\"),t,\"definitionTitle\",\"definitionTitleMarker\",\"definitionTitleString\")(n):t(n)}function o(e){return null===e||ne(e)?n(e):t(e)}},partial:!0};const Be={name:\"codeIndented\",tokenize:function(e,n,t){const r=this;return function(n){return e.enter(\"codeIndented\"),le(e,o,\"linePrefix\",5)(n)};function o(e){const n=r.events[r.events.length-1];return n&&\"linePrefix\"===n[1].type&&n[2].sliceSerialize(n[1],!0).length>=4?i(e):t(e)}function i(n){return null===n?a(n):ne(n)?e.attempt(ze,i,a)(n):(e.enter(\"codeFlowValue\"),l(n))}function l(n){return null===n||ne(n)?(e.exit(\"codeFlowValue\"),i(n)):(e.consume(n),l)}function a(t){return e.exit(\"codeIndented\"),n(t)}}},ze={tokenize:function(e,n,t){const r=this;return o;function o(n){return r.parser.lazy[r.now().line]?t(n):ne(n)?(e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),o):le(e,i,\"linePrefix\",5)(n)}function i(e){const i=r.events[r.events.length-1];return i&&\"linePrefix\"===i[1].type&&i[2].sliceSerialize(i[1],!0).length>=4?n(e):ne(e)?o(e):t(e)}},partial:!0};const Ne={name:\"setextUnderline\",tokenize:function(e,n,t){const r=this;let o,i,l=r.events.length;for(;l--;)if(\"lineEnding\"!==r.events[l][1].type&&\"linePrefix\"!==r.events[l][1].type&&\"content\"!==r.events[l][1].type){i=\"paragraph\"===r.events[l][1].type;break}return function(n){if(!r.parser.lazy[r.now().line]&&(r.interrupt||i))return e.enter(\"setextHeadingLine\"),e.enter(\"setextHeadingLineSequence\"),o=n,a(n);return t(n)};function a(n){return n===o?(e.consume(n),a):(e.exit(\"setextHeadingLineSequence\"),le(e,u,\"lineSuffix\")(n))}function u(r){return null===r||ne(r)?(e.exit(\"setextHeadingLine\"),n(r)):t(r)}},resolveTo:function(e,n){let t,r,o,i=e.length;for(;i--;)if(\"enter\"===e[i][0]){if(\"content\"===e[i][1].type){t=i;break}\"paragraph\"===e[i][1].type&&(r=i)}else\"content\"===e[i][1].type&&e.splice(i,1),o||\"definition\"!==e[i][1].type||(o=i);const l={type:\"setextHeading\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[e.length-1][1].end)};e[r][1].type=\"setextHeadingText\",o?(e.splice(r,0,[\"enter\",l,n]),e.splice(o+1,0,[\"exit\",e[t][1],n]),e[t][1].end=Object.assign({},e[o][1].end)):e[t][1]=l;return e.push([\"exit\",l,n]),e}};const Me=[\"address\",\"article\",\"aside\",\"base\",\"basefont\",\"blockquote\",\"body\",\"caption\",\"center\",\"col\",\"colgroup\",\"dd\",\"details\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"frame\",\"frameset\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hr\",\"html\",\"iframe\",\"legend\",\"li\",\"link\",\"main\",\"menu\",\"menuitem\",\"nav\",\"noframes\",\"ol\",\"optgroup\",\"option\",\"p\",\"param\",\"section\",\"summary\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"title\",\"tr\",\"track\",\"ul\"],Ue=[\"pre\",\"script\",\"style\",\"textarea\"],je={name:\"htmlFlow\",tokenize:function(e,n,t){const r=this;let o,i,l,a,u;return function(n){return e.enter(\"htmlFlow\"),e.enter(\"htmlFlowData\"),e.consume(n),s};function s(a){return 33===a?(e.consume(a),c):47===a?(e.consume(a),d):63===a?(e.consume(a),o=3,r.interrupt?n:I):W(a)?(e.consume(a),l=String.fromCharCode(a),i=!0,h):t(a)}function c(i){return 45===i?(e.consume(i),o=2,f):91===i?(e.consume(i),o=5,l=\"CDATA[\",a=0,p):W(i)?(e.consume(i),o=4,r.interrupt?n:I):t(i)}function f(o){return 45===o?(e.consume(o),r.interrupt?n:I):t(o)}function p(o){return o===l.charCodeAt(a++)?(e.consume(o),a===l.length?r.interrupt?n:C:p):t(o)}function d(n){return W(n)?(e.consume(n),l=String.fromCharCode(n),h):t(n)}function h(a){return null===a||47===a||62===a||ee(a)?47!==a&&i&&Ue.includes(l.toLowerCase())?(o=1,r.interrupt?n(a):C(a)):Me.includes(l.toLowerCase())?(o=6,47===a?(e.consume(a),g):r.interrupt?n(a):C(a)):(o=7,r.interrupt&&!r.parser.lazy[r.now().line]?t(a):i?y(a):m(a)):45===a||J(a)?(e.consume(a),l+=String.fromCharCode(a),h):t(a)}function g(o){return 62===o?(e.consume(o),r.interrupt?n:C):t(o)}function m(n){return te(n)?(e.consume(n),m):E(n)}function y(n){return 47===n?(e.consume(n),E):58===n||95===n||W(n)?(e.consume(n),b):te(n)?(e.consume(n),y):E(n)}function b(n){return 45===n||46===n||58===n||95===n||J(n)?(e.consume(n),b):k(n)}function k(n){return 61===n?(e.consume(n),x):te(n)?(e.consume(n),k):y(n)}function x(n){return null===n||60===n||61===n||62===n||96===n?t(n):34===n||39===n?(e.consume(n),u=n,v):te(n)?(e.consume(n),x):(u=null,w(n))}function v(n){return null===n||ne(n)?t(n):n===u?(e.consume(n),S):(e.consume(n),v)}function w(n){return null===n||34===n||39===n||60===n||61===n||62===n||96===n||ee(n)?k(n):(e.consume(n),w)}function S(e){return 47===e||62===e||te(e)?y(e):t(e)}function E(n){return 62===n?(e.consume(n),A):t(n)}function A(n){return te(n)?(e.consume(n),A):null===n||ne(n)?C(n):t(n)}function C(n){return 45===n&&2===o?(e.consume(n),q):60===n&&1===o?(e.consume(n),F):62===n&&4===o?(e.consume(n),R):63===n&&3===o?(e.consume(n),I):93===n&&5===o?(e.consume(n),O):!ne(n)||6!==o&&7!==o?null===n||ne(n)?L(n):(e.consume(n),C):e.check(Ve,R,L)(n)}function L(n){return e.exit(\"htmlFlowData\"),T(n)}function T(n){return null===n?B(n):ne(n)?e.attempt({tokenize:D,partial:!0},T,B)(n):(e.enter(\"htmlFlowData\"),C(n))}function D(e,n,t){return function(n){return e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),o};function o(e){return r.parser.lazy[r.now().line]?t(e):n(e)}}function q(n){return 45===n?(e.consume(n),I):C(n)}function F(n){return 47===n?(e.consume(n),l=\"\",P):C(n)}function P(n){return 62===n&&Ue.includes(l.toLowerCase())?(e.consume(n),R):W(n)&&l.length<8?(e.consume(n),l+=String.fromCharCode(n),P):C(n)}function O(n){return 93===n?(e.consume(n),I):C(n)}function I(n){return 62===n?(e.consume(n),R):45===n&&2===o?(e.consume(n),I):C(n)}function R(n){return null===n||ne(n)?(e.exit(\"htmlFlowData\"),B(n)):(e.consume(n),R)}function B(t){return e.exit(\"htmlFlow\"),n(t)}},resolveTo:function(e){let n=e.length;for(;n--&&(\"enter\"!==e[n][0]||\"htmlFlow\"!==e[n][1].type););n>1&&\"linePrefix\"===e[n-2][1].type&&(e[n][1].start=e[n-2][1].start,e[n+1][1].start=e[n-2][1].start,e.splice(n-2,2));return e},concrete:!0},Ve={tokenize:function(e,n,t){return function(r){return e.exit(\"htmlFlowData\"),e.enter(\"lineEndingBlank\"),e.consume(r),e.exit(\"lineEndingBlank\"),e.attempt(ce,n,t)}},partial:!0};const He={name:\"codeFenced\",tokenize:function(e,n,t){const r=this,o={tokenize:function(e,n,t){let r=0;return le(e,o,\"linePrefix\",this.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4);function o(n){return e.enter(\"codeFencedFence\"),e.enter(\"codeFencedFenceSequence\"),i(n)}function i(n){return n===u?(e.consume(n),r++,i):r<s?t(n):(e.exit(\"codeFencedFenceSequence\"),le(e,l,\"whitespace\")(n))}function l(r){return null===r||ne(r)?(e.exit(\"codeFencedFence\"),n(r)):t(r)}},partial:!0},i={tokenize:function(e,n,t){const r=this;return o;function o(n){return e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),i}function i(e){return r.parser.lazy[r.now().line]?t(e):n(e)}},partial:!0},l=this.events[this.events.length-1],a=l&&\"linePrefix\"===l[1].type?l[2].sliceSerialize(l[1],!0).length:0;let u,s=0;return function(n){return e.enter(\"codeFenced\"),e.enter(\"codeFencedFence\"),e.enter(\"codeFencedFenceSequence\"),u=n,c(n)};function c(n){return n===u?(e.consume(n),s++,c):(e.exit(\"codeFencedFenceSequence\"),s<3?t(n):le(e,f,\"whitespace\")(n))}function f(n){return null===n||ne(n)?g(n):(e.enter(\"codeFencedFenceInfo\"),e.enter(\"chunkString\",{contentType:\"string\"}),p(n))}function p(n){return null===n||ee(n)?(e.exit(\"chunkString\"),e.exit(\"codeFencedFenceInfo\"),le(e,d,\"whitespace\")(n)):96===n&&n===u?t(n):(e.consume(n),p)}function d(n){return null===n||ne(n)?g(n):(e.enter(\"codeFencedFenceMeta\"),e.enter(\"chunkString\",{contentType:\"string\"}),h(n))}function h(n){return null===n||ne(n)?(e.exit(\"chunkString\"),e.exit(\"codeFencedFenceMeta\"),g(n)):96===n&&n===u?t(n):(e.consume(n),h)}function g(t){return e.exit(\"codeFencedFence\"),r.interrupt?n(t):m(t)}function m(n){return null===n?b(n):ne(n)?e.attempt(i,e.attempt(o,b,a?le(e,m,\"linePrefix\",a+1):m),b)(n):(e.enter(\"codeFlowValue\"),y(n))}function y(n){return null===n||ne(n)?(e.exit(\"codeFlowValue\"),m(n)):(e.consume(n),y)}function b(t){return e.exit(\"codeFenced\"),n(t)}},concrete:!0};const _e={AElig:\"\\xc6\",AMP:\"&\",Aacute:\"\\xc1\",Abreve:\"\\u0102\",Acirc:\"\\xc2\",Acy:\"\\u0410\",Afr:\"\\ud835\\udd04\",Agrave:\"\\xc0\",Alpha:\"\\u0391\",Amacr:\"\\u0100\",And:\"\\u2a53\",Aogon:\"\\u0104\",Aopf:\"\\ud835\\udd38\",ApplyFunction:\"\\u2061\",Aring:\"\\xc5\",Ascr:\"\\ud835\\udc9c\",Assign:\"\\u2254\",Atilde:\"\\xc3\",Auml:\"\\xc4\",Backslash:\"\\u2216\",Barv:\"\\u2ae7\",Barwed:\"\\u2306\",Bcy:\"\\u0411\",Because:\"\\u2235\",Bernoullis:\"\\u212c\",Beta:\"\\u0392\",Bfr:\"\\ud835\\udd05\",Bopf:\"\\ud835\\udd39\",Breve:\"\\u02d8\",Bscr:\"\\u212c\",Bumpeq:\"\\u224e\",CHcy:\"\\u0427\",COPY:\"\\xa9\",Cacute:\"\\u0106\",Cap:\"\\u22d2\",CapitalDifferentialD:\"\\u2145\",Cayleys:\"\\u212d\",Ccaron:\"\\u010c\",Ccedil:\"\\xc7\",Ccirc:\"\\u0108\",Cconint:\"\\u2230\",Cdot:\"\\u010a\",Cedilla:\"\\xb8\",CenterDot:\"\\xb7\",Cfr:\"\\u212d\",Chi:\"\\u03a7\",CircleDot:\"\\u2299\",CircleMinus:\"\\u2296\",CirclePlus:\"\\u2295\",CircleTimes:\"\\u2297\",ClockwiseContourIntegral:\"\\u2232\",CloseCurlyDoubleQuote:\"\\u201d\",CloseCurlyQuote:\"\\u2019\",Colon:\"\\u2237\",Colone:\"\\u2a74\",Congruent:\"\\u2261\",Conint:\"\\u222f\",ContourIntegral:\"\\u222e\",Copf:\"\\u2102\",Coproduct:\"\\u2210\",CounterClockwiseContourIntegral:\"\\u2233\",Cross:\"\\u2a2f\",Cscr:\"\\ud835\\udc9e\",Cup:\"\\u22d3\",CupCap:\"\\u224d\",DD:\"\\u2145\",DDotrahd:\"\\u2911\",DJcy:\"\\u0402\",DScy:\"\\u0405\",DZcy:\"\\u040f\",Dagger:\"\\u2021\",Darr:\"\\u21a1\",Dashv:\"\\u2ae4\",Dcaron:\"\\u010e\",Dcy:\"\\u0414\",Del:\"\\u2207\",Delta:\"\\u0394\",Dfr:\"\\ud835\\udd07\",DiacriticalAcute:\"\\xb4\",DiacriticalDot:\"\\u02d9\",DiacriticalDoubleAcute:\"\\u02dd\",DiacriticalGrave:\"`\",DiacriticalTilde:\"\\u02dc\",Diamond:\"\\u22c4\",DifferentialD:\"\\u2146\",Dopf:\"\\ud835\\udd3b\",Dot:\"\\xa8\",DotDot:\"\\u20dc\",DotEqual:\"\\u2250\",DoubleContourIntegral:\"\\u222f\",DoubleDot:\"\\xa8\",DoubleDownArrow:\"\\u21d3\",DoubleLeftArrow:\"\\u21d0\",DoubleLeftRightArrow:\"\\u21d4\",DoubleLeftTee:\"\\u2ae4\",DoubleLongLeftArrow:\"\\u27f8\",DoubleLongLeftRightArrow:\"\\u27fa\",DoubleLongRightArrow:\"\\u27f9\",DoubleRightArrow:\"\\u21d2\",DoubleRightTee:\"\\u22a8\",DoubleUpArrow:\"\\u21d1\",DoubleUpDownArrow:\"\\u21d5\",DoubleVerticalBar:\"\\u2225\",DownArrow:\"\\u2193\",DownArrowBar:\"\\u2913\",DownArrowUpArrow:\"\\u21f5\",DownBreve:\"\\u0311\",DownLeftRightVector:\"\\u2950\",DownLeftTeeVector:\"\\u295e\",DownLeftVector:\"\\u21bd\",DownLeftVectorBar:\"\\u2956\",DownRightTeeVector:\"\\u295f\",DownRightVector:\"\\u21c1\",DownRightVectorBar:\"\\u2957\",DownTee:\"\\u22a4\",DownTeeArrow:\"\\u21a7\",Downarrow:\"\\u21d3\",Dscr:\"\\ud835\\udc9f\",Dstrok:\"\\u0110\",ENG:\"\\u014a\",ETH:\"\\xd0\",Eacute:\"\\xc9\",Ecaron:\"\\u011a\",Ecirc:\"\\xca\",Ecy:\"\\u042d\",Edot:\"\\u0116\",Efr:\"\\ud835\\udd08\",Egrave:\"\\xc8\",Element:\"\\u2208\",Emacr:\"\\u0112\",EmptySmallSquare:\"\\u25fb\",EmptyVerySmallSquare:\"\\u25ab\",Eogon:\"\\u0118\",Eopf:\"\\ud835\\udd3c\",Epsilon:\"\\u0395\",Equal:\"\\u2a75\",EqualTilde:\"\\u2242\",Equilibrium:\"\\u21cc\",Escr:\"\\u2130\",Esim:\"\\u2a73\",Eta:\"\\u0397\",Euml:\"\\xcb\",Exists:\"\\u2203\",ExponentialE:\"\\u2147\",Fcy:\"\\u0424\",Ffr:\"\\ud835\\udd09\",FilledSmallSquare:\"\\u25fc\",FilledVerySmallSquare:\"\\u25aa\",Fopf:\"\\ud835\\udd3d\",ForAll:\"\\u2200\",Fouriertrf:\"\\u2131\",Fscr:\"\\u2131\",GJcy:\"\\u0403\",GT:\">\",Gamma:\"\\u0393\",Gammad:\"\\u03dc\",Gbreve:\"\\u011e\",Gcedil:\"\\u0122\",Gcirc:\"\\u011c\",Gcy:\"\\u0413\",Gdot:\"\\u0120\",Gfr:\"\\ud835\\udd0a\",Gg:\"\\u22d9\",Gopf:\"\\ud835\\udd3e\",GreaterEqual:\"\\u2265\",GreaterEqualLess:\"\\u22db\",GreaterFullEqual:\"\\u2267\",GreaterGreater:\"\\u2aa2\",GreaterLess:\"\\u2277\",GreaterSlantEqual:\"\\u2a7e\",GreaterTilde:\"\\u2273\",Gscr:\"\\ud835\\udca2\",Gt:\"\\u226b\",HARDcy:\"\\u042a\",Hacek:\"\\u02c7\",Hat:\"^\",Hcirc:\"\\u0124\",Hfr:\"\\u210c\",HilbertSpace:\"\\u210b\",Hopf:\"\\u210d\",HorizontalLine:\"\\u2500\",Hscr:\"\\u210b\",Hstrok:\"\\u0126\",HumpDownHump:\"\\u224e\",HumpEqual:\"\\u224f\",IEcy:\"\\u0415\",IJlig:\"\\u0132\",IOcy:\"\\u0401\",Iacute:\"\\xcd\",Icirc:\"\\xce\",Icy:\"\\u0418\",Idot:\"\\u0130\",Ifr:\"\\u2111\",Igrave:\"\\xcc\",Im:\"\\u2111\",Imacr:\"\\u012a\",ImaginaryI:\"\\u2148\",Implies:\"\\u21d2\",Int:\"\\u222c\",Integral:\"\\u222b\",Intersection:\"\\u22c2\",InvisibleComma:\"\\u2063\",InvisibleTimes:\"\\u2062\",Iogon:\"\\u012e\",Iopf:\"\\ud835\\udd40\",Iota:\"\\u0399\",Iscr:\"\\u2110\",Itilde:\"\\u0128\",Iukcy:\"\\u0406\",Iuml:\"\\xcf\",Jcirc:\"\\u0134\",Jcy:\"\\u0419\",Jfr:\"\\ud835\\udd0d\",Jopf:\"\\ud835\\udd41\",Jscr:\"\\ud835\\udca5\",Jsercy:\"\\u0408\",Jukcy:\"\\u0404\",KHcy:\"\\u0425\",KJcy:\"\\u040c\",Kappa:\"\\u039a\",Kcedil:\"\\u0136\",Kcy:\"\\u041a\",Kfr:\"\\ud835\\udd0e\",Kopf:\"\\ud835\\udd42\",Kscr:\"\\ud835\\udca6\",LJcy:\"\\u0409\",LT:\"<\",Lacute:\"\\u0139\",Lambda:\"\\u039b\",Lang:\"\\u27ea\",Laplacetrf:\"\\u2112\",Larr:\"\\u219e\",Lcaron:\"\\u013d\",Lcedil:\"\\u013b\",Lcy:\"\\u041b\",LeftAngleBracket:\"\\u27e8\",LeftArrow:\"\\u2190\",LeftArrowBar:\"\\u21e4\",LeftArrowRightArrow:\"\\u21c6\",LeftCeiling:\"\\u2308\",LeftDoubleBracket:\"\\u27e6\",LeftDownTeeVector:\"\\u2961\",LeftDownVector:\"\\u21c3\",LeftDownVectorBar:\"\\u2959\",LeftFloor:\"\\u230a\",LeftRightArrow:\"\\u2194\",LeftRightVector:\"\\u294e\",LeftTee:\"\\u22a3\",LeftTeeArrow:\"\\u21a4\",LeftTeeVector:\"\\u295a\",LeftTriangle:\"\\u22b2\",LeftTriangleBar:\"\\u29cf\",LeftTriangleEqual:\"\\u22b4\",LeftUpDownVector:\"\\u2951\",LeftUpTeeVector:\"\\u2960\",LeftUpVector:\"\\u21bf\",LeftUpVectorBar:\"\\u2958\",LeftVector:\"\\u21bc\",LeftVectorBar:\"\\u2952\",Leftarrow:\"\\u21d0\",Leftrightarrow:\"\\u21d4\",LessEqualGreater:\"\\u22da\",LessFullEqual:\"\\u2266\",LessGreater:\"\\u2276\",LessLess:\"\\u2aa1\",LessSlantEqual:\"\\u2a7d\",LessTilde:\"\\u2272\",Lfr:\"\\ud835\\udd0f\",Ll:\"\\u22d8\",Lleftarrow:\"\\u21da\",Lmidot:\"\\u013f\",LongLeftArrow:\"\\u27f5\",LongLeftRightArrow:\"\\u27f7\",LongRightArrow:\"\\u27f6\",Longleftarrow:\"\\u27f8\",Longleftrightarrow:\"\\u27fa\",Longrightarrow:\"\\u27f9\",Lopf:\"\\ud835\\udd43\",LowerLeftArrow:\"\\u2199\",LowerRightArrow:\"\\u2198\",Lscr:\"\\u2112\",Lsh:\"\\u21b0\",Lstrok:\"\\u0141\",Lt:\"\\u226a\",Map:\"\\u2905\",Mcy:\"\\u041c\",MediumSpace:\"\\u205f\",Mellintrf:\"\\u2133\",Mfr:\"\\ud835\\udd10\",MinusPlus:\"\\u2213\",Mopf:\"\\ud835\\udd44\",Mscr:\"\\u2133\",Mu:\"\\u039c\",NJcy:\"\\u040a\",Nacute:\"\\u0143\",Ncaron:\"\\u0147\",Ncedil:\"\\u0145\",Ncy:\"\\u041d\",NegativeMediumSpace:\"\\u200b\",NegativeThickSpace:\"\\u200b\",NegativeThinSpace:\"\\u200b\",NegativeVeryThinSpace:\"\\u200b\",NestedGreaterGreater:\"\\u226b\",NestedLessLess:\"\\u226a\",NewLine:\"\\n\",Nfr:\"\\ud835\\udd11\",NoBreak:\"\\u2060\",NonBreakingSpace:\"\\xa0\",Nopf:\"\\u2115\",Not:\"\\u2aec\",NotCongruent:\"\\u2262\",NotCupCap:\"\\u226d\",NotDoubleVerticalBar:\"\\u2226\",NotElement:\"\\u2209\",NotEqual:\"\\u2260\",NotEqualTilde:\"\\u2242\\u0338\",NotExists:\"\\u2204\",NotGreater:\"\\u226f\",NotGreaterEqual:\"\\u2271\",NotGreaterFullEqual:\"\\u2267\\u0338\",NotGreaterGreater:\"\\u226b\\u0338\",NotGreaterLess:\"\\u2279\",NotGreaterSlantEqual:\"\\u2a7e\\u0338\",NotGreaterTilde:\"\\u2275\",NotHumpDownHump:\"\\u224e\\u0338\",NotHumpEqual:\"\\u224f\\u0338\",NotLeftTriangle:\"\\u22ea\",NotLeftTriangleBar:\"\\u29cf\\u0338\",NotLeftTriangleEqual:\"\\u22ec\",NotLess:\"\\u226e\",NotLessEqual:\"\\u2270\",NotLessGreater:\"\\u2278\",NotLessLess:\"\\u226a\\u0338\",NotLessSlantEqual:\"\\u2a7d\\u0338\",NotLessTilde:\"\\u2274\",NotNestedGreaterGreater:\"\\u2aa2\\u0338\",NotNestedLessLess:\"\\u2aa1\\u0338\",NotPrecedes:\"\\u2280\",NotPrecedesEqual:\"\\u2aaf\\u0338\",NotPrecedesSlantEqual:\"\\u22e0\",NotReverseElement:\"\\u220c\",NotRightTriangle:\"\\u22eb\",NotRightTriangleBar:\"\\u29d0\\u0338\",NotRightTriangleEqual:\"\\u22ed\",NotSquareSubset:\"\\u228f\\u0338\",NotSquareSubsetEqual:\"\\u22e2\",NotSquareSuperset:\"\\u2290\\u0338\",NotSquareSupersetEqual:\"\\u22e3\",NotSubset:\"\\u2282\\u20d2\",NotSubsetEqual:\"\\u2288\",NotSucceeds:\"\\u2281\",NotSucceedsEqual:\"\\u2ab0\\u0338\",NotSucceedsSlantEqual:\"\\u22e1\",NotSucceedsTilde:\"\\u227f\\u0338\",NotSuperset:\"\\u2283\\u20d2\",NotSupersetEqual:\"\\u2289\",NotTilde:\"\\u2241\",NotTildeEqual:\"\\u2244\",NotTildeFullEqual:\"\\u2247\",NotTildeTilde:\"\\u2249\",NotVerticalBar:\"\\u2224\",Nscr:\"\\ud835\\udca9\",Ntilde:\"\\xd1\",Nu:\"\\u039d\",OElig:\"\\u0152\",Oacute:\"\\xd3\",Ocirc:\"\\xd4\",Ocy:\"\\u041e\",Odblac:\"\\u0150\",Ofr:\"\\ud835\\udd12\",Ograve:\"\\xd2\",Omacr:\"\\u014c\",Omega:\"\\u03a9\",Omicron:\"\\u039f\",Oopf:\"\\ud835\\udd46\",OpenCurlyDoubleQuote:\"\\u201c\",OpenCurlyQuote:\"\\u2018\",Or:\"\\u2a54\",Oscr:\"\\ud835\\udcaa\",Oslash:\"\\xd8\",Otilde:\"\\xd5\",Otimes:\"\\u2a37\",Ouml:\"\\xd6\",OverBar:\"\\u203e\",OverBrace:\"\\u23de\",OverBracket:\"\\u23b4\",OverParenthesis:\"\\u23dc\",PartialD:\"\\u2202\",Pcy:\"\\u041f\",Pfr:\"\\ud835\\udd13\",Phi:\"\\u03a6\",Pi:\"\\u03a0\",PlusMinus:\"\\xb1\",Poincareplane:\"\\u210c\",Popf:\"\\u2119\",Pr:\"\\u2abb\",Precedes:\"\\u227a\",PrecedesEqual:\"\\u2aaf\",PrecedesSlantEqual:\"\\u227c\",PrecedesTilde:\"\\u227e\",Prime:\"\\u2033\",Product:\"\\u220f\",Proportion:\"\\u2237\",Proportional:\"\\u221d\",Pscr:\"\\ud835\\udcab\",Psi:\"\\u03a8\",QUOT:'\"',Qfr:\"\\ud835\\udd14\",Qopf:\"\\u211a\",Qscr:\"\\ud835\\udcac\",RBarr:\"\\u2910\",REG:\"\\xae\",Racute:\"\\u0154\",Rang:\"\\u27eb\",Rarr:\"\\u21a0\",Rarrtl:\"\\u2916\",Rcaron:\"\\u0158\",Rcedil:\"\\u0156\",Rcy:\"\\u0420\",Re:\"\\u211c\",ReverseElement:\"\\u220b\",ReverseEquilibrium:\"\\u21cb\",ReverseUpEquilibrium:\"\\u296f\",Rfr:\"\\u211c\",Rho:\"\\u03a1\",RightAngleBracket:\"\\u27e9\",RightArrow:\"\\u2192\",RightArrowBar:\"\\u21e5\",RightArrowLeftArrow:\"\\u21c4\",RightCeiling:\"\\u2309\",RightDoubleBracket:\"\\u27e7\",RightDownTeeVector:\"\\u295d\",RightDownVector:\"\\u21c2\",RightDownVectorBar:\"\\u2955\",RightFloor:\"\\u230b\",RightTee:\"\\u22a2\",RightTeeArrow:\"\\u21a6\",RightTeeVector:\"\\u295b\",RightTriangle:\"\\u22b3\",RightTriangleBar:\"\\u29d0\",RightTriangleEqual:\"\\u22b5\",RightUpDownVector:\"\\u294f\",RightUpTeeVector:\"\\u295c\",RightUpVector:\"\\u21be\",RightUpVectorBar:\"\\u2954\",RightVector:\"\\u21c0\",RightVectorBar:\"\\u2953\",Rightarrow:\"\\u21d2\",Ropf:\"\\u211d\",RoundImplies:\"\\u2970\",Rrightarrow:\"\\u21db\",Rscr:\"\\u211b\",Rsh:\"\\u21b1\",RuleDelayed:\"\\u29f4\",SHCHcy:\"\\u0429\",SHcy:\"\\u0428\",SOFTcy:\"\\u042c\",Sacute:\"\\u015a\",Sc:\"\\u2abc\",Scaron:\"\\u0160\",Scedil:\"\\u015e\",Scirc:\"\\u015c\",Scy:\"\\u0421\",Sfr:\"\\ud835\\udd16\",ShortDownArrow:\"\\u2193\",ShortLeftArrow:\"\\u2190\",ShortRightArrow:\"\\u2192\",ShortUpArrow:\"\\u2191\",Sigma:\"\\u03a3\",SmallCircle:\"\\u2218\",Sopf:\"\\ud835\\udd4a\",Sqrt:\"\\u221a\",Square:\"\\u25a1\",SquareIntersection:\"\\u2293\",SquareSubset:\"\\u228f\",SquareSubsetEqual:\"\\u2291\",SquareSuperset:\"\\u2290\",SquareSupersetEqual:\"\\u2292\",SquareUnion:\"\\u2294\",Sscr:\"\\ud835\\udcae\",Star:\"\\u22c6\",Sub:\"\\u22d0\",Subset:\"\\u22d0\",SubsetEqual:\"\\u2286\",Succeeds:\"\\u227b\",SucceedsEqual:\"\\u2ab0\",SucceedsSlantEqual:\"\\u227d\",SucceedsTilde:\"\\u227f\",SuchThat:\"\\u220b\",Sum:\"\\u2211\",Sup:\"\\u22d1\",Superset:\"\\u2283\",SupersetEqual:\"\\u2287\",Supset:\"\\u22d1\",THORN:\"\\xde\",TRADE:\"\\u2122\",TSHcy:\"\\u040b\",TScy:\"\\u0426\",Tab:\"\\t\",Tau:\"\\u03a4\",Tcaron:\"\\u0164\",Tcedil:\"\\u0162\",Tcy:\"\\u0422\",Tfr:\"\\ud835\\udd17\",Therefore:\"\\u2234\",Theta:\"\\u0398\",ThickSpace:\"\\u205f\\u200a\",ThinSpace:\"\\u2009\",Tilde:\"\\u223c\",TildeEqual:\"\\u2243\",TildeFullEqual:\"\\u2245\",TildeTilde:\"\\u2248\",Topf:\"\\ud835\\udd4b\",TripleDot:\"\\u20db\",Tscr:\"\\ud835\\udcaf\",Tstrok:\"\\u0166\",Uacute:\"\\xda\",Uarr:\"\\u219f\",Uarrocir:\"\\u2949\",Ubrcy:\"\\u040e\",Ubreve:\"\\u016c\",Ucirc:\"\\xdb\",Ucy:\"\\u0423\",Udblac:\"\\u0170\",Ufr:\"\\ud835\\udd18\",Ugrave:\"\\xd9\",Umacr:\"\\u016a\",UnderBar:\"_\",UnderBrace:\"\\u23df\",UnderBracket:\"\\u23b5\",UnderParenthesis:\"\\u23dd\",Union:\"\\u22c3\",UnionPlus:\"\\u228e\",Uogon:\"\\u0172\",Uopf:\"\\ud835\\udd4c\",UpArrow:\"\\u2191\",UpArrowBar:\"\\u2912\",UpArrowDownArrow:\"\\u21c5\",UpDownArrow:\"\\u2195\",UpEquilibrium:\"\\u296e\",UpTee:\"\\u22a5\",UpTeeArrow:\"\\u21a5\",Uparrow:\"\\u21d1\",Updownarrow:\"\\u21d5\",UpperLeftArrow:\"\\u2196\",UpperRightArrow:\"\\u2197\",Upsi:\"\\u03d2\",Upsilon:\"\\u03a5\",Uring:\"\\u016e\",Uscr:\"\\ud835\\udcb0\",Utilde:\"\\u0168\",Uuml:\"\\xdc\",VDash:\"\\u22ab\",Vbar:\"\\u2aeb\",Vcy:\"\\u0412\",Vdash:\"\\u22a9\",Vdashl:\"\\u2ae6\",Vee:\"\\u22c1\",Verbar:\"\\u2016\",Vert:\"\\u2016\",VerticalBar:\"\\u2223\",VerticalLine:\"|\",VerticalSeparator:\"\\u2758\",VerticalTilde:\"\\u2240\",VeryThinSpace:\"\\u200a\",Vfr:\"\\ud835\\udd19\",Vopf:\"\\ud835\\udd4d\",Vscr:\"\\ud835\\udcb1\",Vvdash:\"\\u22aa\",Wcirc:\"\\u0174\",Wedge:\"\\u22c0\",Wfr:\"\\ud835\\udd1a\",Wopf:\"\\ud835\\udd4e\",Wscr:\"\\ud835\\udcb2\",Xfr:\"\\ud835\\udd1b\",Xi:\"\\u039e\",Xopf:\"\\ud835\\udd4f\",Xscr:\"\\ud835\\udcb3\",YAcy:\"\\u042f\",YIcy:\"\\u0407\",YUcy:\"\\u042e\",Yacute:\"\\xdd\",Ycirc:\"\\u0176\",Ycy:\"\\u042b\",Yfr:\"\\ud835\\udd1c\",Yopf:\"\\ud835\\udd50\",Yscr:\"\\ud835\\udcb4\",Yuml:\"\\u0178\",ZHcy:\"\\u0416\",Zacute:\"\\u0179\",Zcaron:\"\\u017d\",Zcy:\"\\u0417\",Zdot:\"\\u017b\",ZeroWidthSpace:\"\\u200b\",Zeta:\"\\u0396\",Zfr:\"\\u2128\",Zopf:\"\\u2124\",Zscr:\"\\ud835\\udcb5\",aacute:\"\\xe1\",abreve:\"\\u0103\",ac:\"\\u223e\",acE:\"\\u223e\\u0333\",acd:\"\\u223f\",acirc:\"\\xe2\",acute:\"\\xb4\",acy:\"\\u0430\",aelig:\"\\xe6\",af:\"\\u2061\",afr:\"\\ud835\\udd1e\",agrave:\"\\xe0\",alefsym:\"\\u2135\",aleph:\"\\u2135\",alpha:\"\\u03b1\",amacr:\"\\u0101\",amalg:\"\\u2a3f\",amp:\"&\",and:\"\\u2227\",andand:\"\\u2a55\",andd:\"\\u2a5c\",andslope:\"\\u2a58\",andv:\"\\u2a5a\",ang:\"\\u2220\",ange:\"\\u29a4\",angle:\"\\u2220\",angmsd:\"\\u2221\",angmsdaa:\"\\u29a8\",angmsdab:\"\\u29a9\",angmsdac:\"\\u29aa\",angmsdad:\"\\u29ab\",angmsdae:\"\\u29ac\",angmsdaf:\"\\u29ad\",angmsdag:\"\\u29ae\",angmsdah:\"\\u29af\",angrt:\"\\u221f\",angrtvb:\"\\u22be\",angrtvbd:\"\\u299d\",angsph:\"\\u2222\",angst:\"\\xc5\",angzarr:\"\\u237c\",aogon:\"\\u0105\",aopf:\"\\ud835\\udd52\",ap:\"\\u2248\",apE:\"\\u2a70\",apacir:\"\\u2a6f\",ape:\"\\u224a\",apid:\"\\u224b\",apos:\"'\",approx:\"\\u2248\",approxeq:\"\\u224a\",aring:\"\\xe5\",ascr:\"\\ud835\\udcb6\",ast:\"*\",asymp:\"\\u2248\",asympeq:\"\\u224d\",atilde:\"\\xe3\",auml:\"\\xe4\",awconint:\"\\u2233\",awint:\"\\u2a11\",bNot:\"\\u2aed\",backcong:\"\\u224c\",backepsilon:\"\\u03f6\",backprime:\"\\u2035\",backsim:\"\\u223d\",backsimeq:\"\\u22cd\",barvee:\"\\u22bd\",barwed:\"\\u2305\",barwedge:\"\\u2305\",bbrk:\"\\u23b5\",bbrktbrk:\"\\u23b6\",bcong:\"\\u224c\",bcy:\"\\u0431\",bdquo:\"\\u201e\",becaus:\"\\u2235\",because:\"\\u2235\",bemptyv:\"\\u29b0\",bepsi:\"\\u03f6\",bernou:\"\\u212c\",beta:\"\\u03b2\",beth:\"\\u2136\",between:\"\\u226c\",bfr:\"\\ud835\\udd1f\",bigcap:\"\\u22c2\",bigcirc:\"\\u25ef\",bigcup:\"\\u22c3\",bigodot:\"\\u2a00\",bigoplus:\"\\u2a01\",bigotimes:\"\\u2a02\",bigsqcup:\"\\u2a06\",bigstar:\"\\u2605\",bigtriangledown:\"\\u25bd\",bigtriangleup:\"\\u25b3\",biguplus:\"\\u2a04\",bigvee:\"\\u22c1\",bigwedge:\"\\u22c0\",bkarow:\"\\u290d\",blacklozenge:\"\\u29eb\",blacksquare:\"\\u25aa\",blacktriangle:\"\\u25b4\",blacktriangledown:\"\\u25be\",blacktriangleleft:\"\\u25c2\",blacktriangleright:\"\\u25b8\",blank:\"\\u2423\",blk12:\"\\u2592\",blk14:\"\\u2591\",blk34:\"\\u2593\",block:\"\\u2588\",bne:\"=\\u20e5\",bnequiv:\"\\u2261\\u20e5\",bnot:\"\\u2310\",bopf:\"\\ud835\\udd53\",bot:\"\\u22a5\",bottom:\"\\u22a5\",bowtie:\"\\u22c8\",boxDL:\"\\u2557\",boxDR:\"\\u2554\",boxDl:\"\\u2556\",boxDr:\"\\u2553\",boxH:\"\\u2550\",boxHD:\"\\u2566\",boxHU:\"\\u2569\",boxHd:\"\\u2564\",boxHu:\"\\u2567\",boxUL:\"\\u255d\",boxUR:\"\\u255a\",boxUl:\"\\u255c\",boxUr:\"\\u2559\",boxV:\"\\u2551\",boxVH:\"\\u256c\",boxVL:\"\\u2563\",boxVR:\"\\u2560\",boxVh:\"\\u256b\",boxVl:\"\\u2562\",boxVr:\"\\u255f\",boxbox:\"\\u29c9\",boxdL:\"\\u2555\",boxdR:\"\\u2552\",boxdl:\"\\u2510\",boxdr:\"\\u250c\",boxh:\"\\u2500\",boxhD:\"\\u2565\",boxhU:\"\\u2568\",boxhd:\"\\u252c\",boxhu:\"\\u2534\",boxminus:\"\\u229f\",boxplus:\"\\u229e\",boxtimes:\"\\u22a0\",boxuL:\"\\u255b\",boxuR:\"\\u2558\",boxul:\"\\u2518\",boxur:\"\\u2514\",boxv:\"\\u2502\",boxvH:\"\\u256a\",boxvL:\"\\u2561\",boxvR:\"\\u255e\",boxvh:\"\\u253c\",boxvl:\"\\u2524\",boxvr:\"\\u251c\",bprime:\"\\u2035\",breve:\"\\u02d8\",brvbar:\"\\xa6\",bscr:\"\\ud835\\udcb7\",bsemi:\"\\u204f\",bsim:\"\\u223d\",bsime:\"\\u22cd\",bsol:\"\\\\\",bsolb:\"\\u29c5\",bsolhsub:\"\\u27c8\",bull:\"\\u2022\",bullet:\"\\u2022\",bump:\"\\u224e\",bumpE:\"\\u2aae\",bumpe:\"\\u224f\",bumpeq:\"\\u224f\",cacute:\"\\u0107\",cap:\"\\u2229\",capand:\"\\u2a44\",capbrcup:\"\\u2a49\",capcap:\"\\u2a4b\",capcup:\"\\u2a47\",capdot:\"\\u2a40\",caps:\"\\u2229\\ufe00\",caret:\"\\u2041\",caron:\"\\u02c7\",ccaps:\"\\u2a4d\",ccaron:\"\\u010d\",ccedil:\"\\xe7\",ccirc:\"\\u0109\",ccups:\"\\u2a4c\",ccupssm:\"\\u2a50\",cdot:\"\\u010b\",cedil:\"\\xb8\",cemptyv:\"\\u29b2\",cent:\"\\xa2\",centerdot:\"\\xb7\",cfr:\"\\ud835\\udd20\",chcy:\"\\u0447\",check:\"\\u2713\",checkmark:\"\\u2713\",chi:\"\\u03c7\",cir:\"\\u25cb\",cirE:\"\\u29c3\",circ:\"\\u02c6\",circeq:\"\\u2257\",circlearrowleft:\"\\u21ba\",circlearrowright:\"\\u21bb\",circledR:\"\\xae\",circledS:\"\\u24c8\",circledast:\"\\u229b\",circledcirc:\"\\u229a\",circleddash:\"\\u229d\",cire:\"\\u2257\",cirfnint:\"\\u2a10\",cirmid:\"\\u2aef\",cirscir:\"\\u29c2\",clubs:\"\\u2663\",clubsuit:\"\\u2663\",colon:\":\",colone:\"\\u2254\",coloneq:\"\\u2254\",comma:\",\",commat:\"@\",comp:\"\\u2201\",compfn:\"\\u2218\",complement:\"\\u2201\",complexes:\"\\u2102\",cong:\"\\u2245\",congdot:\"\\u2a6d\",conint:\"\\u222e\",copf:\"\\ud835\\udd54\",coprod:\"\\u2210\",copy:\"\\xa9\",copysr:\"\\u2117\",crarr:\"\\u21b5\",cross:\"\\u2717\",cscr:\"\\ud835\\udcb8\",csub:\"\\u2acf\",csube:\"\\u2ad1\",csup:\"\\u2ad0\",csupe:\"\\u2ad2\",ctdot:\"\\u22ef\",cudarrl:\"\\u2938\",cudarrr:\"\\u2935\",cuepr:\"\\u22de\",cuesc:\"\\u22df\",cularr:\"\\u21b6\",cularrp:\"\\u293d\",cup:\"\\u222a\",cupbrcap:\"\\u2a48\",cupcap:\"\\u2a46\",cupcup:\"\\u2a4a\",cupdot:\"\\u228d\",cupor:\"\\u2a45\",cups:\"\\u222a\\ufe00\",curarr:\"\\u21b7\",curarrm:\"\\u293c\",curlyeqprec:\"\\u22de\",curlyeqsucc:\"\\u22df\",curlyvee:\"\\u22ce\",curlywedge:\"\\u22cf\",curren:\"\\xa4\",curvearrowleft:\"\\u21b6\",curvearrowright:\"\\u21b7\",cuvee:\"\\u22ce\",cuwed:\"\\u22cf\",cwconint:\"\\u2232\",cwint:\"\\u2231\",cylcty:\"\\u232d\",dArr:\"\\u21d3\",dHar:\"\\u2965\",dagger:\"\\u2020\",daleth:\"\\u2138\",darr:\"\\u2193\",dash:\"\\u2010\",dashv:\"\\u22a3\",dbkarow:\"\\u290f\",dblac:\"\\u02dd\",dcaron:\"\\u010f\",dcy:\"\\u0434\",dd:\"\\u2146\",ddagger:\"\\u2021\",ddarr:\"\\u21ca\",ddotseq:\"\\u2a77\",deg:\"\\xb0\",delta:\"\\u03b4\",demptyv:\"\\u29b1\",dfisht:\"\\u297f\",dfr:\"\\ud835\\udd21\",dharl:\"\\u21c3\",dharr:\"\\u21c2\",diam:\"\\u22c4\",diamond:\"\\u22c4\",diamondsuit:\"\\u2666\",diams:\"\\u2666\",die:\"\\xa8\",digamma:\"\\u03dd\",disin:\"\\u22f2\",div:\"\\xf7\",divide:\"\\xf7\",divideontimes:\"\\u22c7\",divonx:\"\\u22c7\",djcy:\"\\u0452\",dlcorn:\"\\u231e\",dlcrop:\"\\u230d\",dollar:\"$\",dopf:\"\\ud835\\udd55\",dot:\"\\u02d9\",doteq:\"\\u2250\",doteqdot:\"\\u2251\",dotminus:\"\\u2238\",dotplus:\"\\u2214\",dotsquare:\"\\u22a1\",doublebarwedge:\"\\u2306\",downarrow:\"\\u2193\",downdownarrows:\"\\u21ca\",downharpoonleft:\"\\u21c3\",downharpoonright:\"\\u21c2\",drbkarow:\"\\u2910\",drcorn:\"\\u231f\",drcrop:\"\\u230c\",dscr:\"\\ud835\\udcb9\",dscy:\"\\u0455\",dsol:\"\\u29f6\",dstrok:\"\\u0111\",dtdot:\"\\u22f1\",dtri:\"\\u25bf\",dtrif:\"\\u25be\",duarr:\"\\u21f5\",duhar:\"\\u296f\",dwangle:\"\\u29a6\",dzcy:\"\\u045f\",dzigrarr:\"\\u27ff\",eDDot:\"\\u2a77\",eDot:\"\\u2251\",eacute:\"\\xe9\",easter:\"\\u2a6e\",ecaron:\"\\u011b\",ecir:\"\\u2256\",ecirc:\"\\xea\",ecolon:\"\\u2255\",ecy:\"\\u044d\",edot:\"\\u0117\",ee:\"\\u2147\",efDot:\"\\u2252\",efr:\"\\ud835\\udd22\",eg:\"\\u2a9a\",egrave:\"\\xe8\",egs:\"\\u2a96\",egsdot:\"\\u2a98\",el:\"\\u2a99\",elinters:\"\\u23e7\",ell:\"\\u2113\",els:\"\\u2a95\",elsdot:\"\\u2a97\",emacr:\"\\u0113\",empty:\"\\u2205\",emptyset:\"\\u2205\",emptyv:\"\\u2205\",emsp13:\"\\u2004\",emsp14:\"\\u2005\",emsp:\"\\u2003\",eng:\"\\u014b\",ensp:\"\\u2002\",eogon:\"\\u0119\",eopf:\"\\ud835\\udd56\",epar:\"\\u22d5\",eparsl:\"\\u29e3\",eplus:\"\\u2a71\",epsi:\"\\u03b5\",epsilon:\"\\u03b5\",epsiv:\"\\u03f5\",eqcirc:\"\\u2256\",eqcolon:\"\\u2255\",eqsim:\"\\u2242\",eqslantgtr:\"\\u2a96\",eqslantless:\"\\u2a95\",equals:\"=\",equest:\"\\u225f\",equiv:\"\\u2261\",equivDD:\"\\u2a78\",eqvparsl:\"\\u29e5\",erDot:\"\\u2253\",erarr:\"\\u2971\",escr:\"\\u212f\",esdot:\"\\u2250\",esim:\"\\u2242\",eta:\"\\u03b7\",eth:\"\\xf0\",euml:\"\\xeb\",euro:\"\\u20ac\",excl:\"!\",exist:\"\\u2203\",expectation:\"\\u2130\",exponentiale:\"\\u2147\",fallingdotseq:\"\\u2252\",fcy:\"\\u0444\",female:\"\\u2640\",ffilig:\"\\ufb03\",fflig:\"\\ufb00\",ffllig:\"\\ufb04\",ffr:\"\\ud835\\udd23\",filig:\"\\ufb01\",fjlig:\"fj\",flat:\"\\u266d\",fllig:\"\\ufb02\",fltns:\"\\u25b1\",fnof:\"\\u0192\",fopf:\"\\ud835\\udd57\",forall:\"\\u2200\",fork:\"\\u22d4\",forkv:\"\\u2ad9\",fpartint:\"\\u2a0d\",frac12:\"\\xbd\",frac13:\"\\u2153\",frac14:\"\\xbc\",frac15:\"\\u2155\",frac16:\"\\u2159\",frac18:\"\\u215b\",frac23:\"\\u2154\",frac25:\"\\u2156\",frac34:\"\\xbe\",frac35:\"\\u2157\",frac38:\"\\u215c\",frac45:\"\\u2158\",frac56:\"\\u215a\",frac58:\"\\u215d\",frac78:\"\\u215e\",frasl:\"\\u2044\",frown:\"\\u2322\",fscr:\"\\ud835\\udcbb\",gE:\"\\u2267\",gEl:\"\\u2a8c\",gacute:\"\\u01f5\",gamma:\"\\u03b3\",gammad:\"\\u03dd\",gap:\"\\u2a86\",gbreve:\"\\u011f\",gcirc:\"\\u011d\",gcy:\"\\u0433\",gdot:\"\\u0121\",ge:\"\\u2265\",gel:\"\\u22db\",geq:\"\\u2265\",geqq:\"\\u2267\",geqslant:\"\\u2a7e\",ges:\"\\u2a7e\",gescc:\"\\u2aa9\",gesdot:\"\\u2a80\",gesdoto:\"\\u2a82\",gesdotol:\"\\u2a84\",gesl:\"\\u22db\\ufe00\",gesles:\"\\u2a94\",gfr:\"\\ud835\\udd24\",gg:\"\\u226b\",ggg:\"\\u22d9\",gimel:\"\\u2137\",gjcy:\"\\u0453\",gl:\"\\u2277\",glE:\"\\u2a92\",gla:\"\\u2aa5\",glj:\"\\u2aa4\",gnE:\"\\u2269\",gnap:\"\\u2a8a\",gnapprox:\"\\u2a8a\",gne:\"\\u2a88\",gneq:\"\\u2a88\",gneqq:\"\\u2269\",gnsim:\"\\u22e7\",gopf:\"\\ud835\\udd58\",grave:\"`\",gscr:\"\\u210a\",gsim:\"\\u2273\",gsime:\"\\u2a8e\",gsiml:\"\\u2a90\",gt:\">\",gtcc:\"\\u2aa7\",gtcir:\"\\u2a7a\",gtdot:\"\\u22d7\",gtlPar:\"\\u2995\",gtquest:\"\\u2a7c\",gtrapprox:\"\\u2a86\",gtrarr:\"\\u2978\",gtrdot:\"\\u22d7\",gtreqless:\"\\u22db\",gtreqqless:\"\\u2a8c\",gtrless:\"\\u2277\",gtrsim:\"\\u2273\",gvertneqq:\"\\u2269\\ufe00\",gvnE:\"\\u2269\\ufe00\",hArr:\"\\u21d4\",hairsp:\"\\u200a\",half:\"\\xbd\",hamilt:\"\\u210b\",hardcy:\"\\u044a\",harr:\"\\u2194\",harrcir:\"\\u2948\",harrw:\"\\u21ad\",hbar:\"\\u210f\",hcirc:\"\\u0125\",hearts:\"\\u2665\",heartsuit:\"\\u2665\",hellip:\"\\u2026\",hercon:\"\\u22b9\",hfr:\"\\ud835\\udd25\",hksearow:\"\\u2925\",hkswarow:\"\\u2926\",hoarr:\"\\u21ff\",homtht:\"\\u223b\",hookleftarrow:\"\\u21a9\",hookrightarrow:\"\\u21aa\",hopf:\"\\ud835\\udd59\",horbar:\"\\u2015\",hscr:\"\\ud835\\udcbd\",hslash:\"\\u210f\",hstrok:\"\\u0127\",hybull:\"\\u2043\",hyphen:\"\\u2010\",iacute:\"\\xed\",ic:\"\\u2063\",icirc:\"\\xee\",icy:\"\\u0438\",iecy:\"\\u0435\",iexcl:\"\\xa1\",iff:\"\\u21d4\",ifr:\"\\ud835\\udd26\",igrave:\"\\xec\",ii:\"\\u2148\",iiiint:\"\\u2a0c\",iiint:\"\\u222d\",iinfin:\"\\u29dc\",iiota:\"\\u2129\",ijlig:\"\\u0133\",imacr:\"\\u012b\",image:\"\\u2111\",imagline:\"\\u2110\",imagpart:\"\\u2111\",imath:\"\\u0131\",imof:\"\\u22b7\",imped:\"\\u01b5\",in:\"\\u2208\",incare:\"\\u2105\",infin:\"\\u221e\",infintie:\"\\u29dd\",inodot:\"\\u0131\",int:\"\\u222b\",intcal:\"\\u22ba\",integers:\"\\u2124\",intercal:\"\\u22ba\",intlarhk:\"\\u2a17\",intprod:\"\\u2a3c\",iocy:\"\\u0451\",iogon:\"\\u012f\",iopf:\"\\ud835\\udd5a\",iota:\"\\u03b9\",iprod:\"\\u2a3c\",iquest:\"\\xbf\",iscr:\"\\ud835\\udcbe\",isin:\"\\u2208\",isinE:\"\\u22f9\",isindot:\"\\u22f5\",isins:\"\\u22f4\",isinsv:\"\\u22f3\",isinv:\"\\u2208\",it:\"\\u2062\",itilde:\"\\u0129\",iukcy:\"\\u0456\",iuml:\"\\xef\",jcirc:\"\\u0135\",jcy:\"\\u0439\",jfr:\"\\ud835\\udd27\",jmath:\"\\u0237\",jopf:\"\\ud835\\udd5b\",jscr:\"\\ud835\\udcbf\",jsercy:\"\\u0458\",jukcy:\"\\u0454\",kappa:\"\\u03ba\",kappav:\"\\u03f0\",kcedil:\"\\u0137\",kcy:\"\\u043a\",kfr:\"\\ud835\\udd28\",kgreen:\"\\u0138\",khcy:\"\\u0445\",kjcy:\"\\u045c\",kopf:\"\\ud835\\udd5c\",kscr:\"\\ud835\\udcc0\",lAarr:\"\\u21da\",lArr:\"\\u21d0\",lAtail:\"\\u291b\",lBarr:\"\\u290e\",lE:\"\\u2266\",lEg:\"\\u2a8b\",lHar:\"\\u2962\",lacute:\"\\u013a\",laemptyv:\"\\u29b4\",lagran:\"\\u2112\",lambda:\"\\u03bb\",lang:\"\\u27e8\",langd:\"\\u2991\",langle:\"\\u27e8\",lap:\"\\u2a85\",laquo:\"\\xab\",larr:\"\\u2190\",larrb:\"\\u21e4\",larrbfs:\"\\u291f\",larrfs:\"\\u291d\",larrhk:\"\\u21a9\",larrlp:\"\\u21ab\",larrpl:\"\\u2939\",larrsim:\"\\u2973\",larrtl:\"\\u21a2\",lat:\"\\u2aab\",latail:\"\\u2919\",late:\"\\u2aad\",lates:\"\\u2aad\\ufe00\",lbarr:\"\\u290c\",lbbrk:\"\\u2772\",lbrace:\"{\",lbrack:\"[\",lbrke:\"\\u298b\",lbrksld:\"\\u298f\",lbrkslu:\"\\u298d\",lcaron:\"\\u013e\",lcedil:\"\\u013c\",lceil:\"\\u2308\",lcub:\"{\",lcy:\"\\u043b\",ldca:\"\\u2936\",ldquo:\"\\u201c\",ldquor:\"\\u201e\",ldrdhar:\"\\u2967\",ldrushar:\"\\u294b\",ldsh:\"\\u21b2\",le:\"\\u2264\",leftarrow:\"\\u2190\",leftarrowtail:\"\\u21a2\",leftharpoondown:\"\\u21bd\",leftharpoonup:\"\\u21bc\",leftleftarrows:\"\\u21c7\",leftrightarrow:\"\\u2194\",leftrightarrows:\"\\u21c6\",leftrightharpoons:\"\\u21cb\",leftrightsquigarrow:\"\\u21ad\",leftthreetimes:\"\\u22cb\",leg:\"\\u22da\",leq:\"\\u2264\",leqq:\"\\u2266\",leqslant:\"\\u2a7d\",les:\"\\u2a7d\",lescc:\"\\u2aa8\",lesdot:\"\\u2a7f\",lesdoto:\"\\u2a81\",lesdotor:\"\\u2a83\",lesg:\"\\u22da\\ufe00\",lesges:\"\\u2a93\",lessapprox:\"\\u2a85\",lessdot:\"\\u22d6\",lesseqgtr:\"\\u22da\",lesseqqgtr:\"\\u2a8b\",lessgtr:\"\\u2276\",lesssim:\"\\u2272\",lfisht:\"\\u297c\",lfloor:\"\\u230a\",lfr:\"\\ud835\\udd29\",lg:\"\\u2276\",lgE:\"\\u2a91\",lhard:\"\\u21bd\",lharu:\"\\u21bc\",lharul:\"\\u296a\",lhblk:\"\\u2584\",ljcy:\"\\u0459\",ll:\"\\u226a\",llarr:\"\\u21c7\",llcorner:\"\\u231e\",llhard:\"\\u296b\",lltri:\"\\u25fa\",lmidot:\"\\u0140\",lmoust:\"\\u23b0\",lmoustache:\"\\u23b0\",lnE:\"\\u2268\",lnap:\"\\u2a89\",lnapprox:\"\\u2a89\",lne:\"\\u2a87\",lneq:\"\\u2a87\",lneqq:\"\\u2268\",lnsim:\"\\u22e6\",loang:\"\\u27ec\",loarr:\"\\u21fd\",lobrk:\"\\u27e6\",longleftarrow:\"\\u27f5\",longleftrightarrow:\"\\u27f7\",longmapsto:\"\\u27fc\",longrightarrow:\"\\u27f6\",looparrowleft:\"\\u21ab\",looparrowright:\"\\u21ac\",lopar:\"\\u2985\",lopf:\"\\ud835\\udd5d\",loplus:\"\\u2a2d\",lotimes:\"\\u2a34\",lowast:\"\\u2217\",lowbar:\"_\",loz:\"\\u25ca\",lozenge:\"\\u25ca\",lozf:\"\\u29eb\",lpar:\"(\",lparlt:\"\\u2993\",lrarr:\"\\u21c6\",lrcorner:\"\\u231f\",lrhar:\"\\u21cb\",lrhard:\"\\u296d\",lrm:\"\\u200e\",lrtri:\"\\u22bf\",lsaquo:\"\\u2039\",lscr:\"\\ud835\\udcc1\",lsh:\"\\u21b0\",lsim:\"\\u2272\",lsime:\"\\u2a8d\",lsimg:\"\\u2a8f\",lsqb:\"[\",lsquo:\"\\u2018\",lsquor:\"\\u201a\",lstrok:\"\\u0142\",lt:\"<\",ltcc:\"\\u2aa6\",ltcir:\"\\u2a79\",ltdot:\"\\u22d6\",lthree:\"\\u22cb\",ltimes:\"\\u22c9\",ltlarr:\"\\u2976\",ltquest:\"\\u2a7b\",ltrPar:\"\\u2996\",ltri:\"\\u25c3\",ltrie:\"\\u22b4\",ltrif:\"\\u25c2\",lurdshar:\"\\u294a\",luruhar:\"\\u2966\",lvertneqq:\"\\u2268\\ufe00\",lvnE:\"\\u2268\\ufe00\",mDDot:\"\\u223a\",macr:\"\\xaf\",male:\"\\u2642\",malt:\"\\u2720\",maltese:\"\\u2720\",map:\"\\u21a6\",mapsto:\"\\u21a6\",mapstodown:\"\\u21a7\",mapstoleft:\"\\u21a4\",mapstoup:\"\\u21a5\",marker:\"\\u25ae\",mcomma:\"\\u2a29\",mcy:\"\\u043c\",mdash:\"\\u2014\",measuredangle:\"\\u2221\",mfr:\"\\ud835\\udd2a\",mho:\"\\u2127\",micro:\"\\xb5\",mid:\"\\u2223\",midast:\"*\",midcir:\"\\u2af0\",middot:\"\\xb7\",minus:\"\\u2212\",minusb:\"\\u229f\",minusd:\"\\u2238\",minusdu:\"\\u2a2a\",mlcp:\"\\u2adb\",mldr:\"\\u2026\",mnplus:\"\\u2213\",models:\"\\u22a7\",mopf:\"\\ud835\\udd5e\",mp:\"\\u2213\",mscr:\"\\ud835\\udcc2\",mstpos:\"\\u223e\",mu:\"\\u03bc\",multimap:\"\\u22b8\",mumap:\"\\u22b8\",nGg:\"\\u22d9\\u0338\",nGt:\"\\u226b\\u20d2\",nGtv:\"\\u226b\\u0338\",nLeftarrow:\"\\u21cd\",nLeftrightarrow:\"\\u21ce\",nLl:\"\\u22d8\\u0338\",nLt:\"\\u226a\\u20d2\",nLtv:\"\\u226a\\u0338\",nRightarrow:\"\\u21cf\",nVDash:\"\\u22af\",nVdash:\"\\u22ae\",nabla:\"\\u2207\",nacute:\"\\u0144\",nang:\"\\u2220\\u20d2\",nap:\"\\u2249\",napE:\"\\u2a70\\u0338\",napid:\"\\u224b\\u0338\",napos:\"\\u0149\",napprox:\"\\u2249\",natur:\"\\u266e\",natural:\"\\u266e\",naturals:\"\\u2115\",nbsp:\"\\xa0\",nbump:\"\\u224e\\u0338\",nbumpe:\"\\u224f\\u0338\",ncap:\"\\u2a43\",ncaron:\"\\u0148\",ncedil:\"\\u0146\",ncong:\"\\u2247\",ncongdot:\"\\u2a6d\\u0338\",ncup:\"\\u2a42\",ncy:\"\\u043d\",ndash:\"\\u2013\",ne:\"\\u2260\",neArr:\"\\u21d7\",nearhk:\"\\u2924\",nearr:\"\\u2197\",nearrow:\"\\u2197\",nedot:\"\\u2250\\u0338\",nequiv:\"\\u2262\",nesear:\"\\u2928\",nesim:\"\\u2242\\u0338\",nexist:\"\\u2204\",nexists:\"\\u2204\",nfr:\"\\ud835\\udd2b\",ngE:\"\\u2267\\u0338\",nge:\"\\u2271\",ngeq:\"\\u2271\",ngeqq:\"\\u2267\\u0338\",ngeqslant:\"\\u2a7e\\u0338\",nges:\"\\u2a7e\\u0338\",ngsim:\"\\u2275\",ngt:\"\\u226f\",ngtr:\"\\u226f\",nhArr:\"\\u21ce\",nharr:\"\\u21ae\",nhpar:\"\\u2af2\",ni:\"\\u220b\",nis:\"\\u22fc\",nisd:\"\\u22fa\",niv:\"\\u220b\",njcy:\"\\u045a\",nlArr:\"\\u21cd\",nlE:\"\\u2266\\u0338\",nlarr:\"\\u219a\",nldr:\"\\u2025\",nle:\"\\u2270\",nleftarrow:\"\\u219a\",nleftrightarrow:\"\\u21ae\",nleq:\"\\u2270\",nleqq:\"\\u2266\\u0338\",nleqslant:\"\\u2a7d\\u0338\",nles:\"\\u2a7d\\u0338\",nless:\"\\u226e\",nlsim:\"\\u2274\",nlt:\"\\u226e\",nltri:\"\\u22ea\",nltrie:\"\\u22ec\",nmid:\"\\u2224\",nopf:\"\\ud835\\udd5f\",not:\"\\xac\",notin:\"\\u2209\",notinE:\"\\u22f9\\u0338\",notindot:\"\\u22f5\\u0338\",notinva:\"\\u2209\",notinvb:\"\\u22f7\",notinvc:\"\\u22f6\",notni:\"\\u220c\",notniva:\"\\u220c\",notnivb:\"\\u22fe\",notnivc:\"\\u22fd\",npar:\"\\u2226\",nparallel:\"\\u2226\",nparsl:\"\\u2afd\\u20e5\",npart:\"\\u2202\\u0338\",npolint:\"\\u2a14\",npr:\"\\u2280\",nprcue:\"\\u22e0\",npre:\"\\u2aaf\\u0338\",nprec:\"\\u2280\",npreceq:\"\\u2aaf\\u0338\",nrArr:\"\\u21cf\",nrarr:\"\\u219b\",nrarrc:\"\\u2933\\u0338\",nrarrw:\"\\u219d\\u0338\",nrightarrow:\"\\u219b\",nrtri:\"\\u22eb\",nrtrie:\"\\u22ed\",nsc:\"\\u2281\",nsccue:\"\\u22e1\",nsce:\"\\u2ab0\\u0338\",nscr:\"\\ud835\\udcc3\",nshortmid:\"\\u2224\",nshortparallel:\"\\u2226\",nsim:\"\\u2241\",nsime:\"\\u2244\",nsimeq:\"\\u2244\",nsmid:\"\\u2224\",nspar:\"\\u2226\",nsqsube:\"\\u22e2\",nsqsupe:\"\\u22e3\",nsub:\"\\u2284\",nsubE:\"\\u2ac5\\u0338\",nsube:\"\\u2288\",nsubset:\"\\u2282\\u20d2\",nsubseteq:\"\\u2288\",nsubseteqq:\"\\u2ac5\\u0338\",nsucc:\"\\u2281\",nsucceq:\"\\u2ab0\\u0338\",nsup:\"\\u2285\",nsupE:\"\\u2ac6\\u0338\",nsupe:\"\\u2289\",nsupset:\"\\u2283\\u20d2\",nsupseteq:\"\\u2289\",nsupseteqq:\"\\u2ac6\\u0338\",ntgl:\"\\u2279\",ntilde:\"\\xf1\",ntlg:\"\\u2278\",ntriangleleft:\"\\u22ea\",ntrianglelefteq:\"\\u22ec\",ntriangleright:\"\\u22eb\",ntrianglerighteq:\"\\u22ed\",nu:\"\\u03bd\",num:\"#\",numero:\"\\u2116\",numsp:\"\\u2007\",nvDash:\"\\u22ad\",nvHarr:\"\\u2904\",nvap:\"\\u224d\\u20d2\",nvdash:\"\\u22ac\",nvge:\"\\u2265\\u20d2\",nvgt:\">\\u20d2\",nvinfin:\"\\u29de\",nvlArr:\"\\u2902\",nvle:\"\\u2264\\u20d2\",nvlt:\"<\\u20d2\",nvltrie:\"\\u22b4\\u20d2\",nvrArr:\"\\u2903\",nvrtrie:\"\\u22b5\\u20d2\",nvsim:\"\\u223c\\u20d2\",nwArr:\"\\u21d6\",nwarhk:\"\\u2923\",nwarr:\"\\u2196\",nwarrow:\"\\u2196\",nwnear:\"\\u2927\",oS:\"\\u24c8\",oacute:\"\\xf3\",oast:\"\\u229b\",ocir:\"\\u229a\",ocirc:\"\\xf4\",ocy:\"\\u043e\",odash:\"\\u229d\",odblac:\"\\u0151\",odiv:\"\\u2a38\",odot:\"\\u2299\",odsold:\"\\u29bc\",oelig:\"\\u0153\",ofcir:\"\\u29bf\",ofr:\"\\ud835\\udd2c\",ogon:\"\\u02db\",ograve:\"\\xf2\",ogt:\"\\u29c1\",ohbar:\"\\u29b5\",ohm:\"\\u03a9\",oint:\"\\u222e\",olarr:\"\\u21ba\",olcir:\"\\u29be\",olcross:\"\\u29bb\",oline:\"\\u203e\",olt:\"\\u29c0\",omacr:\"\\u014d\",omega:\"\\u03c9\",omicron:\"\\u03bf\",omid:\"\\u29b6\",ominus:\"\\u2296\",oopf:\"\\ud835\\udd60\",opar:\"\\u29b7\",operp:\"\\u29b9\",oplus:\"\\u2295\",or:\"\\u2228\",orarr:\"\\u21bb\",ord:\"\\u2a5d\",order:\"\\u2134\",orderof:\"\\u2134\",ordf:\"\\xaa\",ordm:\"\\xba\",origof:\"\\u22b6\",oror:\"\\u2a56\",orslope:\"\\u2a57\",orv:\"\\u2a5b\",oscr:\"\\u2134\",oslash:\"\\xf8\",osol:\"\\u2298\",otilde:\"\\xf5\",otimes:\"\\u2297\",otimesas:\"\\u2a36\",ouml:\"\\xf6\",ovbar:\"\\u233d\",par:\"\\u2225\",para:\"\\xb6\",parallel:\"\\u2225\",parsim:\"\\u2af3\",parsl:\"\\u2afd\",part:\"\\u2202\",pcy:\"\\u043f\",percnt:\"%\",period:\".\",permil:\"\\u2030\",perp:\"\\u22a5\",pertenk:\"\\u2031\",pfr:\"\\ud835\\udd2d\",phi:\"\\u03c6\",phiv:\"\\u03d5\",phmmat:\"\\u2133\",phone:\"\\u260e\",pi:\"\\u03c0\",pitchfork:\"\\u22d4\",piv:\"\\u03d6\",planck:\"\\u210f\",planckh:\"\\u210e\",plankv:\"\\u210f\",plus:\"+\",plusacir:\"\\u2a23\",plusb:\"\\u229e\",pluscir:\"\\u2a22\",plusdo:\"\\u2214\",plusdu:\"\\u2a25\",pluse:\"\\u2a72\",plusmn:\"\\xb1\",plussim:\"\\u2a26\",plustwo:\"\\u2a27\",pm:\"\\xb1\",pointint:\"\\u2a15\",popf:\"\\ud835\\udd61\",pound:\"\\xa3\",pr:\"\\u227a\",prE:\"\\u2ab3\",prap:\"\\u2ab7\",prcue:\"\\u227c\",pre:\"\\u2aaf\",prec:\"\\u227a\",precapprox:\"\\u2ab7\",preccurlyeq:\"\\u227c\",preceq:\"\\u2aaf\",precnapprox:\"\\u2ab9\",precneqq:\"\\u2ab5\",precnsim:\"\\u22e8\",precsim:\"\\u227e\",prime:\"\\u2032\",primes:\"\\u2119\",prnE:\"\\u2ab5\",prnap:\"\\u2ab9\",prnsim:\"\\u22e8\",prod:\"\\u220f\",profalar:\"\\u232e\",profline:\"\\u2312\",profsurf:\"\\u2313\",prop:\"\\u221d\",propto:\"\\u221d\",prsim:\"\\u227e\",prurel:\"\\u22b0\",pscr:\"\\ud835\\udcc5\",psi:\"\\u03c8\",puncsp:\"\\u2008\",qfr:\"\\ud835\\udd2e\",qint:\"\\u2a0c\",qopf:\"\\ud835\\udd62\",qprime:\"\\u2057\",qscr:\"\\ud835\\udcc6\",quaternions:\"\\u210d\",quatint:\"\\u2a16\",quest:\"?\",questeq:\"\\u225f\",quot:'\"',rAarr:\"\\u21db\",rArr:\"\\u21d2\",rAtail:\"\\u291c\",rBarr:\"\\u290f\",rHar:\"\\u2964\",race:\"\\u223d\\u0331\",racute:\"\\u0155\",radic:\"\\u221a\",raemptyv:\"\\u29b3\",rang:\"\\u27e9\",rangd:\"\\u2992\",range:\"\\u29a5\",rangle:\"\\u27e9\",raquo:\"\\xbb\",rarr:\"\\u2192\",rarrap:\"\\u2975\",rarrb:\"\\u21e5\",rarrbfs:\"\\u2920\",rarrc:\"\\u2933\",rarrfs:\"\\u291e\",rarrhk:\"\\u21aa\",rarrlp:\"\\u21ac\",rarrpl:\"\\u2945\",rarrsim:\"\\u2974\",rarrtl:\"\\u21a3\",rarrw:\"\\u219d\",ratail:\"\\u291a\",ratio:\"\\u2236\",rationals:\"\\u211a\",rbarr:\"\\u290d\",rbbrk:\"\\u2773\",rbrace:\"}\",rbrack:\"]\",rbrke:\"\\u298c\",rbrksld:\"\\u298e\",rbrkslu:\"\\u2990\",rcaron:\"\\u0159\",rcedil:\"\\u0157\",rceil:\"\\u2309\",rcub:\"}\",rcy:\"\\u0440\",rdca:\"\\u2937\",rdldhar:\"\\u2969\",rdquo:\"\\u201d\",rdquor:\"\\u201d\",rdsh:\"\\u21b3\",real:\"\\u211c\",realine:\"\\u211b\",realpart:\"\\u211c\",reals:\"\\u211d\",rect:\"\\u25ad\",reg:\"\\xae\",rfisht:\"\\u297d\",rfloor:\"\\u230b\",rfr:\"\\ud835\\udd2f\",rhard:\"\\u21c1\",rharu:\"\\u21c0\",rharul:\"\\u296c\",rho:\"\\u03c1\",rhov:\"\\u03f1\",rightarrow:\"\\u2192\",rightarrowtail:\"\\u21a3\",rightharpoondown:\"\\u21c1\",rightharpoonup:\"\\u21c0\",rightleftarrows:\"\\u21c4\",rightleftharpoons:\"\\u21cc\",rightrightarrows:\"\\u21c9\",rightsquigarrow:\"\\u219d\",rightthreetimes:\"\\u22cc\",ring:\"\\u02da\",risingdotseq:\"\\u2253\",rlarr:\"\\u21c4\",rlhar:\"\\u21cc\",rlm:\"\\u200f\",rmoust:\"\\u23b1\",rmoustache:\"\\u23b1\",rnmid:\"\\u2aee\",roang:\"\\u27ed\",roarr:\"\\u21fe\",robrk:\"\\u27e7\",ropar:\"\\u2986\",ropf:\"\\ud835\\udd63\",roplus:\"\\u2a2e\",rotimes:\"\\u2a35\",rpar:\")\",rpargt:\"\\u2994\",rppolint:\"\\u2a12\",rrarr:\"\\u21c9\",rsaquo:\"\\u203a\",rscr:\"\\ud835\\udcc7\",rsh:\"\\u21b1\",rsqb:\"]\",rsquo:\"\\u2019\",rsquor:\"\\u2019\",rthree:\"\\u22cc\",rtimes:\"\\u22ca\",rtri:\"\\u25b9\",rtrie:\"\\u22b5\",rtrif:\"\\u25b8\",rtriltri:\"\\u29ce\",ruluhar:\"\\u2968\",rx:\"\\u211e\",sacute:\"\\u015b\",sbquo:\"\\u201a\",sc:\"\\u227b\",scE:\"\\u2ab4\",scap:\"\\u2ab8\",scaron:\"\\u0161\",sccue:\"\\u227d\",sce:\"\\u2ab0\",scedil:\"\\u015f\",scirc:\"\\u015d\",scnE:\"\\u2ab6\",scnap:\"\\u2aba\",scnsim:\"\\u22e9\",scpolint:\"\\u2a13\",scsim:\"\\u227f\",scy:\"\\u0441\",sdot:\"\\u22c5\",sdotb:\"\\u22a1\",sdote:\"\\u2a66\",seArr:\"\\u21d8\",searhk:\"\\u2925\",searr:\"\\u2198\",searrow:\"\\u2198\",sect:\"\\xa7\",semi:\";\",seswar:\"\\u2929\",setminus:\"\\u2216\",setmn:\"\\u2216\",sext:\"\\u2736\",sfr:\"\\ud835\\udd30\",sfrown:\"\\u2322\",sharp:\"\\u266f\",shchcy:\"\\u0449\",shcy:\"\\u0448\",shortmid:\"\\u2223\",shortparallel:\"\\u2225\",shy:\"\\xad\",sigma:\"\\u03c3\",sigmaf:\"\\u03c2\",sigmav:\"\\u03c2\",sim:\"\\u223c\",simdot:\"\\u2a6a\",sime:\"\\u2243\",simeq:\"\\u2243\",simg:\"\\u2a9e\",simgE:\"\\u2aa0\",siml:\"\\u2a9d\",simlE:\"\\u2a9f\",simne:\"\\u2246\",simplus:\"\\u2a24\",simrarr:\"\\u2972\",slarr:\"\\u2190\",smallsetminus:\"\\u2216\",smashp:\"\\u2a33\",smeparsl:\"\\u29e4\",smid:\"\\u2223\",smile:\"\\u2323\",smt:\"\\u2aaa\",smte:\"\\u2aac\",smtes:\"\\u2aac\\ufe00\",softcy:\"\\u044c\",sol:\"/\",solb:\"\\u29c4\",solbar:\"\\u233f\",sopf:\"\\ud835\\udd64\",spades:\"\\u2660\",spadesuit:\"\\u2660\",spar:\"\\u2225\",sqcap:\"\\u2293\",sqcaps:\"\\u2293\\ufe00\",sqcup:\"\\u2294\",sqcups:\"\\u2294\\ufe00\",sqsub:\"\\u228f\",sqsube:\"\\u2291\",sqsubset:\"\\u228f\",sqsubseteq:\"\\u2291\",sqsup:\"\\u2290\",sqsupe:\"\\u2292\",sqsupset:\"\\u2290\",sqsupseteq:\"\\u2292\",squ:\"\\u25a1\",square:\"\\u25a1\",squarf:\"\\u25aa\",squf:\"\\u25aa\",srarr:\"\\u2192\",sscr:\"\\ud835\\udcc8\",ssetmn:\"\\u2216\",ssmile:\"\\u2323\",sstarf:\"\\u22c6\",star:\"\\u2606\",starf:\"\\u2605\",straightepsilon:\"\\u03f5\",straightphi:\"\\u03d5\",strns:\"\\xaf\",sub:\"\\u2282\",subE:\"\\u2ac5\",subdot:\"\\u2abd\",sube:\"\\u2286\",subedot:\"\\u2ac3\",submult:\"\\u2ac1\",subnE:\"\\u2acb\",subne:\"\\u228a\",subplus:\"\\u2abf\",subrarr:\"\\u2979\",subset:\"\\u2282\",subseteq:\"\\u2286\",subseteqq:\"\\u2ac5\",subsetneq:\"\\u228a\",subsetneqq:\"\\u2acb\",subsim:\"\\u2ac7\",subsub:\"\\u2ad5\",subsup:\"\\u2ad3\",succ:\"\\u227b\",succapprox:\"\\u2ab8\",succcurlyeq:\"\\u227d\",succeq:\"\\u2ab0\",succnapprox:\"\\u2aba\",succneqq:\"\\u2ab6\",succnsim:\"\\u22e9\",succsim:\"\\u227f\",sum:\"\\u2211\",sung:\"\\u266a\",sup1:\"\\xb9\",sup2:\"\\xb2\",sup3:\"\\xb3\",sup:\"\\u2283\",supE:\"\\u2ac6\",supdot:\"\\u2abe\",supdsub:\"\\u2ad8\",supe:\"\\u2287\",supedot:\"\\u2ac4\",suphsol:\"\\u27c9\",suphsub:\"\\u2ad7\",suplarr:\"\\u297b\",supmult:\"\\u2ac2\",supnE:\"\\u2acc\",supne:\"\\u228b\",supplus:\"\\u2ac0\",supset:\"\\u2283\",supseteq:\"\\u2287\",supseteqq:\"\\u2ac6\",supsetneq:\"\\u228b\",supsetneqq:\"\\u2acc\",supsim:\"\\u2ac8\",supsub:\"\\u2ad4\",supsup:\"\\u2ad6\",swArr:\"\\u21d9\",swarhk:\"\\u2926\",swarr:\"\\u2199\",swarrow:\"\\u2199\",swnwar:\"\\u292a\",szlig:\"\\xdf\",target:\"\\u2316\",tau:\"\\u03c4\",tbrk:\"\\u23b4\",tcaron:\"\\u0165\",tcedil:\"\\u0163\",tcy:\"\\u0442\",tdot:\"\\u20db\",telrec:\"\\u2315\",tfr:\"\\ud835\\udd31\",there4:\"\\u2234\",therefore:\"\\u2234\",theta:\"\\u03b8\",thetasym:\"\\u03d1\",thetav:\"\\u03d1\",thickapprox:\"\\u2248\",thicksim:\"\\u223c\",thinsp:\"\\u2009\",thkap:\"\\u2248\",thksim:\"\\u223c\",thorn:\"\\xfe\",tilde:\"\\u02dc\",times:\"\\xd7\",timesb:\"\\u22a0\",timesbar:\"\\u2a31\",timesd:\"\\u2a30\",tint:\"\\u222d\",toea:\"\\u2928\",top:\"\\u22a4\",topbot:\"\\u2336\",topcir:\"\\u2af1\",topf:\"\\ud835\\udd65\",topfork:\"\\u2ada\",tosa:\"\\u2929\",tprime:\"\\u2034\",trade:\"\\u2122\",triangle:\"\\u25b5\",triangledown:\"\\u25bf\",triangleleft:\"\\u25c3\",trianglelefteq:\"\\u22b4\",triangleq:\"\\u225c\",triangleright:\"\\u25b9\",trianglerighteq:\"\\u22b5\",tridot:\"\\u25ec\",trie:\"\\u225c\",triminus:\"\\u2a3a\",triplus:\"\\u2a39\",trisb:\"\\u29cd\",tritime:\"\\u2a3b\",trpezium:\"\\u23e2\",tscr:\"\\ud835\\udcc9\",tscy:\"\\u0446\",tshcy:\"\\u045b\",tstrok:\"\\u0167\",twixt:\"\\u226c\",twoheadleftarrow:\"\\u219e\",twoheadrightarrow:\"\\u21a0\",uArr:\"\\u21d1\",uHar:\"\\u2963\",uacute:\"\\xfa\",uarr:\"\\u2191\",ubrcy:\"\\u045e\",ubreve:\"\\u016d\",ucirc:\"\\xfb\",ucy:\"\\u0443\",udarr:\"\\u21c5\",udblac:\"\\u0171\",udhar:\"\\u296e\",ufisht:\"\\u297e\",ufr:\"\\ud835\\udd32\",ugrave:\"\\xf9\",uharl:\"\\u21bf\",uharr:\"\\u21be\",uhblk:\"\\u2580\",ulcorn:\"\\u231c\",ulcorner:\"\\u231c\",ulcrop:\"\\u230f\",ultri:\"\\u25f8\",umacr:\"\\u016b\",uml:\"\\xa8\",uogon:\"\\u0173\",uopf:\"\\ud835\\udd66\",uparrow:\"\\u2191\",updownarrow:\"\\u2195\",upharpoonleft:\"\\u21bf\",upharpoonright:\"\\u21be\",uplus:\"\\u228e\",upsi:\"\\u03c5\",upsih:\"\\u03d2\",upsilon:\"\\u03c5\",upuparrows:\"\\u21c8\",urcorn:\"\\u231d\",urcorner:\"\\u231d\",urcrop:\"\\u230e\",uring:\"\\u016f\",urtri:\"\\u25f9\",uscr:\"\\ud835\\udcca\",utdot:\"\\u22f0\",utilde:\"\\u0169\",utri:\"\\u25b5\",utrif:\"\\u25b4\",uuarr:\"\\u21c8\",uuml:\"\\xfc\",uwangle:\"\\u29a7\",vArr:\"\\u21d5\",vBar:\"\\u2ae8\",vBarv:\"\\u2ae9\",vDash:\"\\u22a8\",vangrt:\"\\u299c\",varepsilon:\"\\u03f5\",varkappa:\"\\u03f0\",varnothing:\"\\u2205\",varphi:\"\\u03d5\",varpi:\"\\u03d6\",varpropto:\"\\u221d\",varr:\"\\u2195\",varrho:\"\\u03f1\",varsigma:\"\\u03c2\",varsubsetneq:\"\\u228a\\ufe00\",varsubsetneqq:\"\\u2acb\\ufe00\",varsupsetneq:\"\\u228b\\ufe00\",varsupsetneqq:\"\\u2acc\\ufe00\",vartheta:\"\\u03d1\",vartriangleleft:\"\\u22b2\",vartriangleright:\"\\u22b3\",vcy:\"\\u0432\",vdash:\"\\u22a2\",vee:\"\\u2228\",veebar:\"\\u22bb\",veeeq:\"\\u225a\",vellip:\"\\u22ee\",verbar:\"|\",vert:\"|\",vfr:\"\\ud835\\udd33\",vltri:\"\\u22b2\",vnsub:\"\\u2282\\u20d2\",vnsup:\"\\u2283\\u20d2\",vopf:\"\\ud835\\udd67\",vprop:\"\\u221d\",vrtri:\"\\u22b3\",vscr:\"\\ud835\\udccb\",vsubnE:\"\\u2acb\\ufe00\",vsubne:\"\\u228a\\ufe00\",vsupnE:\"\\u2acc\\ufe00\",vsupne:\"\\u228b\\ufe00\",vzigzag:\"\\u299a\",wcirc:\"\\u0175\",wedbar:\"\\u2a5f\",wedge:\"\\u2227\",wedgeq:\"\\u2259\",weierp:\"\\u2118\",wfr:\"\\ud835\\udd34\",wopf:\"\\ud835\\udd68\",wp:\"\\u2118\",wr:\"\\u2240\",wreath:\"\\u2240\",wscr:\"\\ud835\\udccc\",xcap:\"\\u22c2\",xcirc:\"\\u25ef\",xcup:\"\\u22c3\",xdtri:\"\\u25bd\",xfr:\"\\ud835\\udd35\",xhArr:\"\\u27fa\",xharr:\"\\u27f7\",xi:\"\\u03be\",xlArr:\"\\u27f8\",xlarr:\"\\u27f5\",xmap:\"\\u27fc\",xnis:\"\\u22fb\",xodot:\"\\u2a00\",xopf:\"\\ud835\\udd69\",xoplus:\"\\u2a01\",xotime:\"\\u2a02\",xrArr:\"\\u27f9\",xrarr:\"\\u27f6\",xscr:\"\\ud835\\udccd\",xsqcup:\"\\u2a06\",xuplus:\"\\u2a04\",xutri:\"\\u25b3\",xvee:\"\\u22c1\",xwedge:\"\\u22c0\",yacute:\"\\xfd\",yacy:\"\\u044f\",ycirc:\"\\u0177\",ycy:\"\\u044b\",yen:\"\\xa5\",yfr:\"\\ud835\\udd36\",yicy:\"\\u0457\",yopf:\"\\ud835\\udd6a\",yscr:\"\\ud835\\udcce\",yucy:\"\\u044e\",yuml:\"\\xff\",zacute:\"\\u017a\",zcaron:\"\\u017e\",zcy:\"\\u0437\",zdot:\"\\u017c\",zeetrf:\"\\u2128\",zeta:\"\\u03b6\",zfr:\"\\ud835\\udd37\",zhcy:\"\\u0436\",zigrarr:\"\\u21dd\",zopf:\"\\ud835\\udd6b\",zscr:\"\\ud835\\udccf\",zwj:\"\\u200d\",zwnj:\"\\u200c\"},Ge={}.hasOwnProperty;function $e(e){return!!Ge.call(_e,e)&&_e[e]}const We={name:\"characterReference\",tokenize:function(e,n,t){const r=this;let o,i,l=0;return function(n){return e.enter(\"characterReference\"),e.enter(\"characterReferenceMarker\"),e.consume(n),e.exit(\"characterReferenceMarker\"),a};function a(n){return 35===n?(e.enter(\"characterReferenceMarkerNumeric\"),e.consume(n),e.exit(\"characterReferenceMarkerNumeric\"),u):(e.enter(\"characterReferenceValue\"),o=31,i=J,s(n))}function u(n){return 88===n||120===n?(e.enter(\"characterReferenceMarkerHexadecimal\"),e.consume(n),e.exit(\"characterReferenceMarkerHexadecimal\"),e.enter(\"characterReferenceValue\"),o=6,i=Y,s):(e.enter(\"characterReferenceValue\"),o=7,i=Q,s(n))}function s(a){let u;return 59===a&&l?(u=e.exit(\"characterReferenceValue\"),i!==J||$e(r.sliceSerialize(u))?(e.enter(\"characterReferenceMarker\"),e.consume(a),e.exit(\"characterReferenceMarker\"),e.exit(\"characterReference\"),n):t(a)):i(a)&&l++<o?(e.consume(a),s):t(a)}}};const Qe={name:\"characterEscape\",tokenize:function(e,n,t){return function(n){return e.enter(\"characterEscape\"),e.enter(\"escapeMarker\"),e.consume(n),e.exit(\"escapeMarker\"),r};function r(r){return K(r)?(e.enter(\"characterEscapeValue\"),e.consume(r),e.exit(\"characterEscapeValue\"),e.exit(\"characterEscape\"),n):t(r)}}};const Ye={name:\"lineEnding\",tokenize:function(e,n){return function(t){return e.enter(\"lineEnding\"),e.consume(t),e.exit(\"lineEnding\"),le(e,n,\"linePrefix\")}}};const Je={name:\"labelEnd\",tokenize:function(e,n,t){const r=this;let o,i,l=r.events.length;for(;l--;)if((\"labelImage\"===r.events[l][1].type||\"labelLink\"===r.events[l][1].type)&&!r.events[l][1]._balanced){o=r.events[l][1];break}return function(n){if(!o)return t(n);return o._inactive?u(n):(i=r.parser.defined.includes(Oe(r.sliceSerialize({start:o.end,end:r.now()}))),e.enter(\"labelEnd\"),e.enter(\"labelMarker\"),e.consume(n),e.exit(\"labelMarker\"),e.exit(\"labelEnd\"),a)};function a(t){return 40===t?e.attempt(Ke,n,i?n:u)(t):91===t?e.attempt(Ze,n,i?e.attempt(Xe,n,u):u)(t):i?n(t):u(t)}function u(e){return o._balanced=!0,t(e)}},resolveTo:function(e,n){let t,r,o,i,l=e.length,a=0;for(;l--;)if(t=e[l][1],r){if(\"link\"===t.type||\"labelLink\"===t.type&&t._inactive)break;\"enter\"===e[l][0]&&\"labelLink\"===t.type&&(t._inactive=!0)}else if(o){if(\"enter\"===e[l][0]&&(\"labelImage\"===t.type||\"labelLink\"===t.type)&&!t._balanced&&(r=l,\"labelLink\"!==t.type)){a=2;break}}else\"labelEnd\"===t.type&&(o=l);const u={type:\"labelLink\"===e[r][1].type?\"link\":\"image\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[e.length-1][1].end)},s={type:\"label\",start:Object.assign({},e[r][1].start),end:Object.assign({},e[o][1].end)},c={type:\"labelText\",start:Object.assign({},e[r+a+2][1].end),end:Object.assign({},e[o-2][1].start)};return i=[[\"enter\",u,n],[\"enter\",s,n]],i=H(i,e.slice(r+1,r+a+3)),i=H(i,[[\"enter\",c,n]]),i=H(i,we(n.parser.constructs.insideSpan.null,e.slice(r+a+4,o-3),n)),i=H(i,[[\"exit\",c,n],e[o-2],e[o-1],[\"exit\",s,n]]),i=H(i,e.slice(o+1)),i=H(i,[[\"exit\",u,n]]),V(e,r,e.length,i),e},resolveAll:function(e){let n,t=-1;for(;++t<e.length;)n=e[t][1],\"labelImage\"!==n.type&&\"labelLink\"!==n.type&&\"labelEnd\"!==n.type||(e.splice(t+1,\"labelImage\"===n.type?4:2),n.type=\"data\",t++);return e}},Ke={tokenize:function(e,n,t){return function(n){return e.enter(\"resource\"),e.enter(\"resourceMarker\"),e.consume(n),e.exit(\"resourceMarker\"),Pe(e,r)};function r(n){return 41===n?l(n):De(e,o,t,\"resourceDestination\",\"resourceDestinationLiteral\",\"resourceDestinationLiteralMarker\",\"resourceDestinationRaw\",\"resourceDestinationString\",32)(n)}function o(n){return ee(n)?Pe(e,i)(n):l(n)}function i(n){return 34===n||39===n||40===n?Fe(e,Pe(e,l),t,\"resourceTitle\",\"resourceTitleMarker\",\"resourceTitleString\")(n):l(n)}function l(r){return 41===r?(e.enter(\"resourceMarker\"),e.consume(r),e.exit(\"resourceMarker\"),e.exit(\"resource\"),n):t(r)}}},Ze={tokenize:function(e,n,t){const r=this;return function(n){return qe.call(r,e,o,t,\"reference\",\"referenceMarker\",\"referenceString\")(n)};function o(e){return r.parser.defined.includes(Oe(r.sliceSerialize(r.events[r.events.length-1][1]).slice(1,-1)))?n(e):t(e)}}},Xe={tokenize:function(e,n,t){return function(n){return e.enter(\"reference\"),e.enter(\"referenceMarker\"),e.consume(n),e.exit(\"referenceMarker\"),r};function r(r){return 93===r?(e.enter(\"referenceMarker\"),e.consume(r),e.exit(\"referenceMarker\"),e.exit(\"reference\"),n):t(r)}}};function en(e){return null===e||ee(e)||re(e)?1:oe(e)?2:void 0}const nn={name:\"attention\",tokenize:function(e,n){const t=this.parser.constructs.attentionMarkers.null,r=this.previous,o=en(r);let i;return function(n){return e.enter(\"attentionSequence\"),i=n,l(n)};function l(a){if(a===i)return e.consume(a),l;const u=e.exit(\"attentionSequence\"),s=en(a),c=!s||2===s&&o||t.includes(a),f=!o||2===o&&s||t.includes(r);return u._open=Boolean(42===i?c:c&&(o||!f)),u._close=Boolean(42===i?f:f&&(s||!c)),n(a)}},resolveAll:function(e,n){let t,r,o,i,l,a,u,s,c=-1;for(;++c<e.length;)if(\"enter\"===e[c][0]&&\"attentionSequence\"===e[c][1].type&&e[c][1]._close)for(t=c;t--;)if(\"exit\"===e[t][0]&&\"attentionSequence\"===e[t][1].type&&e[t][1]._open&&n.sliceSerialize(e[t][1]).charCodeAt(0)===n.sliceSerialize(e[c][1]).charCodeAt(0)){if((e[t][1]._close||e[c][1]._open)&&(e[c][1].end.offset-e[c][1].start.offset)%3&&!((e[t][1].end.offset-e[t][1].start.offset+e[c][1].end.offset-e[c][1].start.offset)%3))continue;a=e[t][1].end.offset-e[t][1].start.offset>1&&e[c][1].end.offset-e[c][1].start.offset>1?2:1;const f=Object.assign({},e[t][1].end),p=Object.assign({},e[c][1].start);tn(f,-a),tn(p,a),i={type:a>1?\"strongSequence\":\"emphasisSequence\",start:f,end:Object.assign({},e[t][1].end)},l={type:a>1?\"strongSequence\":\"emphasisSequence\",start:Object.assign({},e[c][1].start),end:p},o={type:a>1?\"strongText\":\"emphasisText\",start:Object.assign({},e[t][1].end),end:Object.assign({},e[c][1].start)},r={type:a>1?\"strong\":\"emphasis\",start:Object.assign({},i.start),end:Object.assign({},l.end)},e[t][1].end=Object.assign({},i.start),e[c][1].start=Object.assign({},l.end),u=[],e[t][1].end.offset-e[t][1].start.offset&&(u=H(u,[[\"enter\",e[t][1],n],[\"exit\",e[t][1],n]])),u=H(u,[[\"enter\",r,n],[\"enter\",i,n],[\"exit\",i,n],[\"enter\",o,n]]),u=H(u,we(n.parser.constructs.insideSpan.null,e.slice(t+1,c),n)),u=H(u,[[\"exit\",o,n],[\"enter\",l,n],[\"exit\",l,n],[\"exit\",r,n]]),e[c][1].end.offset-e[c][1].start.offset?(s=2,u=H(u,[[\"enter\",e[c][1],n],[\"exit\",e[c][1],n]])):s=0,V(e,t-1,c-t+3,u),c=t+u.length-s-2;break}c=-1;for(;++c<e.length;)\"attentionSequence\"===e[c][1].type&&(e[c][1].type=\"data\");return e}};function tn(e,n){e.column+=n,e.offset+=n,e._bufferIndex+=n}const rn={42:Ae,43:Ae,45:Ae,48:Ae,49:Ae,50:Ae,51:Ae,52:Ae,53:Ae,54:Ae,55:Ae,56:Ae,57:Ae,62:Te},on={91:Ie},ln={[-2]:Be,[-1]:Be,32:Be},an={35:{name:\"headingAtx\",tokenize:function(e,n,t){const r=this;let o=0;return function(n){return e.enter(\"atxHeading\"),e.enter(\"atxHeadingSequence\"),i(n)};function i(a){return 35===a&&o++<6?(e.consume(a),i):null===a||ee(a)?(e.exit(\"atxHeadingSequence\"),r.interrupt?n(a):l(a)):t(a)}function l(t){return 35===t?(e.enter(\"atxHeadingSequence\"),a(t)):null===t||ne(t)?(e.exit(\"atxHeading\"),n(t)):te(t)?le(e,l,\"whitespace\")(t):(e.enter(\"atxHeadingText\"),u(t))}function a(n){return 35===n?(e.consume(n),a):(e.exit(\"atxHeadingSequence\"),l(n))}function u(n){return null===n||35===n||ee(n)?(e.exit(\"atxHeadingText\"),l(n)):(e.consume(n),u)}},resolve:function(e,n){let t,r,o=e.length-2,i=3;\"whitespace\"===e[i][1].type&&(i+=2);o-2>i&&\"whitespace\"===e[o][1].type&&(o-=2);\"atxHeadingSequence\"===e[o][1].type&&(i===o-1||o-4>i&&\"whitespace\"===e[o-2][1].type)&&(o-=i+1===o?2:4);o>i&&(t={type:\"atxHeadingText\",start:e[i][1].start,end:e[o][1].end},r={type:\"chunkText\",start:e[i][1].start,end:e[o][1].end,contentType:\"text\"},V(e,i,o-i+1,[[\"enter\",t,n],[\"enter\",r,n],[\"exit\",r,n],[\"exit\",t,n]]));return e}},42:Ee,45:[Ne,Ee],60:je,61:Ne,95:Ee,96:He,126:He},un={38:We,92:Qe},sn={[-5]:Ye,[-4]:Ye,[-3]:Ye,33:{name:\"labelStartImage\",tokenize:function(e,n,t){const r=this;return function(n){return e.enter(\"labelImage\"),e.enter(\"labelImageMarker\"),e.consume(n),e.exit(\"labelImageMarker\"),o};function o(n){return 91===n?(e.enter(\"labelMarker\"),e.consume(n),e.exit(\"labelMarker\"),e.exit(\"labelImage\"),i):t(n)}function i(e){return 94===e&&\"_hiddenFootnoteSupport\"in r.parser.constructs?t(e):n(e)}},resolveAll:Je.resolveAll},38:We,42:nn,60:[{name:\"autolink\",tokenize:function(e,n,t){let r=1;return function(n){return e.enter(\"autolink\"),e.enter(\"autolinkMarker\"),e.consume(n),e.exit(\"autolinkMarker\"),e.enter(\"autolinkProtocol\"),o};function o(n){return W(n)?(e.consume(n),i):Z(n)?u(n):t(n)}function i(e){return 43===e||45===e||46===e||J(e)?l(e):u(e)}function l(n){return 58===n?(e.consume(n),a):(43===n||45===n||46===n||J(n))&&r++<32?(e.consume(n),l):u(n)}function a(n){return 62===n?(e.exit(\"autolinkProtocol\"),p(n)):null===n||32===n||60===n||X(n)?t(n):(e.consume(n),a)}function u(n){return 64===n?(e.consume(n),r=0,s):Z(n)?(e.consume(n),u):t(n)}function s(e){return J(e)?c(e):t(e)}function c(n){return 46===n?(e.consume(n),r=0,s):62===n?(e.exit(\"autolinkProtocol\").type=\"autolinkEmail\",p(n)):f(n)}function f(n){return(45===n||J(n))&&r++<63?(e.consume(n),45===n?f:c):t(n)}function p(t){return e.enter(\"autolinkMarker\"),e.consume(t),e.exit(\"autolinkMarker\"),e.exit(\"autolink\"),n}}},{name:\"htmlText\",tokenize:function(e,n,t){const r=this;let o,i,l,a;return function(n){return e.enter(\"htmlText\"),e.enter(\"htmlTextData\"),e.consume(n),u};function u(n){return 33===n?(e.consume(n),s):47===n?(e.consume(n),w):63===n?(e.consume(n),x):W(n)?(e.consume(n),A):t(n)}function s(n){return 45===n?(e.consume(n),c):91===n?(e.consume(n),i=\"CDATA[\",l=0,g):W(n)?(e.consume(n),k):t(n)}function c(n){return 45===n?(e.consume(n),f):t(n)}function f(n){return null===n||62===n?t(n):45===n?(e.consume(n),p):d(n)}function p(e){return null===e||62===e?t(e):d(e)}function d(n){return null===n?t(n):45===n?(e.consume(n),h):ne(n)?(a=d,O(n)):(e.consume(n),d)}function h(n){return 45===n?(e.consume(n),R):d(n)}function g(n){return n===i.charCodeAt(l++)?(e.consume(n),l===i.length?m:g):t(n)}function m(n){return null===n?t(n):93===n?(e.consume(n),y):ne(n)?(a=m,O(n)):(e.consume(n),m)}function y(n){return 93===n?(e.consume(n),b):m(n)}function b(n){return 62===n?R(n):93===n?(e.consume(n),b):m(n)}function k(n){return null===n||62===n?R(n):ne(n)?(a=k,O(n)):(e.consume(n),k)}function x(n){return null===n?t(n):63===n?(e.consume(n),v):ne(n)?(a=x,O(n)):(e.consume(n),x)}function v(e){return 62===e?R(e):x(e)}function w(n){return W(n)?(e.consume(n),S):t(n)}function S(n){return 45===n||J(n)?(e.consume(n),S):E(n)}function E(n){return ne(n)?(a=E,O(n)):te(n)?(e.consume(n),E):R(n)}function A(n){return 45===n||J(n)?(e.consume(n),A):47===n||62===n||ee(n)?C(n):t(n)}function C(n){return 47===n?(e.consume(n),R):58===n||95===n||W(n)?(e.consume(n),L):ne(n)?(a=C,O(n)):te(n)?(e.consume(n),C):R(n)}function L(n){return 45===n||46===n||58===n||95===n||J(n)?(e.consume(n),L):T(n)}function T(n){return 61===n?(e.consume(n),D):ne(n)?(a=T,O(n)):te(n)?(e.consume(n),T):C(n)}function D(n){return null===n||60===n||61===n||62===n||96===n?t(n):34===n||39===n?(e.consume(n),o=n,q):ne(n)?(a=D,O(n)):te(n)?(e.consume(n),D):(e.consume(n),o=void 0,P)}function q(n){return n===o?(e.consume(n),F):null===n?t(n):ne(n)?(a=q,O(n)):(e.consume(n),q)}function F(e){return 62===e||47===e||ee(e)?C(e):t(e)}function P(n){return null===n||34===n||39===n||60===n||61===n||96===n?t(n):62===n||ee(n)?C(n):(e.consume(n),P)}function O(n){return e.exit(\"htmlTextData\"),e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),le(e,I,\"linePrefix\",r.parser.constructs.disable.null.includes(\"codeIndented\")?void 0:4)}function I(n){return e.enter(\"htmlTextData\"),a(n)}function R(r){return 62===r?(e.consume(r),e.exit(\"htmlTextData\"),e.exit(\"htmlText\"),n):t(r)}}}],91:{name:\"labelStartLink\",tokenize:function(e,n,t){const r=this;return function(n){return e.enter(\"labelLink\"),e.enter(\"labelMarker\"),e.consume(n),e.exit(\"labelMarker\"),e.exit(\"labelLink\"),o};function o(e){return 94===e&&\"_hiddenFootnoteSupport\"in r.parser.constructs?t(e):n(e)}},resolveAll:Je.resolveAll},92:[{name:\"hardBreakEscape\",tokenize:function(e,n,t){return function(n){return e.enter(\"hardBreakEscape\"),e.enter(\"escapeMarker\"),e.consume(n),r};function r(r){return ne(r)?(e.exit(\"escapeMarker\"),e.exit(\"hardBreakEscape\"),n(r)):t(r)}}},Qe],93:Je,95:nn,96:{name:\"codeText\",tokenize:function(e,n,t){let r,o,i=0;return function(n){return e.enter(\"codeText\"),e.enter(\"codeTextSequence\"),l(n)};function l(n){return 96===n?(e.consume(n),i++,l):(e.exit(\"codeTextSequence\"),a(n))}function a(n){return null===n?t(n):96===n?(o=e.enter(\"codeTextSequence\"),r=0,s(n)):32===n?(e.enter(\"space\"),e.consume(n),e.exit(\"space\"),a):ne(n)?(e.enter(\"lineEnding\"),e.consume(n),e.exit(\"lineEnding\"),a):(e.enter(\"codeTextData\"),u(n))}function u(n){return null===n||32===n||96===n||ne(n)?(e.exit(\"codeTextData\"),a(n)):(e.consume(n),u)}function s(t){return 96===t?(e.consume(t),r++,s):r===i?(e.exit(\"codeTextSequence\"),e.exit(\"codeText\"),n(t)):(o.type=\"codeTextData\",u(t))}},resolve:function(e){let n,t,r=e.length-4,o=3;if((\"lineEnding\"===e[o][1].type||\"space\"===e[o][1].type)&&(\"lineEnding\"===e[r][1].type||\"space\"===e[r][1].type))for(n=o;++n<r;)if(\"codeTextData\"===e[n][1].type){e[o][1].type=\"codeTextPadding\",e[r][1].type=\"codeTextPadding\",o+=2,r-=2;break}n=o-1,r++;for(;++n<=r;)void 0===t?n!==r&&\"lineEnding\"!==e[n][1].type&&(t=n):n!==r&&\"lineEnding\"!==e[n][1].type||(e[t][1].type=\"codeTextData\",n!==t+2&&(e[t][1].end=e[n-1][1].end,e.splice(t+2,n-t-2),r-=n-t-2,n=t+2),t=void 0);return e},previous:function(e){return 96!==e||\"characterEscape\"===this.events[this.events.length-1][1].type}}},cn={null:[nn,me]},fn={null:[42,95]},pn={null:[]};function dn(e={}){const n={defined:[],lazy:{},constructs:function(e){const n={};let t=-1;for(;++t<e.length;)G(n,e[t]);return n}([r].concat(e.extensions||[])),content:t(ae),document:t(ue),flow:t(ge),string:t(ye),text:t(be)};return n;function t(e){return function(t){return Se(n,e,t)}}}const hn=/[\\0\\t\\n\\r]/g;function gn(e,n){const t=Number.parseInt(e,n);return t<9||11===t||t>13&&t<32||t>126&&t<160||t>55295&&t<57344||t>64975&&t<65008||65535===(65535&t)||65534===(65535&t)||t>1114111?\"\\ufffd\":String.fromCharCode(t)}const mn=/\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;function yn(e,n,t){if(n)return n;if(35===t.charCodeAt(0)){const e=t.charCodeAt(1),n=120===e||88===e;return gn(t.slice(n?2:1),n?16:10)}return $e(t)||e}const bn={}.hasOwnProperty,kn=function(e,n,t){return\"string\"!==typeof n&&(t=n,n=void 0),function(e={}){const n=xn({transforms:[],canContainEols:[\"emphasis\",\"fragment\",\"heading\",\"paragraph\",\"strong\"],enter:{autolink:u(ie),autolinkProtocol:D,autolinkEmail:D,atxHeading:u(ne),blockQuote:u(J),characterEscape:D,characterReference:D,codeFenced:u(K),codeFencedFenceInfo:s,codeFencedFenceMeta:s,codeIndented:u(K,s),codeText:u(Z,s),codeTextData:D,data:D,codeFlowValue:D,definition:u(X),definitionDestinationString:s,definitionLabelString:s,definitionTitleString:s,emphasis:u(ee),hardBreakEscape:u(te),hardBreakTrailing:u(te),htmlFlow:u(re,s),htmlFlowData:D,htmlText:u(re,s),htmlTextData:D,image:u(oe),label:s,link:u(ie),listItem:u(ae),listItemValue:m,listOrdered:u(le,g),listUnordered:u(le),paragraph:u(ue),reference:_,referenceString:s,resourceDestinationString:s,resourceTitleString:s,setextHeading:u(ne),strong:u(se),thematicBreak:u(fe)},exit:{atxHeading:p(),atxHeadingSequence:A,autolink:p(),autolinkEmail:Y,autolinkProtocol:Q,blockQuote:p(),characterEscapeValue:q,characterReferenceMarkerHexadecimal:$,characterReferenceMarkerNumeric:$,characterReferenceValue:W,codeFenced:p(x),codeFencedFence:k,codeFencedFenceInfo:y,codeFencedFenceMeta:b,codeFlowValue:q,codeIndented:p(v),codeText:p(R),codeTextData:q,data:q,definition:p(),definitionDestinationString:E,definitionLabelString:w,definitionTitleString:S,emphasis:p(),hardBreakEscape:p(P),hardBreakTrailing:p(P),htmlFlow:p(O),htmlFlowData:q,htmlText:p(I),htmlTextData:q,image:p(z),label:M,labelText:N,lineEnding:F,link:p(B),listItem:p(),listOrdered:p(),listUnordered:p(),paragraph:p(),referenceString:G,resourceDestinationString:j,resourceTitleString:V,resource:H,setextHeading:p(T),setextHeadingLineSequence:L,setextHeadingText:C,strong:p(),thematicBreak:p()}},e.mdastExtensions||[]),t={};return r;function r(e){let t={type:\"root\",children:[]};const r=[],u=[],f={stack:[t],tokenStack:r,config:n,enter:c,exit:d,buffer:s,resume:h,setData:i,getData:l};let p=-1;for(;++p<e.length;)if(\"listOrdered\"===e[p][1].type||\"listUnordered\"===e[p][1].type)if(\"enter\"===e[p][0])u.push(p);else{p=o(e,u.pop(),p)}for(p=-1;++p<e.length;){const t=n[e[p][0]];bn.call(t,e[p][1].type)&&t[e[p][1].type].call(Object.assign({sliceSerialize:e[p][2].sliceSerialize},f),e[p][1])}if(r.length>0){const e=r[r.length-1];(e[1]||wn).call(f,void 0,e[0])}for(t.position={start:a(e.length>0?e[0][1].start:{line:1,column:1,offset:0}),end:a(e.length>0?e[e.length-2][1].end:{line:1,column:1,offset:0})},p=-1;++p<n.transforms.length;)t=n.transforms[p](t)||t;return t}function o(e,n,t){let r,o,i,l,a=n-1,u=-1,s=!1;for(;++a<=t;){const n=e[a];if(\"listUnordered\"===n[1].type||\"listOrdered\"===n[1].type||\"blockQuote\"===n[1].type?(\"enter\"===n[0]?u++:u--,l=void 0):\"lineEndingBlank\"===n[1].type?\"enter\"===n[0]&&(!r||l||u||i||(i=a),l=void 0):\"linePrefix\"===n[1].type||\"listItemValue\"===n[1].type||\"listItemMarker\"===n[1].type||\"listItemPrefix\"===n[1].type||\"listItemPrefixWhitespace\"===n[1].type||(l=void 0),!u&&\"enter\"===n[0]&&\"listItemPrefix\"===n[1].type||-1===u&&\"exit\"===n[0]&&(\"listUnordered\"===n[1].type||\"listOrdered\"===n[1].type)){if(r){let l=a;for(o=void 0;l--;){const n=e[l];if(\"lineEnding\"===n[1].type||\"lineEndingBlank\"===n[1].type){if(\"exit\"===n[0])continue;o&&(e[o][1].type=\"lineEndingBlank\",s=!0),n[1].type=\"lineEnding\",o=l}else if(\"linePrefix\"!==n[1].type&&\"blockQuotePrefix\"!==n[1].type&&\"blockQuotePrefixWhitespace\"!==n[1].type&&\"blockQuoteMarker\"!==n[1].type&&\"listItemIndent\"!==n[1].type)break}i&&(!o||i<o)&&(r._spread=!0),r.end=Object.assign({},o?e[o][1].start:n[1].end),e.splice(o||a,0,[\"exit\",r,n[2]]),a++,t++}\"listItemPrefix\"===n[1].type&&(r={type:\"listItem\",_spread:!1,start:Object.assign({},n[1].start)},e.splice(a,0,[\"enter\",r,n[2]]),a++,t++,i=void 0,l=!0)}}return e[n][1]._spread=s,t}function i(e,n){t[e]=n}function l(e){return t[e]}function a(e){return{line:e.line,column:e.column,offset:e.offset}}function u(e,n){return t;function t(t){c.call(this,e(t),t),n&&n.call(this,t)}}function s(){this.stack.push({type:\"fragment\",children:[]})}function c(e,n,t){return this.stack[this.stack.length-1].children.push(e),this.stack.push(e),this.tokenStack.push([n,t]),e.position={start:a(n.start)},e}function p(e){return n;function n(n){e&&e.call(this,n),d.call(this,n)}}function d(e,n){const t=this.stack.pop(),r=this.tokenStack.pop();if(!r)throw new Error(\"Cannot close `\"+e.type+\"` (\"+f({start:e.start,end:e.end})+\"): it\\u2019s not open\");if(r[0].type!==e.type)if(n)n.call(this,e,r[0]);else{(r[1]||wn).call(this,e,r[0])}return t.position.end=a(e.end),t}function h(){return function(e,n){var{includeImageAlt:t=!0}=n||{};return U(e,t)}(this.stack.pop())}function g(){i(\"expectingFirstListItemValue\",!0)}function m(e){if(l(\"expectingFirstListItemValue\")){this.stack[this.stack.length-2].start=Number.parseInt(this.sliceSerialize(e),10),i(\"expectingFirstListItemValue\")}}function y(){const e=this.resume();this.stack[this.stack.length-1].lang=e}function b(){const e=this.resume();this.stack[this.stack.length-1].meta=e}function k(){l(\"flowCodeInside\")||(this.buffer(),i(\"flowCodeInside\",!0))}function x(){const e=this.resume();this.stack[this.stack.length-1].value=e.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\"\"),i(\"flowCodeInside\")}function v(){const e=this.resume();this.stack[this.stack.length-1].value=e.replace(/(\\r?\\n|\\r)$/g,\"\")}function w(e){const n=this.resume(),t=this.stack[this.stack.length-1];t.label=n,t.identifier=Oe(this.sliceSerialize(e)).toLowerCase()}function S(){const e=this.resume();this.stack[this.stack.length-1].title=e}function E(){const e=this.resume();this.stack[this.stack.length-1].url=e}function A(e){const n=this.stack[this.stack.length-1];if(!n.depth){const t=this.sliceSerialize(e).length;n.depth=t}}function C(){i(\"setextHeadingSlurpLineEnding\",!0)}function L(e){this.stack[this.stack.length-1].depth=61===this.sliceSerialize(e).charCodeAt(0)?1:2}function T(){i(\"setextHeadingSlurpLineEnding\")}function D(e){const n=this.stack[this.stack.length-1];let t=n.children[n.children.length-1];t&&\"text\"===t.type||(t=ce(),t.position={start:a(e.start)},n.children.push(t)),this.stack.push(t)}function q(e){const n=this.stack.pop();n.value+=this.sliceSerialize(e),n.position.end=a(e.end)}function F(e){const t=this.stack[this.stack.length-1];if(l(\"atHardBreak\")){return t.children[t.children.length-1].position.end=a(e.end),void i(\"atHardBreak\")}!l(\"setextHeadingSlurpLineEnding\")&&n.canContainEols.includes(t.type)&&(D.call(this,e),q.call(this,e))}function P(){i(\"atHardBreak\",!0)}function O(){const e=this.resume();this.stack[this.stack.length-1].value=e}function I(){const e=this.resume();this.stack[this.stack.length-1].value=e}function R(){const e=this.resume();this.stack[this.stack.length-1].value=e}function B(){const e=this.stack[this.stack.length-1];l(\"inReference\")?(e.type+=\"Reference\",e.referenceType=l(\"referenceType\")||\"shortcut\",delete e.url,delete e.title):(delete e.identifier,delete e.label),i(\"referenceType\")}function z(){const e=this.stack[this.stack.length-1];l(\"inReference\")?(e.type+=\"Reference\",e.referenceType=l(\"referenceType\")||\"shortcut\",delete e.url,delete e.title):(delete e.identifier,delete e.label),i(\"referenceType\")}function N(e){const n=this.stack[this.stack.length-2],t=this.sliceSerialize(e);n.label=function(e){return e.replace(mn,yn)}(t),n.identifier=Oe(t).toLowerCase()}function M(){const e=this.stack[this.stack.length-1],n=this.resume(),t=this.stack[this.stack.length-1];i(\"inReference\",!0),\"link\"===t.type?t.children=e.children:t.alt=n}function j(){const e=this.resume();this.stack[this.stack.length-1].url=e}function V(){const e=this.resume();this.stack[this.stack.length-1].title=e}function H(){i(\"inReference\")}function _(){i(\"referenceType\",\"collapsed\")}function G(e){const n=this.resume(),t=this.stack[this.stack.length-1];t.label=n,t.identifier=Oe(this.sliceSerialize(e)).toLowerCase(),i(\"referenceType\",\"full\")}function $(e){i(\"characterReferenceType\",e.type)}function W(e){const n=this.sliceSerialize(e),t=l(\"characterReferenceType\");let r;t?(r=gn(n,\"characterReferenceMarkerNumeric\"===t?10:16),i(\"characterReferenceType\")):r=$e(n);const o=this.stack.pop();o.value+=r,o.position.end=a(e.end)}function Q(e){q.call(this,e);this.stack[this.stack.length-1].url=this.sliceSerialize(e)}function Y(e){q.call(this,e);this.stack[this.stack.length-1].url=\"mailto:\"+this.sliceSerialize(e)}function J(){return{type:\"blockquote\",children:[]}}function K(){return{type:\"code\",lang:null,meta:null,value:\"\"}}function Z(){return{type:\"inlineCode\",value:\"\"}}function X(){return{type:\"definition\",identifier:\"\",label:null,title:null,url:\"\"}}function ee(){return{type:\"emphasis\",children:[]}}function ne(){return{type:\"heading\",depth:void 0,children:[]}}function te(){return{type:\"break\"}}function re(){return{type:\"html\",value:\"\"}}function oe(){return{type:\"image\",title:null,url:\"\",alt:null}}function ie(){return{type:\"link\",title:null,url:\"\",children:[]}}function le(e){return{type:\"list\",ordered:\"listOrdered\"===e.type,start:null,spread:e._spread,children:[]}}function ae(e){return{type:\"listItem\",spread:e._spread,checked:null,children:[]}}function ue(){return{type:\"paragraph\",children:[]}}function se(){return{type:\"strong\",children:[]}}function ce(){return{type:\"text\",value:\"\"}}function fe(){return{type:\"thematicBreak\"}}}(t)(function(e){for(;!fe(e););return e}(dn(t).document().write(function(){let e,n=1,t=\"\",r=!0;return function(o,i,l){const a=[];let u,s,c,f,p;for(o=t+o.toString(i),c=0,t=\"\",r&&(65279===o.charCodeAt(0)&&c++,r=void 0);c<o.length;){if(hn.lastIndex=c,u=hn.exec(o),f=u&&void 0!==u.index?u.index:o.length,p=o.charCodeAt(f),!u){t=o.slice(c);break}if(10===p&&c===f&&e)a.push(-3),e=void 0;else switch(e&&(a.push(-5),e=void 0),c<f&&(a.push(o.slice(c,f)),n+=f-c),p){case 0:a.push(65533),n++;break;case 9:for(s=4*Math.ceil(n/4),a.push(-2);n++<s;)a.push(-1);break;case 10:a.push(-4),n=1;break;default:e=!0,n=1}c=f+1}return l&&(e&&a.push(-5),t&&a.push(t),a.push(null)),a}}()(e,n,!0))))};function xn(e,n){let t=-1;for(;++t<n.length;){const r=n[t];Array.isArray(r)?xn(e,r):vn(e,r)}return e}function vn(e,n){let t;for(t in n)if(bn.call(n,t)){const r=\"canContainEols\"===t||\"transforms\"===t,o=(bn.call(e,t)?e[t]:void 0)||(e[t]=r?[]:{}),i=n[t];i&&(r?e[t]=[...o,...i]:Object.assign(o,i))}}function wn(e,n){throw e?new Error(\"Cannot close `\"+e.type+\"` (\"+f({start:e.start,end:e.end})+\"): a different token (`\"+n.type+\"`, \"+f({start:n.start,end:n.end})+\") is open\"):new Error(\"Cannot close document, a token (`\"+n.type+\"`, \"+f({start:n.start,end:n.end})+\") is still open\")}var Sn=function(e){Object.assign(this,{Parser:n=>{const t=this.data(\"settings\");return kn(n,Object.assign({},t,e,{extensions:this.data(\"micromarkExtensions\")||[],mdastExtensions:this.data(\"fromMarkdownExtensions\")||[]}))}})},En=function(e,n,t){var r={type:String(e)};return void 0!==t&&null!==t||\"string\"!==typeof n&&!Array.isArray(n)?Object.assign(r,n):t=n,Array.isArray(t)?r.children=t:void 0!==t&&null!==t&&(r.value=String(t)),r};const An=function(e){if(void 0===e||null===e)return Ln;if(\"string\"===typeof e)return function(e){return Cn(n);function n(n){return n&&n.type===e}}(e);if(\"object\"===typeof e)return Array.isArray(e)?function(e){const n=[];let t=-1;for(;++t<e.length;)n[t]=An(e[t]);return Cn(r);function r(...e){let t=-1;for(;++t<n.length;)if(n[t].call(this,...e))return!0;return!1}}(e):function(e){return Cn(n);function n(n){let t;for(t in e)if(n[t]!==e[t])return!1;return!0}}(e);if(\"function\"===typeof e)return Cn(e);throw new Error(\"Expected function, string, or object as test\")};function Cn(e){return function(...n){return Boolean(e.call(this,...n))}}function Ln(){return!0}const Tn=function(e,n,t,r){\"function\"===typeof n&&\"function\"!==typeof t&&(r=t,t=n,n=null);const o=An(n),i=r?-1:1;!function e(l,a,u){const s=\"object\"===typeof l&&null!==l?l:{};let c;\"string\"===typeof s.type&&(c=\"string\"===typeof s.tagName?s.tagName:\"string\"===typeof s.name?s.name:void 0,Object.defineProperty(f,\"name\",{value:\"node (\"+s.type+(c?\"<\"+c+\">\":\"\")+\")\"}));return f;function f(){let s,c,f,p=[];if((!n||o(l,a,u[u.length-1]||null))&&(p=function(e){if(Array.isArray(e))return e;if(\"number\"===typeof e)return[true,e];return[e]}(t(l,u)),false===p[0]))return p;if(l.children&&\"skip\"!==p[0])for(c=(r?l.children.length:-1)+i,f=u.concat(l);c>-1&&c<l.children.length;){if(s=e(l.children[c],c,f)(),false===s[0])return s;c=\"number\"===typeof s[1]?s[1]:c+i}return p}}(e,null,[])()};const Dn=function(e,n,t,r){\"function\"===typeof n&&\"function\"!==typeof t&&(r=t,t=n,n=null),Tn(e,n,(function(e,n){const r=n[n.length-1];return t(e,r?r.children.indexOf(e):null,r)}),r)},qn=Pn(\"start\"),Fn=Pn(\"end\");function Pn(e){return function(n){const t=n&&n.position&&n.position[e]||{};return{line:t.line||null,column:t.column||null,offset:t.offset>-1?t.offset:null}}}const On={}.hasOwnProperty;function In(e){return String(e||\"\").toUpperCase()}const Rn={}.hasOwnProperty;function Bn(e,n){const t=n.data||{};return\"value\"in n&&!(Rn.call(t,\"hName\")||Rn.call(t,\"hProperties\")||Rn.call(t,\"hChildren\"))?e.augment(n,En(\"text\",n.value)):e(n,\"div\",Mn(e,n))}function zn(e,n,t){const r=n&&n.type;let o;if(!r)throw new Error(\"Expected node, got `\"+n+\"`\");return o=Rn.call(e.handlers,r)?e.handlers[r]:e.passThrough&&e.passThrough.includes(r)?Nn:e.unknownHandler,(\"function\"===typeof o?o:Bn)(e,n,t)}function Nn(e,n){return\"children\"in n?{...n,children:Mn(e,n)}:n}function Mn(e,n){const t=[];if(\"children\"in n){const r=n.children;let o=-1;for(;++o<r.length;){const i=zn(e,r[o],n);if(i){if(o&&\"break\"===r[o-1].type&&(Array.isArray(i)||\"text\"!==i.type||(i.value=i.value.replace(/^\\s+/,\"\")),!Array.isArray(i)&&\"element\"===i.type)){const e=i.children[0];e&&\"text\"===e.type&&(e.value=e.value.replace(/^\\s+/,\"\"))}Array.isArray(i)?t.push(...i):t.push(i)}}}return t}const Un={'\"':\"quot\",\"&\":\"amp\",\"<\":\"lt\",\">\":\"gt\"};function jn(e,n){const t=function(e){return e.replace(/[\"&<>]/g,(function(e){return\"&\"+Un[e]+\";\"}))}(function(e){const n=[];let t=-1,r=0,o=0;for(;++t<e.length;){const i=e.charCodeAt(t);let l=\"\";if(37===i&&J(e.charCodeAt(t+1))&&J(e.charCodeAt(t+2)))o=2;else if(i<128)/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(i))||(l=String.fromCharCode(i));else if(i>55295&&i<57344){const n=e.charCodeAt(t+1);i<56320&&n>56319&&n<57344?(l=String.fromCharCode(i,n),o=1):l=\"\\ufffd\"}else l=String.fromCharCode(i);l&&(n.push(e.slice(r,t),encodeURIComponent(l)),r=t+o+1,l=\"\"),o&&(t+=o,o=0)}return n.join(\"\")+e.slice(r)}(e||\"\"));if(!n)return t;const r=t.indexOf(\":\"),o=t.indexOf(\"?\"),i=t.indexOf(\"#\"),l=t.indexOf(\"/\");return r<0||l>-1&&r>l||o>-1&&r>o||i>-1&&r>i||n.test(t.slice(0,r))?t:\"\"}function Vn(e,n){const t=[];let r=-1;for(n&&t.push(En(\"text\",\"\\n\"));++r<e.length;)r&&t.push(En(\"text\",\"\\n\")),t.push(e[r]);return n&&e.length>0&&t.push(En(\"text\",\"\\n\")),t}function Hn(e,n){const t=String(n.identifier),r=jn(t.toLowerCase()),o=e.footnoteOrder.indexOf(t);let i;-1===o?(e.footnoteOrder.push(t),e.footnoteCounts[t]=1,i=e.footnoteOrder.length):(e.footnoteCounts[t]++,i=o+1);const l=e.footnoteCounts[t];return e(n,\"sup\",[e(n.position,\"a\",{href:\"#\"+e.clobberPrefix+\"fn-\"+r,id:e.clobberPrefix+\"fnref-\"+r+(l>1?\"-\"+l:\"\"),dataFootnoteRef:!0,ariaDescribedBy:\"footnote-label\"},[En(\"text\",String(i))])])}var _n=t(\"xGQ6\"),Gn=t.n(_n);function $n(e,n){const t=n.referenceType;let r=\"]\";if(\"collapsed\"===t?r+=\"[]\":\"full\"===t&&(r+=\"[\"+(n.label||n.identifier)+\"]\"),\"imageReference\"===n.type)return En(\"text\",\"![\"+n.alt+r);const o=Mn(e,n),i=o[0];i&&\"text\"===i.type?i.value=\"[\"+i.value:o.unshift(En(\"text\",\"[\"));const l=o[o.length-1];return l&&\"text\"===l.type?l.value+=r:o.push(En(\"text\",r)),o}function Wn(e){const n=e.spread;return void 0===n||null===n?e.children.length>1:n}function Qn(e,n,t){let r=0,o=e.length;if(n){let n=e.codePointAt(r);for(;9===n||32===n;)r++,n=e.codePointAt(r)}if(t){let n=e.codePointAt(o-1);for(;9===n||32===n;)o--,n=e.codePointAt(o-1)}return o>r?e.slice(r,o):\"\"}const Yn={blockquote:function(e,n){return e(n,\"blockquote\",Vn(Mn(e,n),!0))},break:function(e,n){return[e(n,\"br\"),En(\"text\",\"\\n\")]},code:function(e,n){const t=n.value?n.value+\"\\n\":\"\",r=n.lang&&n.lang.match(/^[^ \\t]+(?=[ \\t]|$)/),o={};r&&(o.className=[\"language-\"+r]);const i=e(n,\"code\",o,[En(\"text\",t)]);return n.meta&&(i.data={meta:n.meta}),e(n.position,\"pre\",[i])},delete:function(e,n){return e(n,\"del\",Mn(e,n))},emphasis:function(e,n){return e(n,\"em\",Mn(e,n))},footnoteReference:Hn,footnote:function(e,n){const t=e.footnoteById;let r=1;for(;r in t;)r++;const o=String(r);return t[o]={type:\"footnoteDefinition\",identifier:o,children:[{type:\"paragraph\",children:n.children}],position:n.position},Hn(e,{type:\"footnoteReference\",identifier:o,position:n.position})},heading:function(e,n){return e(n,\"h\"+n.depth,Mn(e,n))},html:function(e,n){return e.dangerous?e.augment(n,En(\"raw\",n.value)):null},imageReference:function(e,n){const t=e.definition(n.identifier);if(!t)return $n(e,n);const r={src:Gn()(t.url||\"\"),alt:n.alt};return null!==t.title&&void 0!==t.title&&(r.title=t.title),e(n,\"img\",r)},image:function(e,n){const t={src:Gn()(n.url),alt:n.alt};return null!==n.title&&void 0!==n.title&&(t.title=n.title),e(n,\"img\",t)},inlineCode:function(e,n){return e(n,\"code\",[En(\"text\",n.value.replace(/\\r?\\n|\\r/g,\" \"))])},linkReference:function(e,n){const t=e.definition(n.identifier);if(!t)return $n(e,n);const r={href:Gn()(t.url||\"\")};return null!==t.title&&void 0!==t.title&&(r.title=t.title),e(n,\"a\",r,Mn(e,n))},link:function(e,n){const t={href:Gn()(n.url)};return null!==n.title&&void 0!==n.title&&(t.title=n.title),e(n,\"a\",t,Mn(e,n))},listItem:function(e,n,t){const r=Mn(e,n),o=t?function(e){let n=e.spread;const t=e.children;let r=-1;for(;!n&&++r<t.length;)n=Wn(t[r]);return Boolean(n)}(t):Wn(n),i={},l=[];if(\"boolean\"===typeof n.checked){let t;r[0]&&\"element\"===r[0].type&&\"p\"===r[0].tagName?t=r[0]:(t=e(null,\"p\",[]),r.unshift(t)),t.children.length>0&&t.children.unshift(En(\"text\",\" \")),t.children.unshift(e(null,\"input\",{type:\"checkbox\",checked:n.checked,disabled:!0})),i.className=[\"task-list-item\"]}let a=-1;for(;++a<r.length;){const e=r[a];(o||0!==a||\"element\"!==e.type||\"p\"!==e.tagName)&&l.push(En(\"text\",\"\\n\")),\"element\"!==e.type||\"p\"!==e.tagName||o?l.push(e):l.push(...e.children)}const u=r[r.length-1];return!u||!o&&\"tagName\"in u&&\"p\"===u.tagName||l.push(En(\"text\",\"\\n\")),e(n,\"li\",i,l)},list:function(e,n){const t={},r=n.ordered?\"ol\":\"ul\",o=Mn(e,n);let i=-1;for(\"number\"===typeof n.start&&1!==n.start&&(t.start=n.start);++i<o.length;){const e=o[i];if(\"element\"===e.type&&\"li\"===e.tagName&&e.properties&&Array.isArray(e.properties.className)&&e.properties.className.includes(\"task-list-item\")){t.className=[\"contains-task-list\"];break}}return e(n,r,t,Vn(o,!0))},paragraph:function(e,n){return e(n,\"p\",Mn(e,n))},root:function(e,n){return e.augment(n,En(\"root\",Vn(Mn(e,n))))},strong:function(e,n){return e(n,\"strong\",Mn(e,n))},table:function(e,n){const t=n.children;let r=-1;const o=n.align||[],i=[];for(;++r<t.length;){const l=t[r].children,a=0===r?\"th\":\"td\",u=[];let s=-1;const c=n.align?o.length:l.length;for(;++s<c;){const n=l[s];u.push(e(n,a,{align:o[s]},n?Mn(e,n):[]))}i[r]=e(t[r],\"tr\",Vn(u,!0))}return e(n,\"table\",Vn([e(i[0].position,\"thead\",Vn([i[0]],!0))].concat(i[1]?e({start:qn(i[1]),end:Fn(i[i.length-1])},\"tbody\",Vn(i.slice(1),!0)):[]),!0))},text:function(e,n){return e.augment(n,En(\"text\",function(e){const n=String(e),t=/\\r?\\n|\\r/g;let r=t.exec(n),o=0;const i=[];for(;r;)i.push(Qn(n.slice(o,r.index),o>0,!0),r[0]),o=r.index+r[0].length,r=t.exec(n);return i.push(Qn(n.slice(o),o>0,!1)),i.join(\"\")}(String(n.value))))},thematicBreak:function(e,n){return e(n,\"hr\")},toml:Jn,yaml:Jn,definition:Jn,footnoteDefinition:Jn};function Jn(){return null}const Kn={}.hasOwnProperty;function Zn(e,n){const t=n||{},r=t.allowDangerousHtml||!1,o={};return l.dangerous=r,l.clobberPrefix=void 0===t.clobberPrefix||null===t.clobberPrefix?\"user-content-\":t.clobberPrefix,l.footnoteLabel=t.footnoteLabel||\"Footnotes\",l.footnoteLabelTagName=t.footnoteLabelTagName||\"h2\",l.footnoteLabelProperties=t.footnoteLabelProperties||{className:[\"sr-only\"]},l.footnoteBackLabel=t.footnoteBackLabel||\"Back to content\",l.definition=function(e){const n=Object.create(null);if(!e||!e.type)throw new Error(\"mdast-util-definitions expected node\");return Dn(e,\"definition\",(e=>{const t=In(e.identifier);t&&!On.call(n,t)&&(n[t]=e)})),function(e){const t=In(e);return t&&On.call(n,t)?n[t]:null}}(e),l.footnoteById=o,l.footnoteOrder=[],l.footnoteCounts={},l.augment=i,l.handlers={...Yn,...t.handlers},l.unknownHandler=t.unknownHandler,l.passThrough=t.passThrough,Dn(e,\"footnoteDefinition\",(e=>{const n=String(e.identifier).toUpperCase();Kn.call(o,n)||(o[n]=e)})),l;function i(e,n){if(e&&\"data\"in e&&e.data){const t=e.data;t.hName&&(\"element\"!==n.type&&(n={type:\"element\",tagName:\"\",properties:{},children:[]}),n.tagName=t.hName),\"element\"===n.type&&t.hProperties&&(n.properties={...n.properties,...t.hProperties}),\"children\"in n&&n.children&&t.hChildren&&(n.children=t.hChildren)}if(e){const r=\"type\"in e?e:{position:e};(t=r)&&t.position&&t.position.start&&t.position.start.line&&t.position.start.column&&t.position.end&&t.position.end.line&&t.position.end.column&&(n.position={start:qn(r),end:Fn(r)})}var t;return n}function l(e,n,t,r){return Array.isArray(t)&&(r=t,t={}),i(e,{type:\"element\",tagName:n,properties:t||{},children:r||[]})}}function Xn(e,n){const t=Zn(e,n),r=zn(t,e,null),o=function(e){let n=-1;const t=[];for(;++n<e.footnoteOrder.length;){const r=e.footnoteById[e.footnoteOrder[n].toUpperCase()];if(!r)continue;const o=Mn(e,r),i=String(r.identifier),l=jn(i.toLowerCase());let a=0;const u=[];for(;++a<=e.footnoteCounts[i];){const n={type:\"element\",tagName:\"a\",properties:{href:\"#\"+e.clobberPrefix+\"fnref-\"+l+(a>1?\"-\"+a:\"\"),dataFootnoteBackref:!0,className:[\"data-footnote-backref\"],ariaLabel:e.footnoteBackLabel},children:[{type:\"text\",value:\"\\u21a9\"}]};a>1&&n.children.push({type:\"element\",tagName:\"sup\",children:[{type:\"text\",value:String(a)}]}),u.length>0&&u.push({type:\"text\",value:\" \"}),u.push(n)}const s=o[o.length-1];if(s&&\"element\"===s.type&&\"p\"===s.tagName){const e=s.children[s.children.length-1];e&&\"text\"===e.type?e.value+=\" \":s.children.push({type:\"text\",value:\" \"}),s.children.push(...u)}else o.push(...u);const c={type:\"element\",tagName:\"li\",properties:{id:e.clobberPrefix+\"fn-\"+l},children:Vn(o,!0)};r.position&&(c.position=r.position),t.push(c)}return 0===t.length?null:{type:\"element\",tagName:\"section\",properties:{dataFootnotes:!0,className:[\"footnotes\"]},children:[{type:\"element\",tagName:e.footnoteLabelTagName,properties:{...JSON.parse(JSON.stringify(e.footnoteLabelProperties)),id:\"footnote-label\"},children:[En(\"text\",e.footnoteLabel)]},{type:\"text\",value:\"\\n\"},{type:\"element\",tagName:\"ol\",properties:{},children:Vn(t,!0)},{type:\"text\",value:\"\\n\"}]}}(t);return o&&r.children.push(En(\"text\",\"\\n\"),o),Array.isArray(r)?{type:\"root\",children:r}:r}var et=function(e,n){return e&&\"run\"in e?function(e,n){return(t,r,o)=>{e.run(Xn(t,n),r,(e=>{o(e)}))}}(e,n):function(e){return n=>Xn(n,e)}(e||n)};var nt=t(\"17x9\"),tt=t.n(nt);class rt{constructor(e,n,t){this.property=e,this.normal=n,t&&(this.space=t)}}function ot(e,n){const t={},r={};let o=-1;for(;++o<e.length;)Object.assign(t,e[o].property),Object.assign(r,e[o].normal);return new rt(t,r,n)}function it(e){return e.toLowerCase()}rt.prototype.property={},rt.prototype.normal={},rt.prototype.space=null;class lt{constructor(e,n){this.property=e,this.attribute=n}}lt.prototype.space=null,lt.prototype.boolean=!1,lt.prototype.booleanish=!1,lt.prototype.overloadedBoolean=!1,lt.prototype.number=!1,lt.prototype.commaSeparated=!1,lt.prototype.spaceSeparated=!1,lt.prototype.commaOrSpaceSeparated=!1,lt.prototype.mustUseProperty=!1,lt.prototype.defined=!1;let at=0;const ut=gt(),st=gt(),ct=gt(),ft=gt(),pt=gt(),dt=gt(),ht=gt();function gt(){return 2**++at}const mt=Object.keys(o);class yt extends lt{constructor(e,n,t,r){let i=-1;if(super(e,n),bt(this,\"space\",r),\"number\"===typeof t)for(;++i<mt.length;){const e=mt[i];bt(this,mt[i],(t&o[e])===o[e])}}}function bt(e,n,t){t&&(e[n]=t)}yt.prototype.defined=!0;const kt={}.hasOwnProperty;function xt(e){const n={},t={};let r;for(r in e.properties)if(kt.call(e.properties,r)){const o=e.properties[r],i=new yt(r,e.transform(e.attributes||{},r),o,e.space);e.mustUseProperty&&e.mustUseProperty.includes(r)&&(i.mustUseProperty=!0),n[r]=i,t[it(r)]=r,t[it(i.attribute)]=r}return new rt(n,t,e.space)}const vt=xt({space:\"xlink\",transform:(e,n)=>\"xlink:\"+n.slice(5).toLowerCase(),properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}}),wt=xt({space:\"xml\",transform:(e,n)=>\"xml:\"+n.slice(3).toLowerCase(),properties:{xmlLang:null,xmlBase:null,xmlSpace:null}});function St(e,n){return n in e?e[n]:n}function Et(e,n){return St(e,n.toLowerCase())}const At=xt({space:\"xmlns\",attributes:{xmlnsxlink:\"xmlns:xlink\"},transform:Et,properties:{xmlns:null,xmlnsXLink:null}}),Ct=xt({transform:(e,n)=>\"role\"===n?n:\"aria-\"+n.slice(4).toLowerCase(),properties:{ariaActiveDescendant:null,ariaAtomic:st,ariaAutoComplete:null,ariaBusy:st,ariaChecked:st,ariaColCount:ft,ariaColIndex:ft,ariaColSpan:ft,ariaControls:pt,ariaCurrent:null,ariaDescribedBy:pt,ariaDetails:null,ariaDisabled:st,ariaDropEffect:pt,ariaErrorMessage:null,ariaExpanded:st,ariaFlowTo:pt,ariaGrabbed:st,ariaHasPopup:null,ariaHidden:st,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:pt,ariaLevel:ft,ariaLive:null,ariaModal:st,ariaMultiLine:st,ariaMultiSelectable:st,ariaOrientation:null,ariaOwns:pt,ariaPlaceholder:null,ariaPosInSet:ft,ariaPressed:st,ariaReadOnly:st,ariaRelevant:null,ariaRequired:st,ariaRoleDescription:pt,ariaRowCount:ft,ariaRowIndex:ft,ariaRowSpan:ft,ariaSelected:st,ariaSetSize:ft,ariaSort:null,ariaValueMax:ft,ariaValueMin:ft,ariaValueNow:ft,ariaValueText:null,role:null}}),Lt=xt({space:\"html\",attributes:{acceptcharset:\"accept-charset\",classname:\"class\",htmlfor:\"for\",httpequiv:\"http-equiv\"},transform:Et,mustUseProperty:[\"checked\",\"multiple\",\"muted\",\"selected\"],properties:{abbr:null,accept:dt,acceptCharset:pt,accessKey:pt,action:null,allow:null,allowFullScreen:ut,allowPaymentRequest:ut,allowUserMedia:ut,alt:null,as:null,async:ut,autoCapitalize:null,autoComplete:pt,autoFocus:ut,autoPlay:ut,capture:ut,charSet:null,checked:ut,cite:null,className:pt,cols:ft,colSpan:null,content:null,contentEditable:st,controls:ut,controlsList:pt,coords:ft|dt,crossOrigin:null,data:null,dateTime:null,decoding:null,default:ut,defer:ut,dir:null,dirName:null,disabled:ut,download:ct,draggable:st,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:ut,formTarget:null,headers:pt,height:ft,hidden:ut,high:ft,href:null,hrefLang:null,htmlFor:pt,httpEquiv:pt,id:null,imageSizes:null,imageSrcSet:null,inputMode:null,integrity:null,is:null,isMap:ut,itemId:null,itemProp:pt,itemRef:pt,itemScope:ut,itemType:pt,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:ut,low:ft,manifest:null,max:null,maxLength:ft,media:null,method:null,min:null,minLength:ft,multiple:ut,muted:ut,name:null,nonce:null,noModule:ut,noValidate:ut,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextLost:null,onContextMenu:null,onContextRestored:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:ut,optimum:ft,pattern:null,ping:pt,placeholder:null,playsInline:ut,poster:null,preload:null,readOnly:ut,referrerPolicy:null,rel:pt,required:ut,reversed:ut,rows:ft,rowSpan:ft,sandbox:pt,scope:null,scoped:ut,seamless:ut,selected:ut,shape:null,size:ft,sizes:null,slot:null,span:ft,spellCheck:st,src:null,srcDoc:null,srcLang:null,srcSet:null,start:ft,step:null,style:null,tabIndex:ft,target:null,title:null,translate:null,type:null,typeMustMatch:ut,useMap:null,value:st,width:ft,wrap:null,align:null,aLink:null,archive:pt,axis:null,background:null,bgColor:null,border:ft,borderColor:null,bottomMargin:ft,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:ut,declare:ut,event:null,face:null,frame:null,frameBorder:null,hSpace:ft,leftMargin:ft,link:null,longDesc:null,lowSrc:null,marginHeight:ft,marginWidth:ft,noResize:ut,noHref:ut,noShade:ut,noWrap:ut,object:null,profile:null,prompt:null,rev:null,rightMargin:ft,rules:null,scheme:null,scrolling:st,standby:null,summary:null,text:null,topMargin:ft,valueType:null,version:null,vAlign:null,vLink:null,vSpace:ft,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:ut,disableRemotePlayback:ut,prefix:null,property:null,results:ft,security:null,unselectable:null}}),Tt=xt({space:\"svg\",attributes:{accentHeight:\"accent-height\",alignmentBaseline:\"alignment-baseline\",arabicForm:\"arabic-form\",baselineShift:\"baseline-shift\",capHeight:\"cap-height\",className:\"class\",clipPath:\"clip-path\",clipRule:\"clip-rule\",colorInterpolation:\"color-interpolation\",colorInterpolationFilters:\"color-interpolation-filters\",colorProfile:\"color-profile\",colorRendering:\"color-rendering\",crossOrigin:\"crossorigin\",dataType:\"datatype\",dominantBaseline:\"dominant-baseline\",enableBackground:\"enable-background\",fillOpacity:\"fill-opacity\",fillRule:\"fill-rule\",floodColor:\"flood-color\",floodOpacity:\"flood-opacity\",fontFamily:\"font-family\",fontSize:\"font-size\",fontSizeAdjust:\"font-size-adjust\",fontStretch:\"font-stretch\",fontStyle:\"font-style\",fontVariant:\"font-variant\",fontWeight:\"font-weight\",glyphName:\"glyph-name\",glyphOrientationHorizontal:\"glyph-orientation-horizontal\",glyphOrientationVertical:\"glyph-orientation-vertical\",hrefLang:\"hreflang\",horizAdvX:\"horiz-adv-x\",horizOriginX:\"horiz-origin-x\",horizOriginY:\"horiz-origin-y\",imageRendering:\"image-rendering\",letterSpacing:\"letter-spacing\",lightingColor:\"lighting-color\",markerEnd:\"marker-end\",markerMid:\"marker-mid\",markerStart:\"marker-start\",navDown:\"nav-down\",navDownLeft:\"nav-down-left\",navDownRight:\"nav-down-right\",navLeft:\"nav-left\",navNext:\"nav-next\",navPrev:\"nav-prev\",navRight:\"nav-right\",navUp:\"nav-up\",navUpLeft:\"nav-up-left\",navUpRight:\"nav-up-right\",onAbort:\"onabort\",onActivate:\"onactivate\",onAfterPrint:\"onafterprint\",onBeforePrint:\"onbeforeprint\",onBegin:\"onbegin\",onCancel:\"oncancel\",onCanPlay:\"oncanplay\",onCanPlayThrough:\"oncanplaythrough\",onChange:\"onchange\",onClick:\"onclick\",onClose:\"onclose\",onCopy:\"oncopy\",onCueChange:\"oncuechange\",onCut:\"oncut\",onDblClick:\"ondblclick\",onDrag:\"ondrag\",onDragEnd:\"ondragend\",onDragEnter:\"ondragenter\",onDragExit:\"ondragexit\",onDragLeave:\"ondragleave\",onDragOver:\"ondragover\",onDragStart:\"ondragstart\",onDrop:\"ondrop\",onDurationChange:\"ondurationchange\",onEmptied:\"onemptied\",onEnd:\"onend\",onEnded:\"onended\",onError:\"onerror\",onFocus:\"onfocus\",onFocusIn:\"onfocusin\",onFocusOut:\"onfocusout\",onHashChange:\"onhashchange\",onInput:\"oninput\",onInvalid:\"oninvalid\",onKeyDown:\"onkeydown\",onKeyPress:\"onkeypress\",onKeyUp:\"onkeyup\",onLoad:\"onload\",onLoadedData:\"onloadeddata\",onLoadedMetadata:\"onloadedmetadata\",onLoadStart:\"onloadstart\",onMessage:\"onmessage\",onMouseDown:\"onmousedown\",onMouseEnter:\"onmouseenter\",onMouseLeave:\"onmouseleave\",onMouseMove:\"onmousemove\",onMouseOut:\"onmouseout\",onMouseOver:\"onmouseover\",onMouseUp:\"onmouseup\",onMouseWheel:\"onmousewheel\",onOffline:\"onoffline\",onOnline:\"ononline\",onPageHide:\"onpagehide\",onPageShow:\"onpageshow\",onPaste:\"onpaste\",onPause:\"onpause\",onPlay:\"onplay\",onPlaying:\"onplaying\",onPopState:\"onpopstate\",onProgress:\"onprogress\",onRateChange:\"onratechange\",onRepeat:\"onrepeat\",onReset:\"onreset\",onResize:\"onresize\",onScroll:\"onscroll\",onSeeked:\"onseeked\",onSeeking:\"onseeking\",onSelect:\"onselect\",onShow:\"onshow\",onStalled:\"onstalled\",onStorage:\"onstorage\",onSubmit:\"onsubmit\",onSuspend:\"onsuspend\",onTimeUpdate:\"ontimeupdate\",onToggle:\"ontoggle\",onUnload:\"onunload\",onVolumeChange:\"onvolumechange\",onWaiting:\"onwaiting\",onZoom:\"onzoom\",overlinePosition:\"overline-position\",overlineThickness:\"overline-thickness\",paintOrder:\"paint-order\",panose1:\"panose-1\",pointerEvents:\"pointer-events\",referrerPolicy:\"referrerpolicy\",renderingIntent:\"rendering-intent\",shapeRendering:\"shape-rendering\",stopColor:\"stop-color\",stopOpacity:\"stop-opacity\",strikethroughPosition:\"strikethrough-position\",strikethroughThickness:\"strikethrough-thickness\",strokeDashArray:\"stroke-dasharray\",strokeDashOffset:\"stroke-dashoffset\",strokeLineCap:\"stroke-linecap\",strokeLineJoin:\"stroke-linejoin\",strokeMiterLimit:\"stroke-miterlimit\",strokeOpacity:\"stroke-opacity\",strokeWidth:\"stroke-width\",tabIndex:\"tabindex\",textAnchor:\"text-anchor\",textDecoration:\"text-decoration\",textRendering:\"text-rendering\",typeOf:\"typeof\",underlinePosition:\"underline-position\",underlineThickness:\"underline-thickness\",unicodeBidi:\"unicode-bidi\",unicodeRange:\"unicode-range\",unitsPerEm:\"units-per-em\",vAlphabetic:\"v-alphabetic\",vHanging:\"v-hanging\",vIdeographic:\"v-ideographic\",vMathematical:\"v-mathematical\",vectorEffect:\"vector-effect\",vertAdvY:\"vert-adv-y\",vertOriginX:\"vert-origin-x\",vertOriginY:\"vert-origin-y\",wordSpacing:\"word-spacing\",writingMode:\"writing-mode\",xHeight:\"x-height\",playbackOrder:\"playbackorder\",timelineBegin:\"timelinebegin\"},transform:St,properties:{about:ht,accentHeight:ft,accumulate:null,additive:null,alignmentBaseline:null,alphabetic:ft,amplitude:ft,arabicForm:null,ascent:ft,attributeName:null,attributeType:null,azimuth:ft,bandwidth:null,baselineShift:null,baseFrequency:null,baseProfile:null,bbox:null,begin:null,bias:ft,by:null,calcMode:null,capHeight:ft,className:pt,clip:null,clipPath:null,clipPathUnits:null,clipRule:null,color:null,colorInterpolation:null,colorInterpolationFilters:null,colorProfile:null,colorRendering:null,content:null,contentScriptType:null,contentStyleType:null,crossOrigin:null,cursor:null,cx:null,cy:null,d:null,dataType:null,defaultAction:null,descent:ft,diffuseConstant:ft,direction:null,display:null,dur:null,divisor:ft,dominantBaseline:null,download:ut,dx:null,dy:null,edgeMode:null,editable:null,elevation:ft,enableBackground:null,end:null,event:null,exponent:ft,externalResourcesRequired:null,fill:null,fillOpacity:ft,fillRule:null,filter:null,filterRes:null,filterUnits:null,floodColor:null,floodOpacity:null,focusable:null,focusHighlight:null,fontFamily:null,fontSize:null,fontSizeAdjust:null,fontStretch:null,fontStyle:null,fontVariant:null,fontWeight:null,format:null,fr:null,from:null,fx:null,fy:null,g1:dt,g2:dt,glyphName:dt,glyphOrientationHorizontal:null,glyphOrientationVertical:null,glyphRef:null,gradientTransform:null,gradientUnits:null,handler:null,hanging:ft,hatchContentUnits:null,hatchUnits:null,height:null,href:null,hrefLang:null,horizAdvX:ft,horizOriginX:ft,horizOriginY:ft,id:null,ideographic:ft,imageRendering:null,initialVisibility:null,in:null,in2:null,intercept:ft,k:ft,k1:ft,k2:ft,k3:ft,k4:ft,kernelMatrix:ht,kernelUnitLength:null,keyPoints:null,keySplines:null,keyTimes:null,kerning:null,lang:null,lengthAdjust:null,letterSpacing:null,lightingColor:null,limitingConeAngle:ft,local:null,markerEnd:null,markerMid:null,markerStart:null,markerHeight:null,markerUnits:null,markerWidth:null,mask:null,maskContentUnits:null,maskUnits:null,mathematical:null,max:null,media:null,mediaCharacterEncoding:null,mediaContentEncodings:null,mediaSize:ft,mediaTime:null,method:null,min:null,mode:null,name:null,navDown:null,navDownLeft:null,navDownRight:null,navLeft:null,navNext:null,navPrev:null,navRight:null,navUp:null,navUpLeft:null,navUpRight:null,numOctaves:null,observer:null,offset:null,onAbort:null,onActivate:null,onAfterPrint:null,onBeforePrint:null,onBegin:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnd:null,onEnded:null,onError:null,onFocus:null,onFocusIn:null,onFocusOut:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadStart:null,onMessage:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onMouseWheel:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRepeat:null,onReset:null,onResize:null,onScroll:null,onSeeked:null,onSeeking:null,onSelect:null,onShow:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnload:null,onVolumeChange:null,onWaiting:null,onZoom:null,opacity:null,operator:null,order:null,orient:null,orientation:null,origin:null,overflow:null,overlay:null,overlinePosition:ft,overlineThickness:ft,paintOrder:null,panose1:null,path:null,pathLength:ft,patternContentUnits:null,patternTransform:null,patternUnits:null,phase:null,ping:pt,pitch:null,playbackOrder:null,pointerEvents:null,points:null,pointsAtX:ft,pointsAtY:ft,pointsAtZ:ft,preserveAlpha:null,preserveAspectRatio:null,primitiveUnits:null,propagate:null,property:ht,r:null,radius:null,referrerPolicy:null,refX:null,refY:null,rel:ht,rev:ht,renderingIntent:null,repeatCount:null,repeatDur:null,requiredExtensions:ht,requiredFeatures:ht,requiredFonts:ht,requiredFormats:ht,resource:null,restart:null,result:null,rotate:null,rx:null,ry:null,scale:null,seed:null,shapeRendering:null,side:null,slope:null,snapshotTime:null,specularConstant:ft,specularExponent:ft,spreadMethod:null,spacing:null,startOffset:null,stdDeviation:null,stemh:null,stemv:null,stitchTiles:null,stopColor:null,stopOpacity:null,strikethroughPosition:ft,strikethroughThickness:ft,string:null,stroke:null,strokeDashArray:ht,strokeDashOffset:null,strokeLineCap:null,strokeLineJoin:null,strokeMiterLimit:ft,strokeOpacity:ft,strokeWidth:null,style:null,surfaceScale:ft,syncBehavior:null,syncBehaviorDefault:null,syncMaster:null,syncTolerance:null,syncToleranceDefault:null,systemLanguage:ht,tabIndex:ft,tableValues:null,target:null,targetX:ft,targetY:ft,textAnchor:null,textDecoration:null,textRendering:null,textLength:null,timelineBegin:null,title:null,transformBehavior:null,type:null,typeOf:ht,to:null,transform:null,u1:null,u2:null,underlinePosition:ft,underlineThickness:ft,unicode:null,unicodeBidi:null,unicodeRange:null,unitsPerEm:ft,values:null,vAlphabetic:ft,vMathematical:ft,vectorEffect:null,vHanging:ft,vIdeographic:ft,version:null,vertAdvY:ft,vertOriginX:ft,vertOriginY:ft,viewBox:null,viewTarget:null,visibility:null,width:null,widths:null,wordSpacing:null,writingMode:null,x:null,x1:null,x2:null,xChannelSelector:null,xHeight:ft,y:null,y1:null,y2:null,yChannelSelector:null,z:null,zoomAndPan:null}}),Dt=ot([wt,vt,At,Ct,Lt],\"html\"),qt=ot([wt,vt,At,Ct,Tt],\"svg\");function Ft(e){if(e.allowedElements&&e.disallowedElements)throw new TypeError(\"Only one of `allowedElements` and `disallowedElements` should be defined\");if(e.allowedElements||e.disallowedElements||e.allowElement)return n=>{Dn(n,\"element\",((n,t,r)=>{const o=r;let i;if(e.allowedElements?i=!e.allowedElements.includes(n.tagName):e.disallowedElements&&(i=e.disallowedElements.includes(n.tagName)),!i&&e.allowElement&&\"number\"===typeof t&&(i=!e.allowElement(n,t,o)),i&&\"number\"===typeof t)return e.unwrapDisallowed&&n.children?o.children.splice(t,1,...n.children):o.children.splice(t,1),t}))}}var Pt=t(\"rVUt\"),Ot=t.n(Pt);function It(e){var n=e&&\"object\"===typeof e&&\"text\"===e.type?e.value||\"\":e;return\"string\"===typeof n&&\"\"===n.replace(/[ \\t\\n\\f\\r]/g,\"\")}const Rt=/^data[-\\w.:]+$/i,Bt=/-[a-z]/g,zt=/[A-Z]/g;function Nt(e){return\"-\"+e.toLowerCase()}function Mt(e){return e.charAt(1).toUpperCase()}const Ut={classId:\"classID\",dataType:\"datatype\",itemId:\"itemID\",strokeDashArray:\"strokeDasharray\",strokeDashOffset:\"strokeDashoffset\",strokeLineCap:\"strokeLinecap\",strokeLineJoin:\"strokeLinejoin\",strokeMiterLimit:\"strokeMiterlimit\",typeOf:\"typeof\",xLinkActuate:\"xlinkActuate\",xLinkArcRole:\"xlinkArcrole\",xLinkHref:\"xlinkHref\",xLinkRole:\"xlinkRole\",xLinkShow:\"xlinkShow\",xLinkTitle:\"xlinkTitle\",xLinkType:\"xlinkType\",xmlnsXLink:\"xmlnsXlink\"};var jt=t(\"CC3I\"),Vt=t.n(jt);const Ht={}.hasOwnProperty,_t=new Set([\"table\",\"thead\",\"tbody\",\"tfoot\",\"tr\"]);function Gt(e,n){const t=[];let r,o=-1;for(;++o<n.children.length;)r=n.children[o],\"element\"===r.type?t.push($t(e,r,o,n)):\"text\"===r.type?\"element\"===n.type&&_t.has(n.tagName)&&It(r)||t.push(r.value):\"raw\"!==r.type||e.options.skipHtml||t.push(r.value);return t}function $t(e,n,t,r){const o=e.options,i=e.schema,l=n.tagName,a={};let s,c=i;if(\"html\"===i.space&&\"svg\"===l&&(c=qt,e.schema=c),n.properties)for(s in n.properties)Ht.call(n.properties,s)&&Qt(a,s,n.properties[s],e);\"ol\"!==l&&\"ul\"!==l||e.listDepth++;const f=Gt(e,n);\"ol\"!==l&&\"ul\"!==l||e.listDepth--,e.schema=i;const p=n.position||{start:{line:null,column:null,offset:null},end:{line:null,column:null,offset:null}},d=o.components&&Ht.call(o.components,l)?o.components[l]:l,h=\"string\"===typeof d||d===u.a.Fragment;if(!Ot.a.isValidElementType(d))throw new TypeError(`Component for name \\`${l}\\` not defined or is not renderable`);if(a.key=[l,p.start.line,p.start.column,t].join(\"-\"),\"a\"===l&&o.linkTarget&&(a.target=\"function\"===typeof o.linkTarget?o.linkTarget(String(a.href||\"\"),n.children,\"string\"===typeof a.title?a.title:null):o.linkTarget),\"a\"===l&&o.transformLinkUri&&(a.href=o.transformLinkUri(String(a.href||\"\"),n.children,\"string\"===typeof a.title?a.title:null)),h||\"code\"!==l||\"element\"!==r.type||\"pre\"===r.tagName||(a.inline=!0),h||\"h1\"!==l&&\"h2\"!==l&&\"h3\"!==l&&\"h4\"!==l&&\"h5\"!==l&&\"h6\"!==l||(a.level=Number.parseInt(l.charAt(1),10)),\"img\"===l&&o.transformImageUri&&(a.src=o.transformImageUri(String(a.src||\"\"),String(a.alt||\"\"),\"string\"===typeof a.title?a.title:null)),!h&&\"li\"===l&&\"element\"===r.type){const e=function(e){let n=-1;for(;++n<e.children.length;){const t=e.children[n];if(\"element\"===t.type&&\"input\"===t.tagName)return t}return null}(n);a.checked=e&&e.properties?Boolean(e.properties.checked):null,a.index=Wt(r,n),a.ordered=\"ol\"===r.tagName}var g;return h||\"ol\"!==l&&\"ul\"!==l||(a.ordered=\"ol\"===l,a.depth=e.listDepth),\"td\"!==l&&\"th\"!==l||(a.align&&(a.style||(a.style={}),a.style.textAlign=a.align,delete a.align),h||(a.isHeader=\"th\"===l)),h||\"tr\"!==l||\"element\"!==r.type||(a.isHeader=Boolean(\"thead\"===r.tagName)),o.sourcePos&&(a[\"data-sourcepos\"]=[(g=p).start.line,\":\",g.start.column,\"-\",g.end.line,\":\",g.end.column].map((e=>String(e))).join(\"\")),!h&&o.rawSourcePos&&(a.sourcePosition=n.position),!h&&o.includeElementIndex&&(a.index=Wt(r,n),a.siblingCount=Wt(r)),h||(a.node=n),f.length>0?u.a.createElement(d,a,f):u.a.createElement(d,a)}function Wt(e,n){let t=-1,r=0;for(;++t<e.children.length&&e.children[t]!==n;)\"element\"===e.children[t].type&&r++;return r}function Qt(e,n,t,r){const o=function(e,n){const t=it(n);let r=n,o=lt;if(t in e.normal)return e.property[e.normal[t]];if(t.length>4&&\"data\"===t.slice(0,4)&&Rt.test(n)){if(\"-\"===n.charAt(4)){const e=n.slice(5).replace(Bt,Mt);r=\"data\"+e.charAt(0).toUpperCase()+e.slice(1)}else{const e=n.slice(4);if(!Bt.test(e)){let t=e.replace(zt,Nt);\"-\"!==t.charAt(0)&&(t=\"-\"+t),n=\"data\"+t}}o=yt}return new o(r,n)}(r.schema,n);let i=t;null!==i&&void 0!==i&&i===i&&(Array.isArray(i)&&(i=o.commaSeparated?function(e,n){var t=n||{};return\"\"===e[e.length-1]&&(e=e.concat(\"\")),e.join((t.padRight?\" \":\"\")+\",\"+(!1===t.padLeft?\"\":\" \")).trim()}(i):i.join(\" \").trim()),\"style\"===o.property&&\"string\"===typeof i&&(i=function(e){const n={};try{Vt()(e,t)}catch{}return n;function t(e,t){const r=\"-ms-\"===e.slice(0,4)?`ms-${e.slice(4)}`:e;n[r.replace(/-([a-z])/g,Yt)]=t}}(i)),o.space&&o.property?e[Ht.call(Ut,o.property)?Ut[o.property]:o.property]=i:o.attribute&&(e[o.attribute]=i))}function Yt(e,n){return n.toUpperCase()}const Jt={}.hasOwnProperty,Kt={plugins:{to:\"plugins\",id:\"change-plugins-to-remarkplugins\"},renderers:{to:\"components\",id:\"change-renderers-to-components\"},astPlugins:{id:\"remove-buggy-html-in-markdown-parser\"},allowDangerousHtml:{id:\"remove-buggy-html-in-markdown-parser\"},escapeHtml:{id:\"remove-buggy-html-in-markdown-parser\"},source:{to:\"children\",id:\"change-source-to-children\"},allowNode:{to:\"allowElement\",id:\"replace-allownode-allowedtypes-and-disallowedtypes\"},allowedTypes:{to:\"allowedElements\",id:\"replace-allownode-allowedtypes-and-disallowedtypes\"},disallowedTypes:{to:\"disallowedElements\",id:\"replace-allownode-allowedtypes-and-disallowedtypes\"},includeNodeIndex:{to:\"includeElementIndex\",id:\"change-includenodeindex-to-includeelementindex\"}};function Zt(e){for(const i in Kt)if(Jt.call(Kt,i)&&Jt.call(e,i)){const e=Kt[i];console.warn(`[react-markdown] Warning: please ${e.to?`use \\`${e.to}\\` instead of`:\"remove\"} \\`${i}\\` (see <https://github.com/remarkjs/react-markdown/blob/main/changelog.md#${e.id}> for more info)`),delete Kt[i]}const n=F().use(Sn).use(e.remarkPlugins||[]).use(et,{...e.remarkRehypeOptions,allowDangerousHtml:!0}).use(e.rehypePlugins||[]).use(Ft,e),t=new w;\"string\"===typeof e.children?t.value=e.children:void 0!==e.children&&null!==e.children&&console.warn(`[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${e.children}\\`)`);const r=n.runSync(n.parse(t),t);if(\"root\"!==r.type)throw new TypeError(\"Expected a `root` node\");let o=u.a.createElement(u.a.Fragment,{},Gt({options:e,schema:Dt,listDepth:0},r));return e.className&&(o=u.a.createElement(\"div\",{className:e.className},o)),o}Zt.defaultProps={transformLinkUri:l},Zt.propTypes={children:tt.a.string,className:tt.a.string,allowElement:tt.a.func,allowedElements:tt.a.arrayOf(tt.a.string),disallowedElements:tt.a.arrayOf(tt.a.string),unwrapDisallowed:tt.a.bool,remarkPlugins:tt.a.arrayOf(tt.a.oneOfType([tt.a.object,tt.a.func,tt.a.arrayOf(tt.a.oneOfType([tt.a.bool,tt.a.string,tt.a.object,tt.a.func,tt.a.arrayOf(tt.a.any)]))])),rehypePlugins:tt.a.arrayOf(tt.a.oneOfType([tt.a.object,tt.a.func,tt.a.arrayOf(tt.a.oneOfType([tt.a.bool,tt.a.string,tt.a.object,tt.a.func,tt.a.arrayOf(tt.a.any)]))])),sourcePos:tt.a.bool,rawSourcePos:tt.a.bool,skipHtml:tt.a.bool,includeElementIndex:tt.a.bool,transformLinkUri:tt.a.oneOfType([tt.a.func,tt.a.bool]),linkTarget:tt.a.oneOfType([tt.a.func,tt.a.string]),transformImageUri:tt.a.func,components:tt.a.object}},Lc7W:function(e,n){var t=/\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g,r=/\\n/g,o=/^\\s*/,i=/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/,l=/^:\\s*/,a=/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/,u=/^[;\\s]*/,s=/^\\s+|\\s+$/g,c=\"\";function f(e){return e?e.replace(s,c):c}e.exports=function(e,n){if(\"string\"!==typeof e)throw new TypeError(\"First argument must be a string\");if(!e)return[];n=n||{};var s=1,p=1;function d(e){var n=e.match(r);n&&(s+=n.length);var t=e.lastIndexOf(\"\\n\");p=~t?e.length-t:p+e.length}function h(){var e={line:s,column:p};return function(n){return n.position=new g(e),k(),n}}function g(e){this.start=e,this.end={line:s,column:p},this.source=n.source}g.prototype.content=e;var m=[];function y(t){var r=new Error(n.source+\":\"+s+\":\"+p+\": \"+t);if(r.reason=t,r.filename=n.source,r.line=s,r.column=p,r.source=e,!n.silent)throw r;m.push(r)}function b(n){var t=n.exec(e);if(t){var r=t[0];return d(r),e=e.slice(r.length),t}}function k(){b(o)}function x(e){var n;for(e=e||[];n=v();)!1!==n&&e.push(n);return e}function v(){var n=h();if(\"/\"==e.charAt(0)&&\"*\"==e.charAt(1)){for(var t=2;c!=e.charAt(t)&&(\"*\"!=e.charAt(t)||\"/\"!=e.charAt(t+1));)++t;if(t+=2,c===e.charAt(t-1))return y(\"End of comment missing\");var r=e.slice(2,t-2);return p+=2,d(r),e=e.slice(t),p+=2,n({type:\"comment\",comment:r})}}function w(){var e=h(),n=b(i);if(n){if(v(),!b(l))return y(\"property missing ':'\");var r=b(a),o=e({type:\"declaration\",property:f(n[0].replace(t,c)),value:r?f(r[0].replace(t,c)):c});return b(u),o}}return k(),function(){var e,n=[];for(x(n);e=w();)!1!==e&&(n.push(e),x(n));return n}()}},\"YT/e\":function(e,n,t){\"use strict\";var r,o=Symbol.for(\"react.element\"),i=Symbol.for(\"react.portal\"),l=Symbol.for(\"react.fragment\"),a=Symbol.for(\"react.strict_mode\"),u=Symbol.for(\"react.profiler\"),s=Symbol.for(\"react.provider\"),c=Symbol.for(\"react.context\"),f=Symbol.for(\"react.server_context\"),p=Symbol.for(\"react.forward_ref\"),d=Symbol.for(\"react.suspense\"),h=Symbol.for(\"react.suspense_list\"),g=Symbol.for(\"react.memo\"),m=Symbol.for(\"react.lazy\"),y=Symbol.for(\"react.offscreen\");function b(e){if(\"object\"===typeof e&&null!==e){var n=e.$$typeof;switch(n){case o:switch(e=e.type){case l:case u:case a:case d:case h:return e;default:switch(e=e&&e.$$typeof){case f:case c:case p:case m:case g:case s:return e;default:return n}}case i:return n}}}r=Symbol.for(\"react.module.reference\"),n.ContextConsumer=c,n.ContextProvider=s,n.Element=o,n.ForwardRef=p,n.Fragment=l,n.Lazy=m,n.Memo=g,n.Portal=i,n.Profiler=u,n.StrictMode=a,n.Suspense=d,n.SuspenseList=h,n.isAsyncMode=function(){return!1},n.isConcurrentMode=function(){return!1},n.isContextConsumer=function(e){return b(e)===c},n.isContextProvider=function(e){return b(e)===s},n.isElement=function(e){return\"object\"===typeof e&&null!==e&&e.$$typeof===o},n.isForwardRef=function(e){return b(e)===p},n.isFragment=function(e){return b(e)===l},n.isLazy=function(e){return b(e)===m},n.isMemo=function(e){return b(e)===g},n.isPortal=function(e){return b(e)===i},n.isProfiler=function(e){return b(e)===u},n.isStrictMode=function(e){return b(e)===a},n.isSuspense=function(e){return b(e)===d},n.isSuspenseList=function(e){return b(e)===h},n.isValidElementType=function(e){return\"string\"===typeof e||\"function\"===typeof e||e===l||e===u||e===a||e===d||e===h||e===y||\"object\"===typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===g||e.$$typeof===s||e.$$typeof===c||e.$$typeof===p||e.$$typeof===r||void 0!==e.getModuleId)},n.typeOf=b},rVUt:function(e,n,t){\"use strict\";e.exports=t(\"YT/e\")},xGQ6:function(e,n,t){\"use strict\";var r={};function o(e,n,t){var i,l,a,u,s,c=\"\";for(\"string\"!==typeof n&&(t=n,n=o.defaultChars),\"undefined\"===typeof t&&(t=!0),s=function(e){var n,t,o=r[e];if(o)return o;for(o=r[e]=[],n=0;n<128;n++)t=String.fromCharCode(n),/^[0-9a-z]$/i.test(t)?o.push(t):o.push(\"%\"+(\"0\"+n.toString(16).toUpperCase()).slice(-2));for(n=0;n<e.length;n++)o[e.charCodeAt(n)]=e[n];return o}(n),i=0,l=e.length;i<l;i++)if(a=e.charCodeAt(i),t&&37===a&&i+2<l&&/^[0-9a-f]{2}$/i.test(e.slice(i+1,i+3)))c+=e.slice(i,i+3),i+=2;else if(a<128)c+=s[a];else if(a>=55296&&a<=57343){if(a>=55296&&a<=56319&&i+1<l&&(u=e.charCodeAt(i+1))>=56320&&u<=57343){c+=encodeURIComponent(e[i]+e[i+1]),i++;continue}c+=\"%EF%BF%BD\"}else c+=encodeURIComponent(e[i]);return c}o.defaultChars=\";/?:@&=+$,-_.!~*'()#\",o.componentChars=\"-_.!~*'()\",e.exports=o}}]);","map":{"version":3,"sources":["static/chunks/12.34aefc1e67526bac4b8c.js"],"names":["window","push","6dBs","module","exports","__webpack_require__","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","BEtg","isBuffer","CC3I","parse","style","iterator","declaration","output","property","declarations","hasIterator","len","FEXr","__webpack_exports__","r","d","uriTransformer","ReactMarkdown","constructs_namespaceObject","constructs_document","contentInitial","flowInitial","constructs_flow","constructs_string","constructs_text","insideSpan","constructs_attentionMarkers","disable","types_namespaceObject","types_boolean","booleanish","overloadedBoolean","number","spaceSeparated","commaSeparated","commaOrSpaceSeparated","protocols","uri","url","trim","first","charAt","colon","indexOf","index","protocol","slice","toLowerCase","react","react_default","n","is_buffer","is_buffer_default","stringifyPosition","unist_util_stringify_position_position","position","unist_util_stringify_position_point","point","unist_util_stringify_position_index","line","column","pos","start","end","vfile_message_VFileMessage","Error","[object Object]","reason","place","origin","parts","super","undefined","this","message","stack","fatal","source","ruleId","actual","expected","file","note","minpath_browser_path","basename","path","ext","TypeError","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","segments","joined","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","normalize","sep","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","error","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","lib_VFile","data","messages","history","stored","map","prop","includes","assertNonEmpty","lib_assertPath","assertPart","stem","encoding","part","bail","extend_default","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","fn","middleware","called","wrapped","parameters","fnExpectsCallback","done","apply","exception","Promise","then","wrap","use","middelware","unified","base","transformers","attachers","frozen","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","type","asyncName","Boolean","looksLikeAVFile","one","includeImageAlt","alt","mdast_util_to_string_all","children","splice","list","remove","items","chunkStart","from","unshift","micromark_util_combine_extensions_hasOwnProperty","syntaxExtension","all","extension","hook","left","right","micromark_util_combine_extensions_constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content_content","tokenize","contentStart","attempt","parser","constructs","lineStart","previous","token","contentType","document_document","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","document","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","lib_content_content","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","afterConstruct","resolver","resolveAll","createResolver","text_string","initializeFactory","text_text","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","state","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematic_break_thematicBreak","marker","sequence","list_list","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","block_quote_blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toUpperCase","definition_definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","content","setextUnderline","paragraph","closingSequence","closingSequenceEnd","definition","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterEntities","AElig","AMP","Aacute","Abreve","Acirc","Acy","Afr","Agrave","Alpha","Amacr","And","Aogon","Aopf","ApplyFunction","Aring","Ascr","Assign","Atilde","Auml","Backslash","Barv","Barwed","Bcy","Because","Bernoullis","Beta","Bfr","Bopf","Breve","Bscr","Bumpeq","CHcy","COPY","Cacute","Cap","CapitalDifferentialD","Cayleys","Ccaron","Ccedil","Ccirc","Cconint","Cdot","Cedilla","CenterDot","Cfr","Chi","CircleDot","CircleMinus","CirclePlus","CircleTimes","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","Colon","Colone","Congruent","Conint","ContourIntegral","Copf","Coproduct","CounterClockwiseContourIntegral","Cross","Cscr","Cup","CupCap","DD","DDotrahd","DJcy","DScy","DZcy","Dagger","Darr","Dashv","Dcaron","Dcy","Del","Delta","Dfr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","Diamond","DifferentialD","Dopf","Dot","DotDot","DotEqual","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","DownArrowBar","DownArrowUpArrow","DownBreve","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","Downarrow","Dscr","Dstrok","ENG","ETH","Eacute","Ecaron","Ecirc","Ecy","Edot","Efr","Egrave","Element","Emacr","EmptySmallSquare","EmptyVerySmallSquare","Eogon","Eopf","Epsilon","Equal","EqualTilde","Equilibrium","Escr","Esim","Eta","Euml","Exists","ExponentialE","Fcy","Ffr","FilledSmallSquare","FilledVerySmallSquare","Fopf","ForAll","Fouriertrf","Fscr","GJcy","GT","Gamma","Gammad","Gbreve","Gcedil","Gcirc","Gcy","Gdot","Gfr","Gg","Gopf","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","Gt","HARDcy","Hacek","Hat","Hcirc","Hfr","HilbertSpace","Hopf","HorizontalLine","Hscr","Hstrok","HumpDownHump","HumpEqual","IEcy","IJlig","IOcy","Iacute","Icirc","Icy","Idot","Ifr","Igrave","Im","Imacr","ImaginaryI","Implies","Int","Integral","Intersection","InvisibleComma","InvisibleTimes","Iogon","Iopf","Iota","Iscr","Itilde","Iukcy","Iuml","Jcirc","Jcy","Jfr","Jopf","Jscr","Jsercy","Jukcy","KHcy","KJcy","Kappa","Kcedil","Kcy","Kfr","Kopf","Kscr","LJcy","LT","Lacute","Lambda","Lang","Laplacetrf","Larr","Lcaron","Lcedil","Lcy","LeftAngleBracket","LeftArrow","LeftArrowBar","LeftArrowRightArrow","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","LeftRightArrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","Leftarrow","Leftrightarrow","LessEqualGreater","LessFullEqual","LessGreater","LessLess","LessSlantEqual","LessTilde","Lfr","Ll","Lleftarrow","Lmidot","LongLeftArrow","LongLeftRightArrow","LongRightArrow","Longleftarrow","Longleftrightarrow","Longrightarrow","Lopf","LowerLeftArrow","LowerRightArrow","Lscr","Lsh","Lstrok","Lt","Map","Mcy","MediumSpace","Mellintrf","Mfr","MinusPlus","Mopf","Mscr","Mu","NJcy","Nacute","Ncaron","Ncedil","Ncy","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","NestedGreaterGreater","NestedLessLess","NewLine","Nfr","NoBreak","NonBreakingSpace","Nopf","Not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","Nscr","Ntilde","Nu","OElig","Oacute","Ocirc","Ocy","Odblac","Ofr","Ograve","Omacr","Omega","Omicron","Oopf","OpenCurlyDoubleQuote","OpenCurlyQuote","Or","Oscr","Oslash","Otilde","Otimes","Ouml","OverBar","OverBrace","OverBracket","OverParenthesis","PartialD","Pcy","Pfr","Phi","Pi","PlusMinus","Poincareplane","Popf","Pr","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","Prime","Product","Proportion","Proportional","Pscr","Psi","QUOT","Qfr","Qopf","Qscr","RBarr","REG","Racute","Rang","Rarr","Rarrtl","Rcaron","Rcedil","Rcy","Re","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","Rfr","Rho","RightAngleBracket","RightArrow","RightArrowBar","RightArrowLeftArrow","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","RightTee","RightTeeArrow","RightTeeVector","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","Rightarrow","Ropf","RoundImplies","Rrightarrow","Rscr","Rsh","RuleDelayed","SHCHcy","SHcy","SOFTcy","Sacute","Sc","Scaron","Scedil","Scirc","Scy","Sfr","ShortDownArrow","ShortLeftArrow","ShortRightArrow","ShortUpArrow","Sigma","SmallCircle","Sopf","Sqrt","Square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","Sscr","Star","Sub","Subset","SubsetEqual","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","SuchThat","Sum","Sup","Superset","SupersetEqual","Supset","THORN","TRADE","TSHcy","TScy","Tab","Tau","Tcaron","Tcedil","Tcy","Tfr","Therefore","Theta","ThickSpace","ThinSpace","Tilde","TildeEqual","TildeFullEqual","TildeTilde","Topf","TripleDot","Tscr","Tstrok","Uacute","Uarr","Uarrocir","Ubrcy","Ubreve","Ucirc","Ucy","Udblac","Ufr","Ugrave","Umacr","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","Uopf","UpArrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","UpEquilibrium","UpTee","UpTeeArrow","Uparrow","Updownarrow","UpperLeftArrow","UpperRightArrow","Upsi","Upsilon","Uring","Uscr","Utilde","Uuml","VDash","Vbar","Vcy","Vdash","Vdashl","Vee","Verbar","Vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","Vopf","Vscr","Vvdash","Wcirc","Wedge","Wfr","Wopf","Wscr","Xfr","Xi","Xopf","Xscr","YAcy","YIcy","YUcy","Yacute","Ycirc","Ycy","Yfr","Yopf","Yscr","Yuml","ZHcy","Zacute","Zcaron","Zcy","Zdot","ZeroWidthSpace","Zeta","Zfr","Zopf","Zscr","aacute","abreve","ac","acE","acd","acirc","acute","acy","aelig","af","afr","agrave","alefsym","aleph","alpha","amacr","amalg","amp","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","aogon","aopf","ap","apE","apacir","ape","apid","apos","approx","approxeq","aring","ascr","ast","asymp","asympeq","atilde","auml","awconint","awint","bNot","backcong","backepsilon","backprime","backsim","backsimeq","barvee","barwed","barwedge","bbrk","bbrktbrk","bcong","bcy","bdquo","becaus","because","bemptyv","bepsi","bernou","beta","beth","between","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bnot","bopf","bot","bottom","bowtie","boxDL","boxDR","boxDl","boxDr","boxH","boxHD","boxHU","boxHd","boxHu","boxUL","boxUR","boxUl","boxUr","boxV","boxVH","boxVL","boxVR","boxVh","boxVl","boxVr","boxbox","boxdL","boxdR","boxdl","boxdr","boxh","boxhD","boxhU","boxhd","boxhu","boxminus","boxplus","boxtimes","boxuL","boxuR","boxul","boxur","boxv","boxvH","boxvL","boxvR","boxvh","boxvl","boxvr","bprime","breve","brvbar","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","bumpeq","cacute","cap","capand","capbrcup","capcap","capcup","capdot","caps","caret","caron","ccaps","ccaron","ccedil","ccirc","ccups","ccupssm","cdot","cedil","cemptyv","cent","centerdot","cfr","chcy","checkmark","chi","cir","cirE","circ","circeq","circlearrowleft","circlearrowright","circledR","circledS","circledast","circledcirc","circleddash","cire","cirfnint","cirmid","cirscir","clubs","clubsuit","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","conint","copf","coprod","copysr","crarr","cross","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","cup","cupbrcap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","dArr","dHar","dagger","daleth","darr","dash","dashv","dbkarow","dblac","dcaron","dcy","dd","ddagger","ddarr","ddotseq","deg","delta","demptyv","dfisht","dfr","dharl","dharr","diam","diamond","diamondsuit","diams","die","digamma","disin","div","divide","divideontimes","divonx","djcy","dlcorn","dlcrop","dollar","dopf","dot","doteq","doteqdot","dotminus","dotplus","dotsquare","doublebarwedge","downarrow","downdownarrows","downharpoonleft","downharpoonright","drbkarow","drcorn","drcrop","dscr","dscy","dsol","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","dzcy","dzigrarr","eDDot","eDot","eacute","easter","ecaron","ecir","ecirc","ecolon","ecy","edot","ee","efDot","efr","eg","egrave","egs","egsdot","el","elinters","ell","els","elsdot","emacr","empty","emptyset","emptyv","emsp13","emsp14","emsp","eng","ensp","eogon","eopf","epar","eparsl","eplus","epsi","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","equals","equest","equiv","equivDD","eqvparsl","erDot","erarr","escr","esdot","esim","eta","eth","euml","euro","excl","exist","expectation","exponentiale","fallingdotseq","fcy","female","ffilig","fflig","ffllig","ffr","filig","fjlig","flat","fllig","fltns","fnof","fopf","forall","fork","forkv","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","fscr","gE","gEl","gacute","gamma","gammad","gap","gbreve","gcirc","gcy","gdot","ge","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","gfr","gg","ggg","gimel","gjcy","gl","glE","gla","glj","gnE","gnap","gnapprox","gne","gneq","gneqq","gnsim","gopf","grave","gscr","gsim","gsime","gsiml","gt","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","hArr","hairsp","half","hamilt","hardcy","harr","harrcir","harrw","hbar","hcirc","hearts","heartsuit","hellip","hercon","hfr","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","hopf","horbar","hscr","hslash","hstrok","hybull","hyphen","iacute","ic","icirc","icy","iecy","iexcl","iff","ifr","igrave","ii","iiiint","iiint","iinfin","iiota","ijlig","imacr","image","imagline","imagpart","imath","imof","imped","in","incare","infin","infintie","inodot","int","intcal","integers","intercal","intlarhk","intprod","iocy","iogon","iopf","iota","iprod","iquest","iscr","isin","isinE","isindot","isins","isinsv","isinv","it","itilde","iukcy","iuml","jcirc","jcy","jfr","jmath","jopf","jscr","jsercy","jukcy","kappa","kappav","kcedil","kcy","kfr","kgreen","khcy","kjcy","kopf","kscr","lAarr","lArr","lAtail","lBarr","lE","lEg","lHar","lacute","laemptyv","lagran","lambda","lang","langd","langle","lap","laquo","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","latail","late","lates","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","lcaron","lcedil","lceil","lcub","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","le","leftarrow","leftarrowtail","leftharpoondown","leftharpoonup","leftleftarrows","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","leftthreetimes","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","lessgtr","lesssim","lfisht","lfloor","lfr","lg","lgE","lhard","lharu","lharul","lhblk","ljcy","ll","llarr","llcorner","llhard","lltri","lmidot","lmoust","lmoustache","lnE","lnap","lnapprox","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","longleftarrow","longleftrightarrow","longmapsto","longrightarrow","looparrowleft","looparrowright","lopar","lopf","loplus","lotimes","lowast","lowbar","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","lscr","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","lstrok","lt","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltrPar","ltri","ltrie","ltrif","lurdshar","luruhar","lvertneqq","lvnE","mDDot","macr","male","malt","maltese","mapsto","mapstodown","mapstoleft","mapstoup","mcomma","mcy","mdash","measuredangle","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","mlcp","mldr","mnplus","models","mopf","mp","mscr","mstpos","mu","multimap","mumap","nGg","nGt","nGtv","nLeftarrow","nLeftrightarrow","nLl","nLt","nLtv","nRightarrow","nVDash","nVdash","nabla","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","ncaron","ncedil","ncong","ncongdot","ncup","ncy","ndash","ne","neArr","nearhk","nearr","nearrow","nedot","nequiv","nesear","nesim","nexist","nexists","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","ngsim","ngt","ngtr","nhArr","nharr","nhpar","ni","nis","nisd","niv","njcy","nlArr","nlE","nlarr","nldr","nle","nleftarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nlsim","nlt","nltri","nltrie","nmid","nopf","not","notin","notinE","notindot","notinva","notinvb","notinvc","notni","notniva","notnivb","notnivc","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","nu","num","numero","numsp","nvDash","nvHarr","nvap","nvdash","nvge","nvgt","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwArr","nwarhk","nwarr","nwarrow","nwnear","oS","oacute","oast","ocir","ocirc","ocy","odash","odblac","odiv","odot","odsold","oelig","ofcir","ofr","ogon","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","omacr","omega","omicron","omid","ominus","oopf","opar","operp","oplus","or","orarr","ord","orderof","ordf","ordm","origof","oror","orslope","orv","oscr","oslash","osol","otilde","otimes","otimesas","ouml","ovbar","par","para","parallel","parsim","parsl","pcy","percnt","period","permil","perp","pertenk","pfr","phi","phiv","phmmat","phone","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","plusmn","plussim","plustwo","pm","pointint","popf","pound","pr","prE","prap","prcue","pre","prec","precapprox","preccurlyeq","preceq","precnapprox","precneqq","precnsim","precsim","prime","primes","prnE","prnap","prnsim","prod","profalar","profline","profsurf","propto","prsim","prurel","pscr","psi","puncsp","qfr","qint","qopf","qprime","qscr","quaternions","quatint","quest","questeq","quot","rAarr","rArr","rAtail","rBarr","rHar","race","racute","radic","raemptyv","rang","rangd","range","rangle","raquo","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","rarrtl","rarrw","ratail","ratio","rationals","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","rcaron","rcedil","rceil","rcub","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","real","realine","realpart","reals","rect","reg","rfisht","rfloor","rfr","rhard","rharu","rharul","rho","rhov","rightarrow","rightarrowtail","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","rightthreetimes","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","ropf","roplus","rotimes","rpar","rpargt","rppolint","rrarr","rsaquo","rscr","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","ruluhar","rx","sacute","sbquo","sc","scE","scap","scaron","sccue","sce","scedil","scirc","scnE","scnap","scnsim","scpolint","scsim","scy","sdot","sdotb","sdote","seArr","searhk","searr","searrow","sect","semi","seswar","setminus","setmn","sext","sfr","sfrown","sharp","shchcy","shcy","shortmid","shortparallel","shy","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","softcy","sol","solb","solbar","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","square","squarf","squf","srarr","sscr","ssetmn","ssmile","sstarf","star","starf","straightepsilon","straightphi","strns","sub","subE","subdot","sube","subedot","submult","subnE","subne","subplus","subrarr","subset","subseteq","subseteqq","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","succeq","succnapprox","succneqq","succnsim","succsim","sum","sung","sup1","sup2","sup3","sup","supE","supdot","supdsub","supe","supedot","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swArr","swarhk","swarr","swarrow","swnwar","szlig","tau","tbrk","tcaron","tcedil","tcy","tdot","telrec","tfr","there4","therefore","theta","thetasym","thetav","thickapprox","thicksim","thinsp","thkap","thksim","thorn","tilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","topf","topfork","tosa","tprime","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","triplus","trisb","tritime","trpezium","tscr","tscy","tshcy","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","uArr","uHar","uacute","uarr","ubrcy","ubreve","ucirc","ucy","udarr","udblac","udhar","ufisht","ufr","ugrave","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","umacr","uml","uogon","uopf","uparrow","updownarrow","upharpoonleft","upharpoonright","uplus","upsi","upsih","upsilon","upuparrows","urcorn","urcorner","urcrop","uring","urtri","uscr","utdot","utilde","utri","utrif","uuarr","uuml","uwangle","vArr","vBar","vBarv","vDash","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","vcy","vdash","vee","veebar","veeeq","vellip","verbar","vert","vfr","vltri","vnsub","vnsup","vopf","vprop","vrtri","vscr","vsubnE","vsubne","vsupnE","vsupne","vzigzag","wcirc","wedbar","wedge","wedgeq","weierp","wfr","wopf","wp","wr","wreath","wscr","xcap","xcirc","xcup","xdtri","xfr","xhArr","xharr","xi","xlArr","xlarr","xmap","xnis","xodot","xopf","xoplus","xotime","xrArr","xrarr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","yacute","yacy","ycirc","ycy","yen","yfr","yicy","yopf","yscr","yucy","yuml","zacute","zcaron","zcy","zdot","zeetrf","zeta","zfr","zhcy","zigrarr","zopf","zscr","zwj","zwnj","decode_named_character_reference_own","decodeNamedCharacterReference","characterReference","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","destinationAfter","afterLabel","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","fenceOpenInside","headingBreak","60","61","95","96","126","38","92","33","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","93","tailExitIndex","headEnterIndex","parse_parse","extensions","combineExtensions","concat","string","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decode","$0","$1","$2","head","hex","lib_own","fromMarkdown","config","configure","transforms","canContainEols","autolink","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreakEscape","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlText","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","thematicBreak","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","mdast_util_to_string_toString","depth","parent","referenceType","ancestor","decodeString","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","remark_parse","u","props","convert","unist_util_is_ok","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","unist_util_visit_visit","pointStart","unist_util_position_point","pointEnd","mdast_util_definitions_own","clean","traverse_own","unknown","h","augment","traverse_all","traverse_one","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","\"","&","<",">","sanitizeUri","encode","skip","encodeURIComponent","normalizeUri","questionMark","numberSign","slash","wrap_wrap","loose","footnoteReference","id","safeId","footnoteOrder","counter","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","mdurl_encode","encode_default","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","mdast_util_to_hast_lib_own","lib_factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","cache","mdast_util_definitions_definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","lib","bridge","mutate","prop_types","prop_types_default","Schema","normal","space","merge","definitions","normalize_normalize","Info","attribute","boolean","mustUseProperty","powers","increment","defined_info_DefinedInfo","mask","mark","create_own","create_create","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","lib_html_html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","property_information_html","property_information_svg","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","react_is","react_is_default","whitespace","thing","valid","kebab","camelcase","hastToReact","style_to_object","style_to_object_default","ast_to_react_own","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","a","Fragment","isValidElementType","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","Type","rest","dashes","find","padRight","padLeft","comma_separated_tokens_stringify","v","styleReplacer","parseStyle","react_markdown_own","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","deprecation","console","warn","remarkPlugins","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","propTypes","func","arrayOf","bool","oneOfType","Lc7W","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","str","lineno","updatePosition","Position","errorsList","msg","err","filename","silent","re","m","comments","c","val","ret","decl","decls","YT/e","b","for","e","f","g","l","p","q","t","$$typeof","ContextConsumer","ContextProvider","ForwardRef","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","getModuleId","rVUt","xGQ6","encodeCache","exclude","keepEscaped","nextCode","defaultChars","ch","getEncodeCache","componentChars"],"mappings":"CAACA,OAAyB,iBAAIA,OAAyB,kBAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAErEC,OACA,SAAUC,EAAQC,EAASC,GAEjC,aAGA,IAAIC,EAASC,OAAOC,UAAUC,eAC1BC,EAAQH,OAAOC,UAAUG,SACzBC,EAAiBL,OAAOK,eACxBC,EAAON,OAAOO,yBAEdC,EAAU,SAAiBC,GAC9B,MAA6B,oBAAlBC,MAAMF,QACTE,MAAMF,QAAQC,GAGK,mBAApBN,EAAMQ,KAAKF,IAGfG,EAAgB,SAAuBC,GAC1C,IAAKA,GAA2B,oBAApBV,EAAMQ,KAAKE,GACtB,OAAO,EAGR,IASIC,EATAC,EAAoBhB,EAAOY,KAAKE,EAAK,eACrCG,EAAmBH,EAAII,aAAeJ,EAAII,YAAYhB,WAAaF,EAAOY,KAAKE,EAAII,YAAYhB,UAAW,iBAE9G,GAAIY,EAAII,cAAgBF,IAAsBC,EAC7C,OAAO,EAMR,IAAKF,KAAOD,GAEZ,MAAsB,qBAARC,GAAuBf,EAAOY,KAAKE,EAAKC,IAInDI,EAAc,SAAqBC,EAAQC,GAC1Cf,GAAmC,cAAjBe,EAAQC,KAC7BhB,EAAec,EAAQC,EAAQC,KAAM,CACpCC,YAAY,EACZC,cAAc,EACdC,MAAOJ,EAAQK,SACfC,UAAU,IAGXP,EAAOC,EAAQC,MAAQD,EAAQK,UAK7BE,EAAc,SAAqBd,EAAKQ,GAC3C,GAAa,cAATA,EAAsB,CACzB,IAAKtB,EAAOY,KAAKE,EAAKQ,GACrB,OACM,GAAIf,EAGV,OAAOA,EAAKO,EAAKQ,GAAMG,MAIzB,OAAOX,EAAIQ,IAGZzB,EAAOC,QAAU,SAAS+B,IACzB,IAAIR,EAASC,EAAMQ,EAAKC,EAAMC,EAAaC,EACvCb,EAASc,UAAU,GACnBC,EAAI,EACJC,EAASF,UAAUE,OACnBC,GAAO,EAaX,IAVsB,mBAAXjB,IACViB,EAAOjB,EACPA,EAASc,UAAU,IAAM,GAEzBC,EAAI,IAES,MAAVf,GAAqC,kBAAXA,GAAyC,oBAAXA,KAC3DA,EAAS,IAGHe,EAAIC,IAAUD,EAGpB,GAAe,OAFfd,EAAUa,UAAUC,IAInB,IAAKb,KAAQD,EACZS,EAAMF,EAAYR,EAAQE,GAItBF,KAHJW,EAAOH,EAAYP,EAASC,MAKvBe,GAAQN,IAASlB,EAAckB,KAAUC,EAAcvB,EAAQsB,MAC9DC,GACHA,GAAc,EACdC,EAAQH,GAAOrB,EAAQqB,GAAOA,EAAM,IAEpCG,EAAQH,GAAOjB,EAAciB,GAAOA,EAAM,GAI3CX,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUG,EAAOQ,EAAMJ,EAAOF,MAGtC,qBAATA,GACjBZ,EAAYC,EAAQ,CAAEE,KAAMA,EAAMI,SAAUK,KAQjD,OAAOX,IAMFkB,KACA,SAAUzC,EAAQC,GASxBD,EAAOC,QAAU,SAAmBgB,GAClC,OAAc,MAAPA,GAAkC,MAAnBA,EAAII,aACY,oBAA7BJ,EAAII,YAAYqB,UAA2BzB,EAAII,YAAYqB,SAASzB,KAMzE0B,KACA,SAAU3C,EAAQC,EAASC,GAEjC,IAAI0C,EAAQ1C,EAAoB,QAyChCF,EAAOC,QA5BP,SAAuB4C,EAAOC,GAC5B,IAKIC,EALAC,EAAS,KACb,IAAKH,GAA0B,kBAAVA,EACnB,OAAOG,EAST,IALA,IAEIC,EACArB,EAHAsB,EAAeN,EAAMC,GACrBM,EAAkC,oBAAbL,EAIhBR,EAAI,EAAGc,EAAMF,EAAaX,OAAQD,EAAIc,EAAKd,IAElDW,GADAF,EAAcG,EAAaZ,IACJW,SACvBrB,EAAQmB,EAAYnB,MAEhBuB,EACFL,EAASG,EAAUrB,EAAOmB,GACjBnB,IACToB,IAAWA,EAAS,IACpBA,EAAOC,GAAYrB,GAIvB,OAAOoB,IAQHK,KACA,SAAUrD,EAAQsD,EAAqBpD,GAE7C,aAEAA,EAAoBqD,EAAED,GAGtBpD,EAAoBsD,EAAEF,EAAqB,kBAAkB,WAAa,OAAsBG,KAChGvD,EAAoBsD,EAAEF,EAAqB,WAAW,WAAa,OAAsBI,MAGzF,IAAIC,EAA6B,GACjCzD,EAAoBqD,EAAEI,GACtBzD,EAAoBsD,EAAEG,EAA4B,YAAY,WAAa,OAAOC,MAClF1D,EAAoBsD,EAAEG,EAA4B,kBAAkB,WAAa,OAAOE,MACxF3D,EAAoBsD,EAAEG,EAA4B,eAAe,WAAa,OAAOG,MACrF5D,EAAoBsD,EAAEG,EAA4B,QAAQ,WAAa,OAAOI,MAC9E7D,EAAoBsD,EAAEG,EAA4B,UAAU,WAAa,OAAOK,MAChF9D,EAAoBsD,EAAEG,EAA4B,QAAQ,WAAa,OAAOM,MAC9E/D,EAAoBsD,EAAEG,EAA4B,cAAc,WAAa,OAAOO,MACpFhE,EAAoBsD,EAAEG,EAA4B,oBAAoB,WAAa,OAAOQ,MAC1FjE,EAAoBsD,EAAEG,EAA4B,WAAW,WAAa,OAAOS,MAGjF,IAAIC,EAAwB,GAC5BnE,EAAoBqD,EAAEc,GACtBnE,EAAoBsD,EAAEa,EAAuB,WAAW,WAAa,OAAOC,MAC5EpE,EAAoBsD,EAAEa,EAAuB,cAAc,WAAa,OAAOE,MAC/ErE,EAAoBsD,EAAEa,EAAuB,qBAAqB,WAAa,OAAOG,MACtFtE,EAAoBsD,EAAEa,EAAuB,UAAU,WAAa,OAAOI,MAC3EvE,EAAoBsD,EAAEa,EAAuB,kBAAkB,WAAa,OAAOK,MACnFxE,EAAoBsD,EAAEa,EAAuB,kBAAkB,WAAa,OAAOM,MACnFzE,EAAoBsD,EAAEa,EAAuB,yBAAyB,WAAa,OAAOO,MAG1F,MAAMC,EAAY,CAAC,OAAQ,QAAS,SAAU,OAM9C,SAASpB,EAAeqB,GACtB,MAAMC,GAAOD,GAAO,IAAIE,OAClBC,EAAQF,EAAIG,OAAO,GAEzB,GAAc,MAAVD,GAA2B,MAAVA,EACnB,OAAOF,EAGT,MAAMI,EAAQJ,EAAIK,QAAQ,KAC1B,IAAe,IAAXD,EACF,OAAOJ,EAGT,IAAIM,GAAS,EAEb,OAASA,EAAQR,EAAUtC,QAAQ,CACjC,MAAM+C,EAAWT,EAAUQ,GAE3B,GACEF,IAAUG,EAAS/C,QACnBwC,EAAIQ,MAAM,EAAGD,EAAS/C,QAAQiD,gBAAkBF,EAEhD,OAAOP,EAKX,OADAM,EAAQN,EAAIK,QAAQ,MACL,IAAXC,GAAgBF,EAAQE,EACnBN,GAGTM,EAAQN,EAAIK,QAAQ,MACL,IAAXC,GAAgBF,EAAQE,EACnBN,EAIF,sBAIT,IAAIU,EAAQvF,EAAoB,QAC5BwF,EAA6BxF,EAAoByF,EAAEF,GAGnDG,EAAY1F,EAAoB,QAChC2F,EAAiC3F,EAAoByF,EAAEC,GAiB3D,SAASE,EAAkBlE,GAEzB,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BmE,EAAuCnE,EAAMoE,UAIlD,UAAWpE,GAAS,QAASA,EACxBmE,EAAuCnE,GAI5C,SAAUA,GAAS,WAAYA,EAC1BqE,EAAoCrE,GAItC,GAnBE,GA0BX,SAASqE,EAAoCC,GAC3C,OAAOC,EAAoCD,GAASA,EAAME,MAAQ,IAAMD,EAAoCD,GAASA,EAAMG,QAO7H,SAASN,EAAuCO,GAC9C,OAAOL,EAAoCK,GAAOA,EAAIC,OAAS,IAAMN,EAAoCK,GAAOA,EAAIE,KAOtH,SAASL,EAAoCvE,GAC3C,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,EAatD,MAAM6E,UAAmCC,MASvCC,YAAYC,EAAQC,EAAOC,GAEzB,MAAMC,EAAQ,CAAC,KAAM,MAErB,IAAIf,EAAW,CAEbO,MAAO,CAACH,KAAM,KAAMC,OAAQ,MAE5BG,IAAK,CAACJ,KAAM,KAAMC,OAAQ,OAU5B,GAPAW,QAEqB,kBAAVH,IACTC,EAASD,EACTA,OAAQI,GAGY,kBAAXH,EAAqB,CAC9B,MAAMzB,EAAQyB,EAAO1B,QAAQ,MAEd,IAAXC,EACF0B,EAAM,GAAKD,GAEXC,EAAM,GAAKD,EAAOvB,MAAM,EAAGF,GAC3B0B,EAAM,GAAKD,EAAOvB,MAAMF,EAAQ,IAIhCwB,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAMb,WACRA,EAAWa,EAAMb,UAIZ,UAAWa,GAAS,QAASA,EACpCb,EAAWa,GAGJ,SAAUA,GAAS,WAAYA,KACtCb,EAASO,MAAQM,IAKrBK,KAAKzF,KAAOqE,EAAkBe,IAAU,MACxCK,KAAKC,QAA4B,kBAAXP,EAAsBA,EAAOO,QAAUP,EAC7DM,KAAKE,MAA0B,kBAAXR,EAAsBA,EAAOQ,MAAQ,GAMzDF,KAAKN,OAASM,KAAKC,QAMnBD,KAAKG,MAKLH,KAAKd,KAAOJ,EAASO,MAAMH,KAK3Bc,KAAKb,OAASL,EAASO,MAAMF,OAK7Ba,KAAKI,OAASP,EAAM,GAKpBG,KAAKK,OAASR,EAAM,GAMpBG,KAAKlB,SAAWA,EAYhBkB,KAAKM,OAMLN,KAAKO,SAKLP,KAAKQ,KAKLR,KAAKnC,IAKLmC,KAAKS,MAKTlB,EAA2BpG,UAAUqH,KAAO,GAC5CjB,EAA2BpG,UAAUoB,KAAO,GAC5CgF,EAA2BpG,UAAUuG,OAAS,GAC9CH,EAA2BpG,UAAU8G,QAAU,GAC/CV,EAA2BpG,UAAU+G,MAAQ,GAC7CX,EAA2BpG,UAAUgH,MAAQ,KAC7CZ,EAA2BpG,UAAUgG,OAAS,KAC9CI,EAA2BpG,UAAU+F,KAAO,KAC5CK,EAA2BpG,UAAUiH,OAAS,KAC9Cb,EAA2BpG,UAAUkH,OAAS,KAC9Cd,EAA2BpG,UAAU2F,SAAW,KAsDhD,MAAM4B,EAAuB,CAACC,SAS9B,SAAkCC,EAAMC,GACtC,QAAYd,IAARc,GAAoC,kBAARA,EAC9B,MAAM,IAAIC,UAAU,mCAGtBC,EAAWH,GACX,IAIII,EAJA3B,EAAQ,EACRC,GAAO,EACPnB,EAAQyC,EAAKvF,OAIjB,QAAY0E,IAARc,GAAoC,IAAfA,EAAIxF,QAAgBwF,EAAIxF,OAASuF,EAAKvF,OAAQ,CACrE,KAAO8C,KACL,GAA+B,KAA3ByC,EAAKK,WAAW9C,IAGlB,GAAI6C,EAAc,CAChB3B,EAAQlB,EAAQ,EAChB,YAEOmB,EAAM,IAGf0B,GAAe,EACf1B,EAAMnB,EAAQ,GAIlB,OAAOmB,EAAM,EAAI,GAAKsB,EAAKvC,MAAMgB,EAAOC,GAG1C,GAAIuB,IAAQD,EACV,MAAO,GAGT,IAAIM,GAAoB,EACpBC,EAAWN,EAAIxF,OAAS,EAE5B,KAAO8C,KACL,GAA+B,KAA3ByC,EAAKK,WAAW9C,IAGlB,GAAI6C,EAAc,CAChB3B,EAAQlB,EAAQ,EAChB,YAGE+C,EAAmB,IAGrBF,GAAe,EACfE,EAAmB/C,EAAQ,GAGzBgD,GAAY,IAEVP,EAAKK,WAAW9C,KAAW0C,EAAII,WAAWE,KACxCA,EAAW,IAGb7B,EAAMnB,IAKRgD,GAAY,EACZ7B,EAAM4B,IAMV7B,IAAUC,EACZA,EAAM4B,EACG5B,EAAM,IACfA,EAAMsB,EAAKvF,QAGb,OAAOuF,EAAKvC,MAAMgB,EAAOC,IAxFuC8B,QA+FlE,SAAiCR,GAG/B,GAFAG,EAAWH,GAES,IAAhBA,EAAKvF,OACP,MAAO,IAGT,IAGIgG,EAHA/B,GAAO,EACPnB,EAAQyC,EAAKvF,OAKjB,OAAS8C,GACP,GAA+B,KAA3ByC,EAAKK,WAAW9C,IAClB,GAAIkD,EAAgB,CAClB/B,EAAMnB,EACN,YAEQkD,IAEVA,GAAiB,GAIrB,OAAO/B,EAAM,EACc,KAAvBsB,EAAKK,WAAW,GACd,IACA,IACM,IAAR3B,GAAoC,KAAvBsB,EAAKK,WAAW,GAC7B,KACAL,EAAKvC,MAAM,EAAGiB,IA9HgFgC,QAqIpG,SAAiCV,GAC/BG,EAAWH,GAEX,IASIS,EATAlD,EAAQyC,EAAKvF,OAEbiE,GAAO,EACPiC,EAAY,EACZC,GAAY,EAGZC,EAAc,EAIlB,KAAOtD,KAAS,CACd,MAAMuD,EAAOd,EAAKK,WAAW9C,GAE7B,GAAa,KAATuD,EAWApC,EAAM,IAGR+B,GAAiB,EACjB/B,EAAMnB,EAAQ,GAGH,KAATuD,EAEEF,EAAW,EACbA,EAAWrD,EACc,IAAhBsD,IACTA,EAAc,GAEPD,GAAY,IAGrBC,GAAe,QAzBf,GAAIJ,EAAgB,CAClBE,EAAYpD,EAAQ,EACpB,OA2BN,GACEqD,EAAW,GACXlC,EAAM,GAEU,IAAhBmC,GAEiB,IAAhBA,GAAqBD,IAAalC,EAAM,GAAKkC,IAAaD,EAAY,EAEvE,MAAO,GAGT,OAAOX,EAAKvC,MAAMmD,EAAUlC,IAjMwGqC,KAwMtI,YAAiBC,GACf,IAEIC,EAFA1D,GAAS,EAIb,OAASA,EAAQyD,EAASvG,QACxB0F,EAAWa,EAASzD,IAEhByD,EAASzD,KACX0D,OACa9B,IAAX8B,EAAuBD,EAASzD,GAAS0D,EAAS,IAAMD,EAASzD,IAIvE,YAAkB4B,IAAX8B,EAAuB,IAUhC,SAAmBjB,GACjBG,EAAWH,GAEX,MAAMkB,EAAkC,KAAvBlB,EAAKK,WAAW,GAGjC,IAAIvG,EAoBN,SAAyBkG,EAAMmB,GAC7B,IAMIL,EAEAM,EARAC,EAAS,GACTC,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACPjE,GAAS,EAMb,OAASA,GAASyC,EAAKvF,QAAQ,CAC7B,GAAI8C,EAAQyC,EAAKvF,OACfqG,EAAOd,EAAKK,WAAW9C,OAClB,CAAA,GAAa,KAATuD,EACT,MAEAA,EAAO,GAGT,GAAa,KAATA,EAAuB,CACzB,GAAIS,IAAchE,EAAQ,GAAc,IAATiE,QAExB,GAAID,IAAchE,EAAQ,GAAc,IAATiE,EAAY,CAChD,GACEH,EAAO5G,OAAS,GACM,IAAtB6G,GACyC,KAAzCD,EAAOhB,WAAWgB,EAAO5G,OAAS,IACO,KAAzC4G,EAAOhB,WAAWgB,EAAO5G,OAAS,GAElC,GAAI4G,EAAO5G,OAAS,GAGlB,GAFA2G,EAAiBC,EAAOI,YAAY,KAEhCL,IAAmBC,EAAO5G,OAAS,EAAG,CACpC2G,EAAiB,GACnBC,EAAS,GACTC,EAAoB,IAEpBD,EAASA,EAAO5D,MAAM,EAAG2D,GACzBE,EAAoBD,EAAO5G,OAAS,EAAI4G,EAAOI,YAAY,MAG7DF,EAAYhE,EACZiE,EAAO,EACP,eAEG,GAAIH,EAAO5G,OAAS,EAAG,CAC5B4G,EAAS,GACTC,EAAoB,EACpBC,EAAYhE,EACZiE,EAAO,EACP,SAIAL,IACFE,EAASA,EAAO5G,OAAS,EAAI4G,EAAS,MAAQ,KAC9CC,EAAoB,QAGlBD,EAAO5G,OAAS,EAClB4G,GAAU,IAAMrB,EAAKvC,MAAM8D,EAAY,EAAGhE,GAE1C8D,EAASrB,EAAKvC,MAAM8D,EAAY,EAAGhE,GAGrC+D,EAAoB/D,EAAQgE,EAAY,EAG1CA,EAAYhE,EACZiE,EAAO,OACW,KAATV,GAAyBU,GAAQ,EAC1CA,IAEAA,GAAQ,EAIZ,OAAOH,EAlGKK,CAAgB1B,GAAOkB,GAEd,IAAjBpH,EAAMW,QAAiByG,IACzBpH,EAAQ,KAGNA,EAAMW,OAAS,GAA0C,KAArCuF,EAAKK,WAAWL,EAAKvF,OAAS,KACpDX,GAAS,KAGX,OAAOoH,EAAW,IAAMpH,EAAQA,EA1BI6H,CAAUV,IAtN4FW,IAAK,KA8UjJ,SAASzB,EAAWH,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAIE,UACR,mCAAqC2B,KAAKC,UAAU9B,IAW1D,MAAM+B,EAAO,CAACC,IAEd,WACE,MAAO,MA2BT,SAASC,EAAMC,GACb,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAcC,MAEdD,EAAclD,OAclB,SAASoD,EAAUpC,GACjB,GAAoB,kBAATA,EACTA,EAAO,IAAIqC,IAAIrC,QACV,IAAKiC,EAAMjC,GAAO,CAEvB,MAAMsC,EAAQ,IAAIpC,UAChB,+EACEF,EACA,KAGJ,MADAsC,EAAMxB,KAAO,uBACPwB,EAGR,GAAsB,UAAlBtC,EAAKxC,SAAsB,CAE7B,MAAM8E,EAAQ,IAAIpC,UAAU,kCAE5B,MADAoC,EAAMxB,KAAO,yBACPwB,EAGR,OAMF,SAA6BrF,GAC3B,GAAqB,KAAjBA,EAAIsF,SAAiB,CAEvB,MAAMD,EAAQ,IAAIpC,UAChB,wDAGF,MADAoC,EAAMxB,KAAO,4BACPwB,EAGR,MAAME,EAAWvF,EAAIuF,SACrB,IAAIjF,GAAS,EAEb,OAASA,EAAQiF,EAAS/H,QACxB,GACiC,KAA/B+H,EAASnC,WAAW9C,IACe,KAAnCiF,EAASnC,WAAW9C,EAAQ,GAC5B,CACA,MAAMkF,EAAQD,EAASnC,WAAW9C,EAAQ,GAC1C,GAAc,KAAVkF,GAAoC,MAAVA,EAAyB,CAErD,MAAMH,EAAQ,IAAIpC,UAChB,uDAGF,MADAoC,EAAMxB,KAAO,4BACPwB,GAKZ,OAAOI,mBAAmBF,GApCnBG,CAAoB3C,GAmG7B,MAAM4C,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAEjE,MAAMC,EAkBJhE,YAAY/E,GAEV,IAAIJ,EAMFA,EAJGI,EAEuB,kBAAVA,GAAsBiE,GAAAA,CAAoBjE,GAEhD,CAACA,MAAAA,GACFmI,EAAMnI,GACL,CAACkG,KAAMlG,GAGPA,EARA,GAiBZsF,KAAK0D,KAAO,GAMZ1D,KAAK2D,SAAW,GAOhB3D,KAAK4D,QAAU,GAMf5D,KAAK4C,IAAMD,EAAKC,MAOhB5C,KAAKtF,MAULsF,KAAK6D,OASL7D,KAAKiC,OASLjC,KAAK8D,IAIL,IAcIC,EAdA5F,GAAS,EAEb,OAASA,EAAQqF,EAAMnI,QAAQ,CAC7B,MAAM0I,EAAOP,EAAMrF,GAIf4F,KAAQzJ,QAA6ByF,IAAlBzF,EAAQyJ,KAE7B/D,KAAK+D,GAAiB,YAATA,EAAqB,IAAIzJ,EAAQyJ,IAASzJ,EAAQyJ,IAQnE,IAAKA,KAAQzJ,EAENkJ,EAAMQ,SAASD,KAAO/D,KAAK+D,GAAQzJ,EAAQyJ,IAQpDnD,WACE,OAAOZ,KAAK4D,QAAQ5D,KAAK4D,QAAQvI,OAAS,GAU5CuF,SAASA,GACHiC,EAAMjC,KACRA,EAAOoC,EAAUpC,IAGnBqD,EAAerD,EAAM,QAEjBZ,KAAKY,OAASA,GAChBZ,KAAK4D,QAAQhL,KAAKgI,GAOtBQ,cACE,MAA4B,kBAAdpB,KAAKY,KAAoBF,EAAqBU,QAAQpB,KAAKY,WAAQb,EAOnFqB,YAAYA,GACV8C,EAAelE,KAAKW,SAAU,WAC9BX,KAAKY,KAAOF,EAAqBiB,KAAKP,GAAW,GAAIpB,KAAKW,UAM5DA,eACE,MAA4B,kBAAdX,KAAKY,KAAoBF,EAAqBC,SAASX,KAAKY,WAAQb,EASpFY,aAAaA,GACXsD,EAAetD,EAAU,YACzBwD,EAAWxD,EAAU,YACrBX,KAAKY,KAAOF,EAAqBiB,KAAK3B,KAAKoB,SAAW,GAAIT,GAM5DW,cACE,MAA4B,kBAAdtB,KAAKY,KAAoBF,EAAqBY,QAAQtB,KAAKY,WAAQb,EASnFuB,YAAYA,GAIV,GAHA6C,EAAW7C,EAAS,WACpB4C,EAAelE,KAAKoB,QAAS,WAEzBE,EAAS,CACX,GAA8B,KAA1BA,EAAQL,WAAW,GACrB,MAAM,IAAIzB,MAAM,iCAGlB,GAAI8B,EAAQ0C,SAAS,IAAK,GACxB,MAAM,IAAIxE,MAAM,0CAIpBQ,KAAKY,KAAOF,EAAqBiB,KAAK3B,KAAKoB,QAASpB,KAAKoE,MAAQ9C,GAAW,KAM9E8C,WACE,MAA4B,kBAAdpE,KAAKY,KACfF,EAAqBC,SAASX,KAAKY,KAAMZ,KAAKsB,cAC9CvB,EASNqE,SAASA,GACPH,EAAeG,EAAM,QACrBD,EAAWC,EAAM,QACjBpE,KAAKY,KAAOF,EAAqBiB,KAAK3B,KAAKoB,SAAW,GAAIgD,GAAQpE,KAAKsB,SAAW,KAYpF7B,SAAS4E,GACP,OAAQrE,KAAKtF,OAAS,IAAIpB,SAAS+K,GAiBrC5E,QAAQC,EAAQC,EAAOC,GACrB,MAAMK,EAAU,IAAIV,EAA2BG,EAAQC,EAAOC,GAW9D,OATII,KAAKY,OACPX,EAAQ1F,KAAOyF,KAAKY,KAAO,IAAMX,EAAQ1F,KACzC0F,EAAQO,KAAOR,KAAKY,MAGtBX,EAAQE,OAAQ,EAEhBH,KAAK2D,SAAS/K,KAAKqH,GAEZA,EAgBTR,KAAKC,EAAQC,EAAOC,GAClB,MAAMK,EAAUD,KAAKC,QAAQP,EAAQC,EAAOC,GAI5C,OAFAK,EAAQE,MAAQ,KAETF,EAkBTR,KAAKC,EAAQC,EAAOC,GAClB,MAAMK,EAAUD,KAAKC,QAAQP,EAAQC,EAAOC,GAI5C,MAFAK,EAAQE,OAAQ,EAEVF,GAWV,SAASkE,EAAWG,EAAM/J,GACxB,GAAI+J,GAAQA,EAAKN,SAAStD,EAAqB8B,KAC7C,MAAM,IAAIhD,MACR,IAAMjF,EAAO,uCAAyCmG,EAAqB8B,IAAM,KAYvF,SAASyB,EAAeK,EAAM/J,GAC5B,IAAK+J,EACH,MAAM,IAAI9E,MAAM,IAAMjF,EAAO,qBAWjC,SAAS2J,EAAetD,EAAMrG,GAC5B,IAAKqG,EACH,MAAM,IAAIpB,MAAM,YAAcjF,EAAO,mCAYzC,SAASgK,EAAKrB,GACZ,GAAIA,EACF,MAAMA,EAKV,IAAIpI,EAAS9B,EAAoB,QAC7BwL,EAA8BxL,EAAoByF,EAAE3D,GAGxD,SAAShB,EAAcY,GACtB,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,MAAMvB,EAAYD,OAAOuL,eAAe/J,GACxC,OAAsB,OAAdvB,GAAsBA,IAAcD,OAAOC,WAAkD,OAArCD,OAAOuL,eAAetL,OAA0BuL,OAAOC,eAAejK,MAAYgK,OAAO9I,YAAYlB,GAqBtK,SAASkK,IAEP,MAAMC,EAAM,GAENC,EAAW,CAACC,IAKlB,YAAgBC,GACd,IAAIC,GAAmB,EAEvB,MAAMC,EAAWF,EAAOG,MAExB,GAAwB,oBAAbD,EACT,MAAM,IAAIpE,UAAU,2CAA6CoE,IAWnE,SAASE,EAAKlC,KAAUpH,GACtB,MAAMuJ,EAAKR,IAAMI,GACjB,IAAI9G,GAAS,EAEb,GAAI+E,EACFgC,EAAShC,OADX,CAMA,OAAS/E,EAAQ6G,EAAO3J,QACA,OAAlBS,EAAOqC,SAAqC4B,IAAlBjE,EAAOqC,KACnCrC,EAAOqC,GAAS6G,EAAO7G,IAK3B6G,EAASlJ,EAGLuJ,EA6BV,SAAcC,EAAYJ,GAExB,IAAIK,EAEJ,OAAOC,EAQP,SAASA,KAAWC,GAClB,MAAMC,EAAoBJ,EAAWjK,OAASoK,EAAWpK,OAEzD,IAAI4G,EAEAyD,GACFD,EAAW7M,KAAK+M,GAGlB,IACE1D,EAASqD,EAAWM,MAAM5F,KAAMyF,GAChC,MAAOvC,GACP,MAAM2C,EAAiC,EAMvC,GAAIH,GAAqBH,EACvB,MAAMM,EAGR,OAAOF,EAAKE,GAGTH,IACCzD,aAAkB6D,QACpB7D,EAAO8D,KAAKA,EAAMJ,GACT1D,aAAkBzC,MAC3BmG,EAAK1D,GAEL8D,EAAK9D,IASX,SAAS0D,EAAKzC,KAAUpH,GACjByJ,IACHA,GAAS,EACTL,EAAShC,KAAUpH,IASvB,SAASiK,EAAKrL,GACZiL,EAAK,KAAMjL,IA7FPsL,CAAKX,EAAID,EAATY,IAAkBlK,GAElBoJ,EAAS,QAASpJ,IA/BtBsJ,CAAK,QAASJ,IAdOiB,IAmDvB,SAAaC,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAIpF,UACR,+CAAiDoF,GAKrD,OADArB,EAAIjM,KAAKsN,GACFpB,IAzDT,OAAOA,EAuKT,MAAMqB,EAQN,SAASC,IACP,MAAMC,EAAezB,IAEf0B,EAAY,GAElB,IAEIC,EAFAC,EAAY,GAGZC,GAAe,EA2BnB,OAvBAC,EAAUhD,KA6CV,SAAc1J,EAAKU,GACjB,GAAmB,kBAARV,EAET,OAAyB,IAArBmB,UAAUE,QACZsL,EAAe,OAAQJ,GACvBC,EAAUxM,GAAOU,EACVgM,GAIDE,EAAI/M,KAAK2M,EAAWxM,IAAQwM,EAAUxM,IAAS,KAIzD,GAAIA,EAGF,OAFA2M,EAAe,OAAQJ,GACvBC,EAAYxM,EACL0M,EAIT,OAAOF,GAjETE,EAAUG,YAAS9G,EACnB2G,EAAUI,cAAW/G,EAGrB2G,EAAUK,OAiEV,WACE,GAAIR,EACF,OAAOG,EAGT,OAASD,EAAcH,EAAUjL,QAAQ,CACvC,MAAO2L,KAAa1M,GAAWgM,EAAUG,GAEzC,IAAmB,IAAfnM,EAAQ,GACV,UAGiB,IAAfA,EAAQ,KACVA,EAAQ,QAAKyF,GAIf,MAAMkH,EAAcD,EAASnN,KAAK6M,KAAcpM,GAErB,oBAAhB2M,GACTZ,EAAaJ,IAAIgB,GAOrB,OAHAV,GAAS,EACTE,EAAcS,OAAOC,kBAEdT,GAzFTA,EAAUJ,UAAYA,EAEtBI,EAAUT,IA+FV,SAAavL,KAAUJ,GAErB,IAAI8M,EAIJ,GAFAT,EAAe,MAAOJ,GAER,OAAV7L,QAA4BqF,IAAVrF,QAEf,GAAqB,oBAAVA,EAChB2M,EAAU3M,KAAUJ,OACf,CAAA,GAAqB,kBAAVI,EAOhB,MAAM,IAAIoG,UAAU,+BAAiCpG,EAAQ,KANzDd,MAAMF,QAAQgB,GAChB4M,EAAQ5M,GAER6M,EAAU7M,GAMV0M,IACFZ,EAAUY,SAAWlO,OAAOsO,OAAOhB,EAAUY,UAAY,GAAIA,IAG/D,OAAOV,EAMP,SAASe,EAAI/M,GACX,GAAqB,oBAAVA,EACT2M,EAAU3M,OACL,CAAA,GAAqB,kBAAVA,EAQhB,MAAM,IAAIoG,UAAU,+BAAiCpG,EAAQ,KAP7D,GAAId,MAAMF,QAAQgB,GAAQ,CACxB,MAAOgN,KAAWpN,GAAWI,EAC7B2M,EAAUK,KAAWpN,QAErBiN,EAAU7M,IAWhB,SAAS6M,EAAUtF,GACjBqF,EAAQrF,EAAO0F,SAEX1F,EAAOmF,WACTA,EAAWlO,OAAOsO,OAAOJ,GAAY,GAAInF,EAAOmF,WAQpD,SAASE,EAAQK,GACf,IAAIxJ,GAAS,EAEb,GAAgB,OAAZwJ,QAAgC5H,IAAZ4H,OAEjB,CAAA,IAAI/N,MAAMF,QAAQiO,GAMvB,MAAM,IAAI7G,UAAU,oCAAsC6G,EAAU,KALpE,OAASxJ,EAAQwJ,EAAQtM,QAAQ,CAE/BoM,EADcE,EAAQxJ,MAa5B,SAASkJ,EAAUK,EAAQhN,GACzB,IAEIkN,EAFAzJ,GAAS,EAIb,OAASA,EAAQmI,EAAUjL,QACzB,GAAIiL,EAAUnI,GAAO,KAAOuJ,EAAQ,CAClCE,EAAQtB,EAAUnI,GAClB,MAIAyJ,GACE9N,EAAc8N,EAAM,KAAO9N,EAAcY,KAC3CA,EAAQ8J,GAAAA,EAAiB,EAAMoD,EAAM,GAAIlN,IAG3CkN,EAAM,GAAKlN,GAGX4L,EAAU1N,KAAK,IAAIuC,cAjMzBuL,EAAUhL,MAuMV,SAAemM,GACbnB,EAAUK,SACV,MAAMvG,EAAOsH,EAAMD,GACbhB,EAASH,EAAUG,OAGzB,GAFAkB,EAAa,QAASlB,GAElBmB,EAAQnB,EAAQ,SAElB,OAAO,IAAIA,EAAOoB,OAAOzH,GAAOA,GAAM9E,QAIxC,OAAOmL,EAAOoB,OAAOzH,GAAOA,IAlN9BkG,EAAUhE,UAsNV,SAAmBwF,EAAML,GACvBnB,EAAUK,SACV,MAAMvG,EAAOsH,EAAMD,GACbf,EAAWJ,EAAUI,SAI3B,GAHAqB,EAAe,YAAarB,GAC5BsB,EAAWF,GAEPF,EAAQlB,EAAU,WAEpB,OAAO,IAAIA,EAASoB,EAAM1H,GAAM6H,UAIlC,OAAOvB,EAASoB,EAAM1H,IAjOxBkG,EAAU3B,IA0OV,SAAamD,EAAML,EAAK3C,GACtBkD,EAAWF,GACXxB,EAAUK,SAEL7B,GAA2B,oBAAR2C,IACtB3C,EAAW2C,EACXA,OAAM9H,GAGR,IAAKmF,EACH,OAAO,IAAIY,QAAQwC,GAUrB,SAASA,EAASC,EAASC,GAUzB,SAAS7C,EAAKzC,EAAOuF,EAAMjI,GACzBiI,EAAOA,GAAQP,EACXhF,EACFsF,EAAOtF,GACEqF,EACTA,EAAQE,GAGRvD,EAAS,KAAMuD,EAAMjI,GAhBzB6F,EAAatB,IAAImD,EAAMJ,EAAMD,GAAMlC,GATrC2C,EAAS,KAAMpD,IAtPjBwB,EAAUgC,QAsRV,SAAiBR,EAAM1H,GAErB,IAAIyB,EAEA0G,EAOJ,OALAjC,EAAU3B,IAAImD,EAAM1H,EAAMmF,GAE1BiD,EAAW,UAAW,MAAOD,GAGtB1G,EAOP,SAAS0D,EAAKzC,EAAOuF,GACnBlE,EAAKrB,GACLjB,EAASwG,EACTE,GAAW,IAzSfjC,EAAUmC,QAkTV,SAAiBhB,EAAK3C,GAKpB,GAJAwB,EAAUK,SACVgB,EAAa,UAAWrB,EAAUG,QAClCsB,EAAe,UAAWzB,EAAUI,WAE/B5B,EACH,OAAO,IAAIY,QAAQwC,GAUrB,SAASA,EAASC,EAASC,GACzB,MAAMhI,EAAOsH,EAAMD,GA0BnB,SAASlC,EAAKzC,EAAO1C,GACf0C,IAAU1C,EACZgI,EAAOtF,GACEqF,EACTA,EAAQ/H,GAGR0E,EAAS,KAAM1E,GA/BnBkG,EAAU3B,IAAI2B,EAAUhL,MAAM8E,GAAOA,GAAM,CAAC0C,EAAOuF,EAAMjI,KACvD,IAAI0C,GAAUuF,GAASjI,EAEhB,CAEL,MAAMyB,EAASyE,EAAUhE,UAAU+F,EAAMjI,QAE1BT,IAAXkC,GAAmC,OAAXA,IAsMZ,kBADIvH,EAnMYuH,IAoMJtD,GAAAA,CAAoBjE,GAnM9C8F,EAAK9F,MAAQuH,EAEbzB,EAAKyB,OAASA,GAGhB0D,EAAKzC,EAAO1C,QAbZmF,EAAKzC,GA0Mf,IAA8BxI,KAtN1B4N,EAAS,KAAMpD,IA1TjBwB,EAAUoC,YA0WV,SAAqBjB,GAEnB,IAAIc,EAEJjC,EAAUK,SACVgB,EAAa,cAAerB,EAAUG,QACtCsB,EAAe,cAAezB,EAAUI,UAExC,MAAMtG,EAAOsH,EAAMD,GAMnB,OAJAnB,EAAUmC,QAAQrI,EAAMmF,GAExBiD,EAAW,cAAe,UAAWD,GAE9BnI,EAMP,SAASmF,EAAKzC,GACZyF,GAAW,EACXpE,EAAKrB,KA7XFwD,EAIP,SAASA,IACP,MAAMqC,EAAc3C,IACpB,IAAIjI,GAAS,EAEb,OAASA,EAAQmI,EAAUjL,QACzB0N,EAAY9C,OAAOK,EAAUnI,IAK/B,OAFA4K,EAAYrF,KAAKc,GAAAA,EAAiB,EAAM,GAAIgC,IAErCuC,GAzDK3C,GAAOW,SAEjBH,EAAM,GAAGxN,eAkbf,SAAS4O,EAAQtN,EAAOH,GACtB,MACmB,oBAAVG,GAGPA,EAAMvB,YAeV,SAAcuB,GAEZ,IAAIV,EAEJ,IAAKA,KAAOU,EACV,GAAIkM,EAAI/M,KAAKa,EAAOV,GAClB,OAAO,EAIX,OAAO,EApBJgP,CAAKtO,EAAMvB,YAAcoB,KAAQG,EAAMvB,WA8B5C,SAAS4O,EAAaxN,EAAMG,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAIoG,UAAU,WAAavG,EAAO,sBAW5C,SAAS4N,EAAe5N,EAAMG,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAIoG,UAAU,WAAavG,EAAO,wBAW5C,SAASoM,EAAepM,EAAMgM,GAC5B,GAAIA,EACF,MAAM,IAAI/G,MACR,gBACEjF,EACA,oHAWR,SAAS6N,EAAWF,GAGlB,IAAKpO,EAAcoO,IAA8B,kBAAdA,EAAKe,KACtC,MAAM,IAAInI,UAAU,uBAAyBoH,EAAO,KAaxD,SAASU,EAAWrO,EAAM2O,EAAWP,GACnC,IAAKA,EACH,MAAM,IAAInJ,MACR,IAAMjF,EAAO,0BAA4B2O,EAAY,aAS3D,SAASpB,EAAMpN,GACb,OAOF,SAAyBA,GACvB,OAAOyO,QACLzO,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,GAZX0O,CAAgB1O,GAASA,EAAQ,IAAI+I,EAAU/I,GAiDxD,SAAS2O,EAAInB,EAAMoB,GACjB,OACGpB,GACiB,kBAATA,IAENA,EAAKxN,QAEH4O,EAAkBpB,EAAKqB,IAAM,KAE7B,aAAcrB,GAAQsB,EAAyBtB,EAAKuB,SAAUH,IAC9D1P,MAAMF,QAAQwO,IAASsB,EAAyBtB,EAAMoB,KAC3D,GASJ,SAASE,EAAyBxE,EAAQsE,GAKxC,IAHA,IAAIrH,EAAS,GACT9D,GAAS,IAEJA,EAAQ6G,EAAO3J,QACtB4G,EAAO9D,GAASkL,EAAIrE,EAAO7G,GAAQmL,GAGrC,OAAOrH,EAAON,KAAK,IAoBrB,SAAS+H,EAAOC,EAAMtK,EAAOuK,EAAQC,GACnC,MAAMvK,EAAMqK,EAAKtO,OACjB,IAGIoK,EAHAqE,EAAa,EAajB,GAPEzK,EADEA,EAAQ,GACDA,EAAQC,EAAM,EAAIA,EAAMD,EAEzBA,EAAQC,EAAMA,EAAMD,EAG9BuK,EAASA,EAAS,EAAIA,EAAS,EAE3BC,EAAMxO,OAAS,IACjBoK,EAAa7L,MAAMmQ,KAAKF,GACxBpE,EAAWuE,QAAQ3K,EAAOuK,GACzB,GAAGF,OAAO9D,MAAM+D,EAAMlE,QAKvB,IAFImE,GAAQ,GAAGF,OAAO9D,MAAM+D,EAAM,CAACtK,EAAOuK,IAEnCE,EAAaD,EAAMxO,QACxBoK,EAAaoE,EAAMxL,MAAMyL,EAAYA,EAAa,KAClDrE,EAAWuE,QAAQ3K,EAAO,GACzB,GAAGqK,OAAO9D,MAAM+D,EAAMlE,GACvBqE,GAAc,IACdzK,GAAS,IAiBf,SAASzG,EAAK+Q,EAAME,GAClB,OAAIF,EAAKtO,OAAS,GAChBqO,EAAOC,EAAMA,EAAKtO,OAAQ,EAAGwO,GACtBF,GAGFE,EAaT,MAAMI,EAAmD,GAAG7Q,eA2B5D,SAAS8Q,EAAgBC,EAAKC,GAE5B,IAAIC,EAEJ,IAAKA,KAAQD,EAAW,CACtB,MACME,GADQL,EAAiDpQ,KAAKsQ,EAAKE,GAAQF,EAAIE,QAAQtK,KACtEoK,EAAIE,GAAQ,IAC7BE,EAAQH,EAAUC,GAExB,IAAI3I,EAEJ,IAAKA,KAAQ6I,EAAO,CACbN,EAAiDpQ,KAAKyQ,EAAM5I,KAAO4I,EAAK5I,GAAQ,IACrF,MAAMhH,EAAQ6P,EAAM7I,GACpB8I,EAEEF,EAAK5I,GACL9H,MAAMF,QAAQgB,GAASA,EAAQA,EAAQ,CAACA,GAAS,MAczD,SAAS8P,EAA6CC,EAAUd,GAC9D,IAAIxL,GAAS,EAEb,MAAMuM,EAAS,GAEf,OAASvM,EAAQwL,EAAKtO,SAEE,UAApBsO,EAAKxL,GAAOsJ,IAAkBgD,EAAWC,GAAQ9R,KAAK+Q,EAAKxL,IAG/DuL,EAAOe,EAAU,EAAG,EAAGC,GAsDzB,MAqBMC,EAAaC,GAAW,YAQxBC,EAAaD,GAAW,MAexBE,EAAgBF,GAAW,cAS3BG,EAAoBH,GAAW,cAU/BI,EAAmBJ,GAAW,kBAkB9BK,EAAaL,GAAW,uBAW9B,SAASM,EAAaxJ,GACpB,OAGW,OAATA,IAAkBA,EAAO,IAAe,MAATA,GAWnC,SAASyJ,GAA0BzJ,GACjC,OAAgB,OAATA,IAAkBA,EAAO,GAAc,KAATA,GAgBvC,SAAS0J,GAAmB1J,GAC1B,OAAgB,OAATA,GAAiBA,GAAQ,EAgBlC,SAAS2J,GAAc3J,GACrB,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,EAkBvC,MAAM4J,GAAoBV,GAAW,MAkB/BW,GAAqBX,GAjLzB,+vCAyLF,SAASA,GAAWY,GAClB,OAQA,SAAe9J,GACb,OAAgB,OAATA,GAAiB8J,EAAMC,KAAKxD,OAAOyD,aAAahK,KAkB3D,SAASiK,GAAaC,EAASC,EAAI5C,EAAM6C,GACvC,MAAMC,EAAQD,EAAMA,EAAM,EAAI5E,OAAOC,kBACrC,IAAI6E,EAAO,EACX,OAGA,SAAetK,GACb,GAAI2J,GAAc3J,GAEhB,OADAkK,EAAQK,MAAMhD,GACPiD,EAAOxK,GAGhB,OAAOmK,EAAGnK,IAIZ,SAASwK,EAAOxK,GACd,OAAI2J,GAAc3J,IAASsK,IAASD,GAClCH,EAAQO,QAAQzK,GACTwK,IAGTN,EAAQQ,KAAKnD,GACN4C,EAAGnK,KAed,MAAM2K,GAAkB,CACtBC,SAIF,SAA2BV,GACzB,MAAMW,EAAeX,EAAQY,QAC3BxM,KAAKyM,OAAOC,WAAW/P,gBAUzB,SAAoC+E,GAClC,GAAa,OAATA,EAEF,YADAkK,EAAQO,QAAQzK,GAOlB,OAHAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNT,GAAaC,EAASW,EAAc,iBAI7C,SAA0B7K,GAExB,OADAkK,EAAQK,MAAM,aACPU,EAAUjL,MAnBnB,IAAIkL,EACJ,OAAOL,EAsBP,SAASI,EAAUjL,GACjB,MAAMmL,EAAQjB,EAAQK,MAAM,YAAa,CACvCa,YAAa,OACbF,SAAAA,IAQF,OALIA,IACFA,EAASxH,KAAOyH,GAGlBD,EAAWC,EACJnJ,EAAKhC,GAId,SAASgC,EAAKhC,GACZ,OAAa,OAATA,GACFkK,EAAQQ,KAAK,aACbR,EAAQQ,KAAK,kBACbR,EAAQO,QAAQzK,IAId0J,GAAmB1J,IACrBkK,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,aACNO,IAGTf,EAAQO,QAAQzK,GACTgC,MAyBX,MAAMqJ,GAAoB,CACxBT,SASF,SAA4BV,GAC1B,MAAMoB,EAAOhN,KAGPE,EAAQ,GACd,IAGI+M,EAGAC,EAGAC,EATAC,EAAY,EAUhB,OAAO/N,EAGP,SAASA,EAAMqC,GAWb,GAAI0L,EAAYlN,EAAM7E,OAAQ,CAC5B,MAAMgS,EAAOnN,EAAMkN,GAEnB,OADAJ,EAAKM,eAAiBD,EAAK,GACpBzB,EAAQY,QACba,EAAK,GAAGE,aACRC,EACAC,EAHK7B,CAILlK,GAGJ,OAAO+L,EAAmB/L,GAI5B,SAAS8L,EAAiB9L,GAKxB,GAJA0L,IAIIJ,EAAKM,eAAeI,WAAY,CAClCV,EAAKM,eAAeI,gBAAa3N,EAE7BkN,GACFU,IAIF,MAAMC,EAAmBZ,EAAKa,OAAOxS,OACrC,IAGI2D,EAHA8O,EAAkBF,EAKtB,KAAOE,KACL,GACsC,SAApCd,EAAKa,OAAOC,GAAiB,IACY,cAAzCd,EAAKa,OAAOC,GAAiB,GAAG7E,KAChC,CACAjK,EAAQgO,EAAKa,OAAOC,GAAiB,GAAGxO,IACxC,MAIJyO,EAAeX,GAEf,IAAIjP,EAAQyP,EAEZ,KAAOzP,EAAQ6O,EAAKa,OAAOxS,QACzB2R,EAAKa,OAAO1P,GAAO,GAAGmB,IAAMpG,OAAOsO,OAAO,GAAIxI,GAC9Cb,IAWF,OARAuL,EACEsD,EAAKa,OACLC,EAAkB,EAClB,EACAd,EAAKa,OAAOxP,MAAMuP,IAGpBZ,EAAKa,OAAOxS,OAAS8C,EACdsP,EAAmB/L,GAG5B,OAAOrC,EAAMqC,GAIf,SAAS+L,EAAmB/L,GAM1B,GAAI0L,IAAclN,EAAM7E,OAAQ,CAI9B,IAAK4R,EACH,OAAOe,EAAkBtM,GAK3B,GAAIuL,EAAUgB,kBAAoBhB,EAAUgB,iBAAiBC,SAC3D,OAAOC,EAAUzM,GAKnBsL,EAAKoB,UAAYjF,QACf8D,EAAUgB,mBAAqBhB,EAAUoB,+BAK7C,OADArB,EAAKM,eAAiB,GACf1B,EAAQ0C,MACbC,GACAC,EACAC,EAHK7C,CAILlK,GAIJ,SAAS8M,EAAqB9M,GAG5B,OAFIuL,GAAWU,IACfI,EAAeX,GACRY,EAAkBtM,GAI3B,SAAS+M,EAAsB/M,GAG7B,OAFAsL,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,MAAQkO,IAAclN,EAAM7E,OACxD8R,EAAkBH,EAAK2B,MAAMC,OACtBT,EAAUzM,GAInB,SAASsM,EAAkBtM,GAGzB,OADAsL,EAAKM,eAAiB,GACf1B,EAAQY,QACb+B,GACAM,EACAV,EAHKvC,CAILlK,GAIJ,SAASmN,EAAkBnN,GAIzB,OAHA0L,IACAlN,EAAMtH,KAAK,CAACoU,EAAKiB,iBAAkBjB,EAAKM,iBAEjCU,EAAkBtM,GAI3B,SAASyM,EAAUzM,GACjB,OAAa,OAATA,GACEuL,GAAWU,IACfI,EAAe,QACfnC,EAAQO,QAAQzK,KAIlBuL,EAAYA,GAAaD,EAAKP,OAAOqC,KAAK9B,EAAK2B,OAC/C/C,EAAQK,MAAM,YAAa,CACzBa,YAAa,OACbF,SAAUM,EACV6B,WAAY9B,IAEP+B,EAAatN,IAItB,SAASsN,EAAatN,GACpB,OAAa,OAATA,GACFuN,EAAarD,EAAQQ,KAAK,cAAc,GACxC2B,EAAe,QACfnC,EAAQO,QAAQzK,IAId0J,GAAmB1J,IACrBkK,EAAQO,QAAQzK,GAChBuN,EAAarD,EAAQQ,KAAK,cAE1BgB,EAAY,EACZJ,EAAKoB,eAAYrO,EACVV,IAGTuM,EAAQO,QAAQzK,GACTsN,GAQT,SAASC,EAAapC,EAAOqC,GAC3B,MAAMC,EAASnC,EAAKoC,YAAYvC,GAwChC,GAvCIqC,GAAKC,EAAOvW,KAAK,MACrBiU,EAAMD,SAAWM,EACbA,IAAYA,EAAW9H,KAAOyH,GAClCK,EAAaL,EACbI,EAAUoC,WAAWxC,EAAMxN,OAC3B4N,EAAUqC,MAAMH,GAkCZnC,EAAKP,OAAOiC,KAAK7B,EAAMxN,MAAMH,MAAO,CACtC,IAAIf,EAAQ8O,EAAUY,OAAOxS,OAE7B,KAAO8C,KACL,GAEE8O,EAAUY,OAAO1P,GAAO,GAAGkB,MAAMuP,OAASzB,KACxCF,EAAUY,OAAO1P,GAAO,GAAGmB,KAC3B2N,EAAUY,OAAO1P,GAAO,GAAGmB,IAAIsP,OAASzB,GAI1C,OAKJ,MAAMS,EAAmBZ,EAAKa,OAAOxS,OACrC,IAGIkU,EAGAvQ,EANA8O,EAAkBF,EAQtB,KAAOE,KACL,GACsC,SAApCd,EAAKa,OAAOC,GAAiB,IACY,cAAzCd,EAAKa,OAAOC,GAAiB,GAAG7E,KAChC,CACA,GAAIsG,EAAM,CACRvQ,EAAQgO,EAAKa,OAAOC,GAAiB,GAAGxO,IACxC,MAGFiQ,GAAO,EAQX,IAJAxB,EAAeX,GAEfjP,EAAQyP,EAEDzP,EAAQ6O,EAAKa,OAAOxS,QACzB2R,EAAKa,OAAO1P,GAAO,GAAGmB,IAAMpG,OAAOsO,OAAO,GAAIxI,GAC9Cb,IAGFuL,EACEsD,EAAKa,OACLC,EAAkB,EAClB,EACAd,EAAKa,OAAOxP,MAAMuP,IAGpBZ,EAAKa,OAAOxS,OAAS8C,GAQzB,SAAS4P,EAAe/B,GACtB,IAAI7N,EAAQ+B,EAAM7E,OAElB,KAAO8C,KAAU6N,GAAM,CACrB,MAAMpE,EAAQ1H,EAAM/B,GACpB6O,EAAKM,eAAiB1F,EAAM,GAC5BA,EAAM,GAAGwE,KAAKvS,KAAKmT,EAAMpB,GAG3B1L,EAAM7E,OAAS2Q,EAGjB,SAAS2B,IACPV,EAAUqC,MAAM,CAAC,OACjBpC,OAAanN,EACbkN,OAAYlN,EACZiN,EAAKM,eAAeI,gBAAa3N,KA/U/BwO,GAAqB,CACzBjC,SAmVF,SAA2BV,EAASC,EAAI2D,GACtC,OAAO7D,GACLC,EACAA,EAAQY,QAAQxM,KAAKyM,OAAOC,WAAW+C,SAAU5D,EAAI2D,GACrD,aACAxP,KAAKyM,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBAAkBjE,EAAY,KAc/E,MAAM4P,GAAY,CAChBrD,SAKF,SAA2BV,EAASC,EAAI2D,GACtC,OAAO7D,GAAaC,GAGpB,SAAyBlK,GACvB,OAAgB,OAATA,GAAiB0J,GAAmB1J,GAAQmK,EAAGnK,GAAQ8N,EAAI9N,KAJtB,eAL9CkO,SAAS,GA2BX,SAASC,GAAYhC,GAEnB,MAAMiC,EAAQ,GACd,IAGIC,EAGAC,EAGAC,EAGAC,EAGAzK,EAGA0K,EAGAC,EArBAjS,GAAS,EAuBb,OAASA,EAAQ0P,EAAOxS,QAAQ,CAC9B,KAAO8C,KAAS2R,GACd3R,EAAQ2R,EAAM3R,GAMhB,GAHA4R,EAAQlC,EAAO1P,GAIbA,GACkB,cAAlB4R,EAAM,GAAG9G,MACqB,mBAA9B4E,EAAO1P,EAAQ,GAAG,GAAG8K,OAErBkH,EAAYJ,EAAM,GAAGhB,WAAWlB,OAChCoC,EAAa,EAGXA,EAAaE,EAAU9U,QACW,oBAAlC8U,EAAUF,GAAY,GAAGhH,OAEzBgH,GAAc,GAIdA,EAAaE,EAAU9U,QACW,YAAlC8U,EAAUF,GAAY,GAAGhH,MAEzB,OAASgH,EAAaE,EAAU9U,QACQ,YAAlC8U,EAAUF,GAAY,GAAGhH,MAIS,cAAlCkH,EAAUF,GAAY,GAAGhH,OAC3BkH,EAAUF,GAAY,GAAGI,6BAA8B,EACvDJ,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGjD,cACX5T,OAAOsO,OAAOsI,EAAOQ,GAAWzC,EAAQ1P,IACxCA,EAAQ2R,EAAM3R,GACdiS,GAAO,QAGN,GAAIL,EAAM,GAAGQ,WAAY,CAI5B,IAHAN,EAAa9R,EACb6R,OAAYjQ,EAELkQ,MACLC,EAAarC,EAAOoC,GAGK,eAAvBC,EAAW,GAAGjH,MACS,oBAAvBiH,EAAW,GAAGjH,OAEQ,UAAlBiH,EAAW,KACTF,IACFnC,EAAOmC,GAAW,GAAG/G,KAAO,mBAG9BiH,EAAW,GAAGjH,KAAO,aACrB+G,EAAYC,GAOdD,IAEFD,EAAM,GAAGzQ,IAAMpG,OAAOsO,OAAO,GAAIqG,EAAOmC,GAAW,GAAG3Q,OAEtDoG,EAAaoI,EAAOxP,MAAM2R,EAAW7R,GACrCsH,EAAWuE,QAAQ+F,GACnBrG,EAAOmE,EAAQmC,EAAW7R,EAAQ6R,EAAY,EAAGvK,KAKvD,OAAQ2K,EAUV,SAASE,GAAWzC,EAAQ2C,GAC1B,MAAM3D,EAAQgB,EAAO2C,GAAY,GAC3BC,EAAU5C,EAAO2C,GAAY,GACnC,IAAIE,EAAgBF,EAAa,EAGjC,MAAMG,EAAiB,GACjBC,EACJ/D,EAAMkC,YAAc0B,EAAQhE,OAAOI,EAAMC,aAAaD,EAAMxN,OACxDwR,EAAcD,EAAU/C,OAGxBiC,EAAQ,GAGRgB,EAAO,GAGb,IAAI3B,EAGAvC,EACAzO,GAAS,EAGT4S,EAAUlE,EACVmE,EAAS,EACT3R,EAAQ,EACZ,MAAM4R,EAAS,CAAC5R,GAGhB,KAAO0R,GAAS,CAEd,KAAOlD,IAAS6C,GAAe,KAAOK,IAItCJ,EAAe/X,KAAK8X,GAEfK,EAAQhC,aACXI,EAASsB,EAAQrB,YAAY2B,GAExBA,EAAQ3L,MACX+J,EAAOvW,KAAK,MAGVgU,GACFgE,EAAUvB,WAAW0B,EAAQ1R,OAG3B0R,EAAQV,8BACVO,EAAUM,oCAAqC,GAGjDN,EAAUtB,MAAMH,GAEZ4B,EAAQV,8BACVO,EAAUM,wCAAqCnR,IAInD6M,EAAWmE,EACXA,EAAUA,EAAQ3L,KAMpB,IAFA2L,EAAUlE,IAED1O,EAAQ0S,EAAYxV,QAGC,SAA1BwV,EAAY1S,GAAO,IACW,UAA9B0S,EAAY1S,EAAQ,GAAG,IACvB0S,EAAY1S,GAAO,GAAG8K,OAAS4H,EAAY1S,EAAQ,GAAG,GAAG8K,MACzD4H,EAAY1S,GAAO,GAAGkB,MAAMH,OAAS2R,EAAY1S,GAAO,GAAGmB,IAAIJ,OAE/DG,EAAQlB,EAAQ,EAChB8S,EAAOrY,KAAKyG,GAEZ0R,EAAQhC,gBAAahP,EACrBgR,EAAQnE,cAAW7M,EACnBgR,EAAUA,EAAQ3L,MAmBtB,IAfAwL,EAAU/C,OAAS,GAIfkD,GAEFA,EAAQhC,gBAAahP,EACrBgR,EAAQnE,cAAW7M,GAEnBkR,EAAO9L,MAIThH,EAAQ8S,EAAO5V,OAER8C,KAAS,CACd,MAAME,EAAQwS,EAAYxS,MAAM4S,EAAO9S,GAAQ8S,EAAO9S,EAAQ,IACxDkB,EAAQsR,EAAexL,MAC7B2K,EAAM9F,QAAQ,CAAC3K,EAAOA,EAAQhB,EAAMhD,OAAS,IAC7CqO,EAAOmE,EAAQxO,EAAO,EAAGhB,GAK3B,IAFAF,GAAS,IAEAA,EAAQ2R,EAAMzU,QACrByV,EAAKE,EAASlB,EAAM3R,GAAO,IAAM6S,EAASlB,EAAM3R,GAAO,GACvD6S,GAAUlB,EAAM3R,GAAO,GAAK2R,EAAM3R,GAAO,GAAK,EAGhD,OAAO2S,EAmBT,MAAMK,GAAsB,CAC1B7E,SAsBF,SAAyBV,EAASC,GAEhC,IAAIe,EACJ,OAGA,SAAelL,GAKb,OAJAkK,EAAQK,MAAM,WACdW,EAAWhB,EAAQK,MAAM,eAAgB,CACvCa,YAAa,YAERpJ,EAAKhC,IAId,SAASgC,EAAKhC,GACZ,OAAa,OAATA,EACK0P,EAAW1P,GAGhB0J,GAAmB1J,GACdkK,EAAQ0C,MACb+C,GACAC,EACAF,EAHKxF,CAILlK,IAGJkK,EAAQO,QAAQzK,GACTgC,GAIT,SAAS0N,EAAW1P,GAGlB,OAFAkK,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,WACNP,EAAGnK,GAIZ,SAAS4P,EAAgB5P,GAQvB,OAPAkK,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,gBACbQ,EAASxH,KAAOwG,EAAQK,MAAM,eAAgB,CAC5Ca,YAAa,UACbF,SAAAA,IAEFA,EAAWA,EAASxH,KACb1B,IArET6E,QAeF,SAAwBsF,GAEtB,OADAgC,GAAYhC,GACLA,IAbHwD,GAAwB,CAC5B/E,SAqEF,SAA8BV,EAASC,EAAI2D,GACzC,MAAMxC,EAAOhN,KACb,OAGA,SAAwB0B,GAKtB,OAJAkK,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNT,GAAaC,EAAS2F,EAAU,eAIzC,SAASA,EAAS7P,GAChB,GAAa,OAATA,GAAiB0J,GAAmB1J,GACtC,OAAO8N,EAAI9N,GAGb,MAAM8P,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAE9C,OACG2R,EAAKP,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,iBAC9CwN,GACiB,eAAjBA,EAAK,GAAGvI,MACRuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,QAAU,EAEzCwQ,EAAGnK,GAGLkK,EAAQwC,UAAUpB,EAAKP,OAAOC,WAAWoC,KAAMU,EAAK3D,EAApDD,CAAwDlK,KAlGjEkO,SAAS,GAiHX,MAAMd,GAAO,CACXxC,SAIF,SAAwBV,GACtB,MAAMoB,EAAOhN,KACP0R,EAAU9F,EAAQY,QAEtBmD,IAmBF,SAAuBjO,GACrB,GAAa,OAATA,EAEF,YADAkK,EAAQO,QAAQzK,GAQlB,OAJAkK,EAAQK,MAAM,mBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,mBACbY,EAAKiB,sBAAmBlO,EACjB2R,IA3BP9F,EAAQY,QACNxM,KAAKyM,OAAOC,WAAW9P,YACvB+U,EACAhG,GACEC,EACAA,EAAQY,QACNxM,KAAKyM,OAAOC,WAAWoC,KACvB6C,EACA/F,EAAQY,QAAQ2E,GAAqBQ,IAEvC,gBAIN,OAAOD,EAiBP,SAASC,EAAejQ,GACtB,GAAa,OAATA,EASJ,OAJAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACbY,EAAKiB,sBAAmBlO,EACjB2R,EARL9F,EAAQO,QAAQzK,MAqBtB,MAAMkQ,GAAW,CACfC,WAAYC,MAERC,GAAcC,GAAkB,UAChCC,GAAYD,GAAkB,QAMpC,SAASA,GAAkBE,GACzB,MAAO,CACL5F,SAOF,SAAwBV,GACtB,MAAMoB,EAAOhN,KACP0M,EAAa1M,KAAKyM,OAAOC,WAAWwF,GACpCC,EAAOvG,EAAQY,QAAQE,EAAYrN,EAAO+S,GAChD,OAAO/S,EAGP,SAASA,EAAMqC,GACb,OAAO2Q,EAAQ3Q,GAAQyQ,EAAKzQ,GAAQ0Q,EAAQ1Q,GAI9C,SAAS0Q,EAAQ1Q,GACf,GAAa,OAATA,EAOJ,OAFAkK,EAAQK,MAAM,QACdL,EAAQO,QAAQzK,GACTgC,EANLkI,EAAQO,QAAQzK,GAUpB,SAASgC,EAAKhC,GACZ,OAAI2Q,EAAQ3Q,IACVkK,EAAQQ,KAAK,QACN+F,EAAKzQ,KAGdkK,EAAQO,QAAQzK,GACTgC,GAOT,SAAS2O,EAAQ3Q,GACf,GAAa,OAATA,EACF,OAAO,EAGT,MAAMiI,EAAO+C,EAAWhL,GACxB,IAAIvD,GAAS,EAEb,GAAIwL,EACF,OAASxL,EAAQwL,EAAKtO,QAAQ,CAC5B,MAAMgS,EAAO1D,EAAKxL,GAElB,IAAKkP,EAAKT,UAAYS,EAAKT,SAAS/S,KAAKmT,EAAMA,EAAKJ,UAClD,OAAO,EAKb,OAAO,IA9DTiF,WAAYC,GACA,SAAVI,EAAmBI,QAAyBvS,IAsElD,SAAS+R,GAAeS,GACtB,OAGA,SAAwB1E,EAAQ4C,GAC9B,IAGIxE,EAHA9N,GAAS,EAMb,OAASA,GAAS0P,EAAOxS,aACT0E,IAAVkM,EACE4B,EAAO1P,IAAoC,SAA1B0P,EAAO1P,GAAO,GAAG8K,OACpCgD,EAAQ9N,EACRA,KAEQ0P,EAAO1P,IAAoC,SAA1B0P,EAAO1P,GAAO,GAAG8K,OAExC9K,IAAU8N,EAAQ,IACpB4B,EAAO5B,GAAO,GAAG3M,IAAMuO,EAAO1P,EAAQ,GAAG,GAAGmB,IAC5CuO,EAAOnE,OAAOuC,EAAQ,EAAG9N,EAAQ8N,EAAQ,GACzC9N,EAAQ8N,EAAQ,GAGlBA,OAAQlM,GAIZ,OAAOwS,EAAgBA,EAAc1E,EAAQ4C,GAAW5C,GAe5D,SAASyE,GAAuBzE,EAAQ4C,GACtC,IAAID,EAAa,EAEjB,OAASA,GAAc3C,EAAOxS,QAC5B,IACGmV,IAAe3C,EAAOxS,QACU,eAA/BwS,EAAO2C,GAAY,GAAGvH,OACW,SAAnC4E,EAAO2C,EAAa,GAAG,GAAGvH,KAC1B,CACA,MAAMvF,EAAOmK,EAAO2C,EAAa,GAAG,GAC9BgC,EAAS/B,EAAQrB,YAAY1L,GACnC,IAKI+O,EALAtU,EAAQqU,EAAOnX,OACfqX,GAAe,EACf1G,EAAO,EAKX,KAAO7N,KAAS,CACd,MAAMwU,EAAQH,EAAOrU,GAErB,GAAqB,kBAAVwU,EAAoB,CAG7B,IAFAD,EAAcC,EAAMtX,OAEyB,KAAtCsX,EAAM1R,WAAWyR,EAAc,IACpC1G,IACA0G,IAGF,GAAIA,EAAa,MACjBA,GAAe,OAEZ,IAAe,IAAXC,EACPF,GAAO,EACPzG,SACK,IAAe,IAAX2G,EAEJ,CAELxU,IACA,OAIJ,GAAI6N,EAAM,CACR,MAAMa,EAAQ,CACZ5D,KACEuH,IAAe3C,EAAOxS,QAAUoX,GAAQzG,EAAO,EAC3C,aACA,oBACN3M,MAAO,CACLH,KAAMwE,EAAKpE,IAAIJ,KACfC,OAAQuE,EAAKpE,IAAIH,OAAS6M,EAC1B4C,OAAQlL,EAAKpE,IAAIsP,OAAS5C,EAC1B4G,OAAQlP,EAAKrE,MAAMuT,OAASzU,EAC5B0U,aAAc1U,EACVuU,EACAhP,EAAKrE,MAAMwT,aAAeH,GAEhCpT,IAAKpG,OAAOsO,OAAO,GAAI9D,EAAKpE,MAE9BoE,EAAKpE,IAAMpG,OAAOsO,OAAO,GAAIqF,EAAMxN,OAE/BqE,EAAKrE,MAAMuP,SAAWlL,EAAKpE,IAAIsP,OACjC1V,OAAOsO,OAAO9D,EAAMmJ,IAEpBgB,EAAOnE,OACL8G,EACA,EACA,CAAC,QAAS3D,EAAO4D,GACjB,CAAC,OAAQ5D,EAAO4D,IAElBD,GAAc,GAIlBA,IAIJ,OAAO3C,EAkBT,SAASgE,GAAWnF,EAAYmB,EAAQ4C,GAEtC,MAAMlL,EAAS,GACf,IAAIpH,GAAS,EAEb,OAASA,EAAQuO,EAAWrR,QAAQ,CAClC,MAAMkN,EAAUmE,EAAWvO,GAAO0T,WAE9BtJ,IAAYhD,EAAOvB,SAASuE,KAC9BsF,EAAStF,EAAQsF,EAAQ4C,GACzBlL,EAAO3M,KAAK2P,IAIhB,OAAOsF,EA+CT,SAASiF,GAAgBrG,EAAQsG,EAAYhJ,GAE3C,IAAI/K,EAAQ9F,OAAOsO,OACjBuC,EACI7Q,OAAOsO,OAAO,GAAIuC,GAClB,CACE7K,KAAM,EACNC,OAAQ,EACRyP,OAAQ,GAEd,CACEgE,OAAQ,EACRC,cAAe,IAKnB,MAAMG,EAAc,GAGdC,EAAuB,GAG7B,IAAIT,EAAS,GAGTtS,EAAQ,GAGRgT,GAAW,EAOf,MAAMtH,EAAU,CACdO,QA2IF,SAAiBzK,GACX0J,GAAmB1J,IACrB1C,EAAME,OACNF,EAAMG,OAAS,EACfH,EAAM4P,SAAoB,IAAVlN,EAAc,EAAI,EAClCyR,MACmB,IAAVzR,IACT1C,EAAMG,SACNH,EAAM4P,UAGJ5P,EAAM6T,aAAe,EACvB7T,EAAM4T,UAEN5T,EAAM6T,eAIF7T,EAAM6T,eAAiBL,EAAOxT,EAAM4T,QAAQvX,SAC9C2D,EAAM6T,cAAgB,EACtB7T,EAAM4T,WAIVnC,EAAQ7D,SAAWlL,EAEnBwR,GAAW,GApKXjH,MAwKF,SAAehD,EAAMmK,GAGnB,MAAMvG,EAAQuG,GAAU,GAKxB,OAJAvG,EAAM5D,KAAOA,EACb4D,EAAMxN,MAAQsP,IACd8B,EAAQ5C,OAAOjV,KAAK,CAAC,QAASiU,EAAO4D,IACrCvQ,EAAMtH,KAAKiU,GACJA,GA/KPT,KAmLF,SAAcnD,GACZ,MAAM4D,EAAQ3M,EAAMiF,MAGpB,OAFA0H,EAAMvN,IAAMqP,IACZ8B,EAAQ5C,OAAOjV,KAAK,CAAC,OAAQiU,EAAO4D,IAC7B5D,GAtLPL,QAAS6G,GA8LX,SAA+BC,EAAWC,GACxCC,EAAUF,EAAWC,EAAKxJ,SA9L1BuE,MAAO+E,EAAiBI,GACxBrF,UAAWiF,EAAiBI,EAAmB,CAC7CrF,WAAW,KASTqC,EAAU,CACd7D,SAAU,KACVlL,KAAM,KACN4L,eAAgB,GAChBO,OAAQ,GACRpB,OAAAA,EACA2C,YAAAA,EACAqC,eA6CF,SAAwB5E,EAAO6G,GAC7B,OAsYJ,SAAyBlB,EAAQkB,GAC/B,IAAIvV,GAAS,EAGb,MAAM8D,EAAS,GAGf,IAAI0R,EAEJ,OAASxV,EAAQqU,EAAOnX,QAAQ,CAC9B,MAAMsX,EAAQH,EAAOrU,GAGrB,IAAIzD,EAEJ,GAAqB,kBAAViY,EACTjY,EAAQiY,OAER,OAAQA,GACN,KAAM,EACJjY,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQgZ,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAcC,EAAO,SAC1BjZ,EAAQ,IACR,MAGF,QAEEA,EAAQuN,OAAOyD,aAAaiH,GAIlCgB,GAAmB,IAAXhB,EACR1Q,EAAOrJ,KAAK8B,GAGd,OAAOuH,EAAON,KAAK,IA7bViS,CAAgBxE,EAAYvC,GAAQ6G,IA7C3C/E,IAAAA,EACAU,WA0DF,SAAoB3U,GAClBsY,EAAYtY,EAAMwE,MAAQxE,EAAMyE,OAChCgU,KA3DA7D,MAwBF,SAAejR,GAIb,GAHAmU,EAAS5Z,EAAK4Z,EAAQnU,GACtBwV,IAEkC,OAA9BrB,EAAOA,EAAOnX,OAAS,GACzB,MAAO,GAMT,OAHAmY,EAAUT,EAAY,GAEtBtC,EAAQ5C,OAASgE,GAAWoB,EAAsBxC,EAAQ5C,OAAQ4C,GAC3DA,EAAQ5C,SA3BjB,IAOIiG,EAPAC,EAAQhB,EAAWzG,SAASzS,KAAK4W,EAAS7E,GAa9C,OAJImH,EAAWlB,YACboB,EAAqBra,KAAKma,GAGrBtC,EA0BP,SAASrB,EAAYvC,GACnB,OA6VJ,SAAqB2F,EAAQ3F,GAC3B,MAAMmH,EAAanH,EAAMxN,MAAMuT,OACzBqB,EAAmBpH,EAAMxN,MAAMwT,aAC/BqB,EAAWrH,EAAMvN,IAAIsT,OACrBuB,EAAiBtH,EAAMvN,IAAIuT,aAGjC,IAAIuB,EAEAJ,IAAeE,EAEjBE,EAAO,CAAC5B,EAAOwB,GAAY3V,MAAM4V,EAAkBE,KAEnDC,EAAO5B,EAAOnU,MAAM2V,EAAYE,GAE5BD,GAAoB,IAEtBG,EAAK,GAAKA,EAAK,GAAG/V,MAAM4V,IAGtBE,EAAiB,GAEnBC,EAAKxb,KAAK4Z,EAAO0B,GAAU7V,MAAM,EAAG8V,KAIxC,OAAOC,EAvXEC,CAAY7B,EAAQ3F,GAI7B,SAAS8B,IACP,OAAOzV,OAAOsO,OAAO,GAAIxI,GAsB3B,SAAS6U,IAEP,IAAIS,EAEJ,KAAOtV,EAAM4T,OAASJ,EAAOnX,QAAQ,CACnC,MAAMsX,EAAQH,EAAOxT,EAAM4T,QAE3B,GAAqB,kBAAVD,EAOT,IANA2B,EAAatV,EAAM4T,OAEf5T,EAAM6T,aAAe,IACvB7T,EAAM6T,aAAe,GAIrB7T,EAAM4T,SAAW0B,GACjBtV,EAAM6T,aAAeF,EAAMtX,QAE3BkZ,EAAG5B,EAAM1R,WAAWjC,EAAM6T,oBAG5B0B,EAAG5B,IAWT,SAAS4B,EAAG7S,GACVwR,OAAWnT,EACX+T,EAAepS,EACfqS,EAAQA,EAAMrS,GAmEhB,SAAS+R,EAAkBe,EAAGjB,GAC5BA,EAAKkB,UASP,SAASpB,EAAiBqB,EAAUtB,GAClC,OAWA,SAAc1G,EAAYiI,EAAaC,GAErC,IAAIC,EAGAC,EAGA7G,EAGAsF,EACJ,OAAO3Z,MAAMF,QAAQgT,GAEjBqI,EAAuBrI,GACvB,aAAcA,EACdqI,EAAuB,CAACrI,IAS5B,SAA+B5I,GAC7B,OAAOzE,EAGP,SAASA,EAAMqC,GACb,MAAMsT,EAAe,OAATtT,GAAiBoC,EAAIpC,GAC3ByI,EAAe,OAATzI,GAAiBoC,EAAI4L,KAQjC,OAAOqF,EAPM,IAIPnb,MAAMF,QAAQsb,GAAOA,EAAMA,EAAM,CAACA,GAAO,MACzCpb,MAAMF,QAAQyQ,GAAOA,EAAMA,EAAM,CAACA,GAAO,IAExC4K,CAA6BrT,IAtBpCuT,CAAsBvI,GAgC1B,SAASqI,EAAuBpL,GAI9B,OAHAkL,EAAmBlL,EACnBmL,EAAiB,EAEG,IAAhBnL,EAAKtO,OACAuZ,EAGFM,EAAgBvL,EAAKmL,IAS9B,SAASI,EAAgB5B,GACvB,OAGA,SAAe5R,GAKb6R,EA4ER,WACE,MAAM4B,EAAaxG,IACbyG,EAAgB3E,EAAQ7D,SACxByI,EAAwB5E,EAAQxC,iBAChCqH,EAAmB7E,EAAQ5C,OAAOxS,OAClCka,EAAa3b,MAAMmQ,KAAK7J,GAC9B,MAAO,CACLuU,QAAAA,EACA1K,KAAMuL,GAQR,SAASb,IACPzV,EAAQmW,EACR1E,EAAQ7D,SAAWwI,EACnB3E,EAAQxC,iBAAmBoH,EAC3B5E,EAAQ5C,OAAOxS,OAASia,EACxBpV,EAAQqV,EACRpC,KAlGWqC,GACPvH,EAAmBqF,EAEdA,EAAU1D,UACba,EAAQxC,iBAAmBqF,GAG7B,GACEA,EAAU/Y,MACVkW,EAAQhE,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAASsP,EAAU/Y,MAE1D,OAAOiV,EAAI9N,GAGb,OAAO4R,EAAUhH,SAASzS,KAIxBuZ,EAASla,OAAOsO,OAAOtO,OAAOuc,OAAOhF,GAAU2C,GAAU3C,EACzD7E,EACAC,EACA2D,EAPK8D,CAQL5R,IAKN,SAASmK,EAAGnK,GAGV,OAFAwR,GAAW,EACXwB,EAASzG,EAAkBsF,GACpBoB,EAIT,SAASnF,EAAI9N,GAIX,OAHAwR,GAAW,EACXK,EAAKkB,YAECK,EAAiBD,EAAiBxZ,OAC/B6Z,EAAgBL,EAAiBC,IAGnCF,IAUb,SAASpB,EAAUF,EAAWvJ,GACxBuJ,EAAUzB,aAAeoB,EAAqBjP,SAASsP,IACzDL,EAAqBra,KAAK0a,GAGxBA,EAAU/K,SACZmB,EACE+G,EAAQ5C,OACR9D,EACA0G,EAAQ5C,OAAOxS,OAAS0O,EACxBuJ,EAAU/K,QAAQkI,EAAQ5C,OAAOxP,MAAM0L,GAAO0G,IAI9C6C,EAAUoC,YACZjF,EAAQ5C,OAASyF,EAAUoC,UAAUjF,EAAQ5C,OAAQ4C,IAyCzD,SAAS0C,IACHnU,EAAME,QAAQ8T,GAAehU,EAAMG,OAAS,IAC9CH,EAAMG,OAAS6T,EAAYhU,EAAME,MACjCF,EAAM4P,QAAUoE,EAAYhU,EAAME,MAAQ,IAqHhD,MAAMyW,GAA+B,CACnCpb,KAAM,gBACN+R,SAIF,SAA+BV,EAASC,EAAI2D,GAC1C,IAGIoG,EAHA5J,EAAO,EAIX,OAGA,SAAetK,GAGb,OAFAkK,EAAQK,MAAM,iBACd2J,EAASlU,EACF2Q,EAAQ3Q,IAIjB,SAAS2Q,EAAQ3Q,GACf,OAAIA,IAASkU,GACXhK,EAAQK,MAAM,yBACP4J,EAASnU,IAGd2J,GAAc3J,GACTiK,GAAaC,EAASyG,EAAS,aAA/B1G,CAA6CjK,GAGlDsK,EAAO,GAAe,OAATtK,IAAkB0J,GAAmB1J,GAC7C8N,EAAI9N,IAGbkK,EAAQQ,KAAK,iBACNP,EAAGnK,IAIZ,SAASmU,EAASnU,GAChB,OAAIA,IAASkU,GACXhK,EAAQO,QAAQzK,GAChBsK,IACO6J,IAGTjK,EAAQQ,KAAK,yBACNiG,EAAQ3Q,OAwBnB,MAAMoU,GAAY,CAChBvb,KAAM,OACN+R,SAuBF,SAA2BV,EAASC,EAAI2D,GACtC,MAAMxC,EAAOhN,KACPwR,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAC9C,IAAI0a,EACFvE,GAAyB,eAAjBA,EAAK,GAAGvI,KACZuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,OACtC,EACF2Q,EAAO,EACX,OAGA,SAAetK,GACb,MAAMsU,EACJhJ,EAAKM,eAAerE,OACV,KAATvH,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATsU,GACKhJ,EAAKM,eAAesI,QAAUlU,IAASsL,EAAKM,eAAesI,OAC5D/K,EAAWnJ,GACf,CAQA,GAPKsL,EAAKM,eAAerE,OACvB+D,EAAKM,eAAerE,KAAO+M,EAC3BpK,EAAQK,MAAM+J,EAAM,CAClBzF,YAAY,KAIH,kBAATyF,EAEF,OADApK,EAAQK,MAAM,kBACE,KAATvK,GAAwB,KAATA,EAClBkK,EAAQ0C,MAAMqH,GAA8BnG,EAAKyG,EAAjDrK,CAA2DlK,GAC3DuU,EAASvU,GAGf,IAAKsL,EAAKoB,WAAsB,KAAT1M,EAGrB,OAFAkK,EAAQK,MAAM,kBACdL,EAAQK,MAAM,iBACPiK,EAAOxU,GAIlB,OAAO8N,EAAI9N,IAIb,SAASwU,EAAOxU,GACd,OAAImJ,EAAWnJ,MAAWsK,EAAO,IAC/BJ,EAAQO,QAAQzK,GACTwU,KAILlJ,EAAKoB,WAAapC,EAAO,KAC1BgB,EAAKM,eAAesI,OACjBlU,IAASsL,EAAKM,eAAesI,OACpB,KAATlU,GAAwB,KAATA,IAEnBkK,EAAQQ,KAAK,iBACN6J,EAASvU,IAGX8N,EAAI9N,GAMb,SAASuU,EAASvU,GAKhB,OAJAkK,EAAQK,MAAM,kBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,kBACbY,EAAKM,eAAesI,OAAS5I,EAAKM,eAAesI,QAAUlU,EACpDkK,EAAQ0C,MACbqB,GACA3C,EAAKoB,UAAYoB,EAAM2G,EACvBvK,EAAQY,QACN4J,GACAC,EACAC,IAMN,SAASH,EAAQzU,GAGf,OAFAsL,EAAKM,eAAeiJ,kBAAmB,EACvCR,IACOM,EAAY3U,GAIrB,SAAS4U,EAAY5U,GACnB,OAAI2J,GAAc3J,IAChBkK,EAAQK,MAAM,4BACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,4BACNiK,GAGF7G,EAAI9N,GAIb,SAAS2U,EAAY3U,GAInB,OAHAsL,EAAKM,eAAetB,KAClB+J,EACA/I,EAAKyE,eAAe7F,EAAQQ,KAAK,mBAAmB,GAAM/Q,OACrDwQ,EAAGnK,KApIZ6L,aAAc,CACZjB,SA2IJ,SAAkCV,EAASC,EAAI2D,GAC7C,MAAMxC,EAAOhN,KAEb,OADAgN,EAAKM,eAAeI,gBAAa3N,EAC1B6L,EAAQ0C,MAAMqB,IAGrB,SAAiBjO,GAMf,OALAsL,EAAKM,eAAekJ,kBAClBxJ,EAAKM,eAAekJ,mBACpBxJ,EAAKM,eAAeiJ,iBAGf5K,GACLC,EACAC,EACA,iBACAmB,EAAKM,eAAetB,KAAO,EAJtBL,CAKLjK,MAIJ,SAAkBA,GAChB,GAAIsL,EAAKM,eAAekJ,oBAAsBnL,GAAc3J,GAG1D,OAFAsL,EAAKM,eAAekJ,uBAAoBzW,EACxCiN,EAAKM,eAAeiJ,sBAAmBxW,EAChC0W,EAAiB/U,GAK1B,OAFAsL,EAAKM,eAAekJ,uBAAoBzW,EACxCiN,EAAKM,eAAeiJ,sBAAmBxW,EAChC6L,EAAQY,QAAQkK,GAAiB7K,EAAI4K,EAArC7K,CAAuDlK,MAIhE,SAAS+U,EAAiB/U,GAKxB,OAHAsL,EAAKM,eAAeI,YAAa,EAEjCV,EAAKoB,eAAYrO,EACV4L,GACLC,EACAA,EAAQY,QAAQsJ,GAAWjK,EAAI2D,GAC/B,aACAxC,EAAKP,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBACzCjE,EACA,EANC4L,CAOLjK,MAvLJ0K,KAuNF,SAAyBR,GACvBA,EAAQQ,KAAKpM,KAAKsN,eAAerE,QApN7BmN,GAAoC,CACxC9J,SA0NF,SAA0CV,EAASC,EAAI2D,GACrD,MAAMxC,EAAOhN,KACb,OAAO2L,GACLC,GASF,SAAqBlK,GACnB,MAAM8P,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAC9C,OAAQgQ,GAAc3J,IACpB8P,GACiB,6BAAjBA,EAAK,GAAGvI,KACN4C,EAAGnK,GACH8N,EAAI9N,KAbR,2BACAsL,EAAKP,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBACzCjE,EACA,IAjON6P,SAAS,GAIL8G,GAAkB,CACtBpK,SAoLF,SAAwBV,EAASC,EAAI2D,GACnC,MAAMxC,EAAOhN,KACb,OAAO2L,GACLC,GAOF,SAAqBlK,GACnB,MAAM8P,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAC9C,OAAOmW,GACY,mBAAjBA,EAAK,GAAGvI,MACRuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,SAAW2R,EAAKM,eAAetB,KACnEH,EAAGnK,GACH8N,EAAI9N,KAXR,iBACAsL,EAAKM,eAAetB,KAAO,IAzL7B4D,SAAS,GAoPX,MAAM+G,GAAyB,CAC7Bpc,KAAM,aACN+R,SAQF,SAAiCV,EAASC,EAAI2D,GAC5C,MAAMxC,EAAOhN,KACb,OAGA,SAAe0B,GACb,GAAa,KAATA,EAAa,CACf,MAAMqS,EAAQ/G,EAAKM,eAanB,OAXKyG,EAAM6C,OACThL,EAAQK,MAAM,aAAc,CAC1BsE,YAAY,IAEdwD,EAAM6C,MAAO,GAGfhL,EAAQK,MAAM,oBACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,oBACNyK,EAGT,OAAOrH,EAAI9N,IAIb,SAASmV,EAAMnV,GACb,OAAI2J,GAAc3J,IAChBkK,EAAQK,MAAM,8BACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,8BACbR,EAAQQ,KAAK,oBACNP,IAGTD,EAAQQ,KAAK,oBACNP,EAAGnK,MA5CZ6L,aAAc,CACZjB,SAgDJ,SAAwCV,EAASC,EAAI2D,GACnD,OAAO7D,GACLC,EACAA,EAAQY,QAAQmK,GAAwB9K,EAAI2D,GAC5C,aACAxP,KAAKyM,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBAAkBjE,EAAY,KAnD7EqM,KAwDF,SAA0BR,GACxBA,EAAQQ,KAAK,gBAuBf,SAAS0K,GACPlL,EACAC,EACA2D,EACAvG,EACA8N,EACAC,EACAC,EACAC,EACApL,GAEA,MAAMC,EAAQD,GAAO5E,OAAOC,kBAC5B,IAAIgQ,EAAU,EACd,OAGA,SAAezV,GACb,GAAa,KAATA,EAMF,OALAkK,EAAQK,MAAMhD,GACd2C,EAAQK,MAAM8K,GACdnL,EAAQK,MAAM+K,GACdpL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK4K,GACNI,EAGT,GAAa,OAAT1V,GAA0B,KAATA,GAAewJ,EAAaxJ,GAC/C,OAAO8N,EAAI9N,GASb,OANAkK,EAAQK,MAAMhD,GACd2C,EAAQK,MAAMgL,GACdrL,EAAQK,MAAMiL,GACdtL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERuK,EAAe3V,IAIxB,SAAS0V,EAA0B1V,GACjC,OAAa,KAATA,GACFkK,EAAQK,MAAM+K,GACdpL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK4K,GACbpL,EAAQQ,KAAK2K,GACbnL,EAAQQ,KAAKnD,GACN4C,IAGTD,EAAQK,MAAMiL,GACdtL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERwK,EAAoB5V,IAI7B,SAAS4V,EAAoB5V,GAC3B,OAAa,KAATA,GACFkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK8K,GACNE,EAA0B1V,IAGtB,OAATA,GAA0B,KAATA,GAAe0J,GAAmB1J,GAC9C8N,EAAI9N,IAGbkK,EAAQO,QAAQzK,GACA,KAATA,EAAc6V,EAA4BD,GAInD,SAASC,EAA0B7V,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkK,EAAQO,QAAQzK,GACT4V,GAGFA,EAAoB5V,GAI7B,SAAS2V,EAAe3V,GACtB,OAAa,KAATA,IACIyV,EAAUpL,EAAcyD,EAAI9N,IAClCkK,EAAQO,QAAQzK,GACT2V,GAGI,KAAT3V,EACGyV,KAQLvL,EAAQO,QAAQzK,GACT2V,IARLzL,EAAQQ,KAAK,eACbR,EAAQQ,KAAK8K,GACbtL,EAAQQ,KAAK6K,GACbrL,EAAQQ,KAAKnD,GACN4C,EAAGnK,IAOD,OAATA,GAAiByJ,GAA0BzJ,GACzCyV,EAAgB3H,EAAI9N,IACxBkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK8K,GACbtL,EAAQQ,KAAK6K,GACbrL,EAAQQ,KAAKnD,GACN4C,EAAGnK,IAGRwJ,EAAaxJ,GAAc8N,EAAI9N,IACnCkK,EAAQO,QAAQzK,GACA,KAATA,EAAc8V,EAAuBH,GAI9C,SAASG,EAAqB9V,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkK,EAAQO,QAAQzK,GACT2V,GAGFA,EAAe3V,IAuB1B,SAAS+V,GAAa7L,EAASC,EAAI2D,EAAKvG,EAAMyO,EAAYR,GACxD,MAAMlK,EAAOhN,KACb,IAGI0D,EAHAsI,EAAO,EAIX,OAGA,SAAetK,GAMb,OALAkK,EAAQK,MAAMhD,GACd2C,EAAQK,MAAMyL,GACd9L,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAKsL,GACb9L,EAAQK,MAAMiL,GACP7E,GAIT,SAASA,EAAQ3Q,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBgC,GAQP,KAAThC,IACEsK,GACD,2BAA4BgB,EAAKP,OAAOC,YAC1CV,EAAO,IAEAwD,EAAI9N,GAGA,KAATA,GACFkK,EAAQQ,KAAK8K,GACbtL,EAAQK,MAAMyL,GACd9L,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAKsL,GACb9L,EAAQQ,KAAKnD,GACN4C,GAGLT,GAAmB1J,IACrBkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNiG,IAGTzG,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAER6K,EAAMjW,IAIf,SAASiW,EAAMjW,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACA0J,GAAmB1J,IACnBsK,IAAS,KAETJ,EAAQQ,KAAK,eACNiG,EAAQ3Q,KAGjBkK,EAAQO,QAAQzK,GAChBgC,EAAOA,IAAS2H,GAAc3J,GACd,KAATA,EAAckW,EAAcD,GAIrC,SAASC,EAAYlW,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkK,EAAQO,QAAQzK,GAChBsK,IACO2L,GAGFA,EAAMjW,IAuBjB,SAASmW,GAAajM,EAASC,EAAI2D,EAAKvG,EAAMyO,EAAYR,GAExD,IAAItB,EACJ,OAGA,SAAelU,GAMb,OALAkK,EAAQK,MAAMhD,GACd2C,EAAQK,MAAMyL,GACd9L,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAKsL,GACb9B,EAAkB,KAATlU,EAAc,GAAKA,EACrBoW,GAIT,SAASA,EAAkBpW,GACzB,OAAIA,IAASkU,GACXhK,EAAQK,MAAMyL,GACd9L,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAKsL,GACb9L,EAAQQ,KAAKnD,GACN4C,IAGTD,EAAQK,MAAMiL,GACPa,EAAarW,IAItB,SAASqW,EAAarW,GACpB,OAAIA,IAASkU,GACXhK,EAAQQ,KAAK8K,GACNY,EAAkBlC,IAGd,OAATlU,EACK8N,EAAI9N,GAGT0J,GAAmB1J,IACrBkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNT,GAAaC,EAASmM,EAAc,gBAG7CnM,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERkL,EAAMtW,IAIf,SAASsW,EAAMtW,GACb,OAAIA,IAASkU,GAAmB,OAATlU,GAAiB0J,GAAmB1J,IACzDkK,EAAQQ,KAAK,eACN2L,EAAarW,KAGtBkK,EAAQO,QAAQzK,GACA,KAATA,EAAcuW,EAAcD,GAIrC,SAASC,EAAYvW,GACnB,OAAIA,IAASkU,GAAmB,KAATlU,GACrBkK,EAAQO,QAAQzK,GACTsW,GAGFA,EAAMtW,IAgBjB,SAASwW,GAAkBtM,EAASC,GAElC,IAAI0D,EACJ,OAGA,SAASlQ,EAAMqC,GACb,GAAI0J,GAAmB1J,GAKrB,OAJAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACbmD,GAAO,EACAlQ,EAGT,GAAIgM,GAAc3J,GAChB,OAAOiK,GACLC,EACAvM,EACAkQ,EAAO,aAAe,aAHjB5D,CAILjK,GAGJ,OAAOmK,EAAGnK,IAWd,SAASyW,GAAoBzd,GAC3B,OACEA,EACG0d,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlB9Z,cACA+Z,cAmBP,MAAMC,GAAwB,CAC5B/d,KAAM,aACN+R,SAUF,SAA4BV,EAASC,EAAI2D,GACvC,MAAMxC,EAAOhN,KAGb,IAAIuY,EACJ,OAGA,SAAe7W,GAEb,OADAkK,EAAQK,MAAM,cACPwL,GAAa5d,KAClBmT,EACApB,EACA4M,EACAhJ,EACA,kBACA,wBACA,wBAPKiI,CAQL/V,IAIJ,SAAS8W,EAAW9W,GAKlB,OAJA6W,EAAaJ,GACXnL,EAAKyE,eAAezE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAAG,IAAIgD,MAAM,GAAI,IAG3D,KAATqD,GACFkK,EAAQK,MAAM,oBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,oBAEN8L,GACLtM,EACAkL,GACElL,EACAA,EAAQY,QACNiM,GACA9M,GAAaC,EAASiL,EAAO,cAC7BlL,GAAaC,EAASiL,EAAO,eAE/BrH,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAI9N,GAIb,SAASmV,EAAMnV,GACb,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,cAERY,EAAKP,OAAOiM,QAAQ1U,SAASuU,IAChCvL,EAAKP,OAAOiM,QAAQ9f,KAAK2f,GAGpB1M,EAAGnK,IAGL8N,EAAI9N,MAxET+W,GAAiB,CACrBnM,SA4EF,SAAuBV,EAASC,EAAI2D,GAClC,OAGA,SAAe9N,GACb,OAAOyJ,GAA0BzJ,GAC7BwW,GAAkBtM,EAASlB,EAA3BwN,CAAmCxW,GACnC8N,EAAI9N,IAIV,SAASgJ,EAAOhJ,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBmW,GACLjM,EACAD,GAAaC,EAASiL,EAAO,cAC7BrH,EACA,kBACA,wBACA,wBANKqI,CAOLnW,GAGG8N,EAAI9N,GAIb,SAASmV,EAAMnV,GACb,OAAgB,OAATA,GAAiB0J,GAAmB1J,GAAQmK,EAAGnK,GAAQ8N,EAAI9N,KAvGpEkO,SAAS,GAuHX,MAAM+I,GAAe,CACnBpe,KAAM,eACN+R,SAUF,SAA8BV,EAASC,EAAI2D,GACzC,MAAMxC,EAAOhN,KACb,OAGA,SAAe0B,GAEb,OADAkK,EAAQK,MAAM,gBACPN,GAAaC,EAASgN,EAAkB,aAAc,EAAtDjN,CAA6DjK,IAItE,SAASkX,EAAiBlX,GACxB,MAAM8P,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAC9C,OAAOmW,GACY,eAAjBA,EAAK,GAAGvI,MACRuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,QAAU,EAC9Cwd,EAAYnX,GACZ8N,EAAI9N,GAIV,SAASmX,EAAYnX,GACnB,OAAa,OAATA,EACKmV,EAAMnV,GAGX0J,GAAmB1J,GACdkK,EAAQY,QAAQsM,GAAiBD,EAAahC,EAA9CjL,CAAqDlK,IAG9DkK,EAAQK,MAAM,iBACP8M,EAAQrX,IAIjB,SAASqX,EAAQrX,GACf,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,iBACNyM,EAAYnX,KAGrBkK,EAAQO,QAAQzK,GACTqX,GAIT,SAASlC,EAAMnV,GAEb,OADAkK,EAAQQ,KAAK,gBACNP,EAAGnK,MAtDRoX,GAAkB,CACtBxM,SA0DF,SAAiCV,EAASC,EAAI2D,GAC5C,MAAMxC,EAAOhN,KACb,OAAOX,EAGP,SAASA,EAAMqC,GAEb,OAAIsL,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,MACvBsQ,EAAI9N,GAGT0J,GAAmB1J,IACrBkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACN/M,GAGFsM,GAAaC,EAASiN,EAAa,aAAc,EAAjDlN,CAAwDjK,GAIjE,SAASmX,EAAYnX,GACnB,MAAM8P,EAAOxE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAC9C,OAAOmW,GACY,eAAjBA,EAAK,GAAGvI,MACRuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,QAAU,EAC9CwQ,EAAGnK,GACH0J,GAAmB1J,GACnBrC,EAAMqC,GACN8N,EAAI9N,KAvFVkO,SAAS,GAwPX,MAAMoJ,GAAkB,CACtBze,KAAM,kBACN+R,SA+DF,SAAiCV,EAASC,EAAI2D,GAC5C,MAAMxC,EAAOhN,KACb,IAGI4V,EAGAqD,EANA9a,EAAQ6O,EAAKa,OAAOxS,OAQxB,KAAO8C,KAGL,GACiC,eAA/B6O,EAAKa,OAAO1P,GAAO,GAAG8K,MACS,eAA/B+D,EAAKa,OAAO1P,GAAO,GAAG8K,MACS,YAA/B+D,EAAKa,OAAO1P,GAAO,GAAG8K,KACtB,CACAgQ,EAA2C,cAA/BjM,EAAKa,OAAO1P,GAAO,GAAG8K,KAClC,MAIJ,OAGA,SAAevH,GACb,IAAKsL,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,QAAU8N,EAAKoB,WAAa6K,GAI3D,OAHArN,EAAQK,MAAM,qBACdL,EAAQK,MAAM,6BACd2J,EAASlU,EACFwX,EAAgBxX,GAGzB,OAAO8N,EAAI9N,IAIb,SAASwX,EAAgBxX,GACvB,OAAIA,IAASkU,GACXhK,EAAQO,QAAQzK,GACTwX,IAGTtN,EAAQQ,KAAK,6BACNT,GAAaC,EAASuN,EAAoB,aAA1CxN,CAAwDjK,IAIjE,SAASyX,EAAmBzX,GAC1B,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,qBACNP,EAAGnK,IAGL8N,EAAI9N,KArHbgU,UAIF,SAAkC7H,EAAQ4C,GACxC,IAGIsI,EAGA5G,EAGAiH,EATAjb,EAAQ0P,EAAOxS,OAYnB,KAAO8C,KACL,GAAyB,UAArB0P,EAAO1P,GAAO,GAAgB,CAChC,GAA8B,YAA1B0P,EAAO1P,GAAO,GAAG8K,KAAoB,CACvC8P,EAAU5a,EACV,MAG4B,cAA1B0P,EAAO1P,GAAO,GAAG8K,OACnBkJ,EAAOhU,OAIqB,YAA1B0P,EAAO1P,GAAO,GAAG8K,MAEnB4E,EAAOnE,OAAOvL,EAAO,GAGlBib,GAAwC,eAA1BvL,EAAO1P,GAAO,GAAG8K,OAClCmQ,EAAajb,GAKnB,MAAMkb,EAAU,CACdpQ,KAAM,gBACN5J,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAOsE,GAAM,GAAG9S,OACzCC,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAOA,EAAOxS,OAAS,GAAG,GAAGiE,MAGtDuO,EAAOsE,GAAM,GAAGlJ,KAAO,oBAGnBmQ,GACFvL,EAAOnE,OAAOyI,EAAM,EAAG,CAAC,QAASkH,EAAS5I,IAC1C5C,EAAOnE,OAAO0P,EAAa,EAAG,EAAG,CAAC,OAAQvL,EAAOkL,GAAS,GAAItI,IAC9D5C,EAAOkL,GAAS,GAAGzZ,IAAMpG,OAAOsO,OAAO,GAAIqG,EAAOuL,GAAY,GAAG9Z,MAEjEuO,EAAOkL,GAAS,GAAKM,EAIvB,OADAxL,EAAOjV,KAAK,CAAC,OAAQygB,EAAS5I,IACvB5C,IA0ET,MAAMyL,GAAiB,CACrB,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaIC,GAAe,CAAC,MAAO,SAAU,QAAS,YAe1CC,GAAW,CACfjf,KAAM,WACN+R,SAkCF,SAA0BV,EAASC,EAAI2D,GACrC,MAAMxC,EAAOhN,KAGb,IAAIgW,EAGAyD,EAGAC,EAGAvb,EAGAyX,EACJ,OAGA,SAAelU,GAIb,OAHAkK,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQzK,GACTkV,GAIT,SAASA,EAAKlV,GACZ,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTiY,GAGI,KAATjY,GACFkK,EAAQO,QAAQzK,GACTkY,GAGI,KAATlY,GACFkK,EAAQO,QAAQzK,GAChBsU,EAAO,EAGAhJ,EAAKoB,UAAYvC,EAAKgO,GAG3BlP,EAAWjJ,IACbkK,EAAQO,QAAQzK,GAChBgY,EAASzR,OAAOyD,aAAahK,GAC7B+X,GAAW,EACJK,GAGFtK,EAAI9N,GAIb,SAASiY,EAAiBjY,GACxB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBsU,EAAO,EACA+D,GAGI,KAATrY,GACFkK,EAAQO,QAAQzK,GAChBsU,EAAO,EACP0D,EAAS,SACTvb,EAAQ,EACD6b,GAGLrP,EAAWjJ,IACbkK,EAAQO,QAAQzK,GAChBsU,EAAO,EACAhJ,EAAKoB,UAAYvC,EAAKgO,GAGxBrK,EAAI9N,GAIb,SAASqY,EAAkBrY,GACzB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTsL,EAAKoB,UAAYvC,EAAKgO,GAGxBrK,EAAI9N,GAIb,SAASsY,EAAgBtY,GACvB,OAAIA,IAASgY,EAAOzY,WAAW9C,MAC7ByN,EAAQO,QAAQzK,GACTvD,IAAUub,EAAOre,OACpB2R,EAAKoB,UACHvC,EACA0B,EACFyM,GAGCxK,EAAI9N,GAIb,SAASkY,EAAclY,GACrB,OAAIiJ,EAAWjJ,IACbkK,EAAQO,QAAQzK,GAChBgY,EAASzR,OAAOyD,aAAahK,GACtBoY,GAGFtK,EAAI9N,GAIb,SAASoY,EAAQpY,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAyJ,GAA0BzJ,GAGf,KAATA,GACA+X,GACAF,GAAavV,SAAS0V,EAAOpb,gBAE7B0X,EAAO,EACAhJ,EAAKoB,UAAYvC,EAAGnK,GAAQ6L,EAAa7L,IAG9C4X,GAAetV,SAAS0V,EAAOpb,gBACjC0X,EAAO,EAEM,KAATtU,GACFkK,EAAQO,QAAQzK,GACTuY,GAGFjN,EAAKoB,UAAYvC,EAAGnK,GAAQ6L,EAAa7L,KAGlDsU,EAAO,EAEAhJ,EAAKoB,YAAcpB,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,MAClDsQ,EAAI9N,GACJ+X,EACAS,EAA4BxY,GAC5ByY,EAAwBzY,IAGjB,KAATA,GAAeqJ,EAAkBrJ,IACnCkK,EAAQO,QAAQzK,GAChBgY,GAAUzR,OAAOyD,aAAahK,GACvBoY,GAGFtK,EAAI9N,GAIb,SAASuY,EAAiBvY,GACxB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTsL,EAAKoB,UAAYvC,EAAK0B,GAGxBiC,EAAI9N,GAIb,SAASyY,EAAwBzY,GAC/B,OAAI2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACTyY,GAGFC,EAAY1Y,GAIrB,SAASwY,EAA4BxY,GACnC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACT0Y,GAGI,KAAT1Y,GAAwB,KAATA,GAAeiJ,EAAWjJ,IAC3CkK,EAAQO,QAAQzK,GACT2Y,GAGLhP,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACTwY,GAGFE,EAAY1Y,GAIrB,SAAS2Y,EAAsB3Y,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAqJ,EAAkBrJ,IAElBkK,EAAQO,QAAQzK,GACT2Y,GAGFC,EAA2B5Y,GAIpC,SAAS4Y,EAA2B5Y,GAClC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACT6Y,GAGLlP,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACT4Y,GAGFJ,EAA4BxY,GAIrC,SAAS6Y,EAA6B7Y,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8N,EAAI9N,GAGA,KAATA,GAAwB,KAATA,GACjBkK,EAAQO,QAAQzK,GAChBkU,EAASlU,EACF8Y,GAGLnP,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACT6Y,IAGT3E,EAAS,KACF6E,EAA+B/Y,IAIxC,SAAS8Y,EAA6B9Y,GACpC,OAAa,OAATA,GAAiB0J,GAAmB1J,GAC/B8N,EAAI9N,GAGTA,IAASkU,GACXhK,EAAQO,QAAQzK,GACTgZ,IAGT9O,EAAQO,QAAQzK,GACT8Y,GAIT,SAASC,EAA+B/Y,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAyJ,GAA0BzJ,GAEnB4Y,EAA2B5Y,IAGpCkK,EAAQO,QAAQzK,GACT+Y,GAIT,SAASC,EAAkChZ,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAe2J,GAAc3J,GACvCwY,EAA4BxY,GAG9B8N,EAAI9N,GAIb,SAAS0Y,EAAY1Y,GACnB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTiZ,GAGFnL,EAAI9N,GAIb,SAASiZ,EAAcjZ,GACrB,OAAI2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACTiZ,GAGO,OAATjZ,GAAiB0J,GAAmB1J,GACvC6L,EAAa7L,GACb8N,EAAI9N,GAIV,SAAS6L,EAAa7L,GACpB,OAAa,KAATA,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACTkZ,GAGI,KAATlZ,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACTmZ,GAGI,KAATnZ,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACToZ,GAGI,KAATpZ,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACTmY,GAGI,KAATnY,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACTqZ,IAGL3P,GAAmB1J,IAAmB,IAATsU,GAAuB,IAATA,EAQlC,OAATtU,GAAiB0J,GAAmB1J,GAC/BsZ,EAAyBtZ,IAGlCkK,EAAQO,QAAQzK,GACT6L,GAZE3B,EAAQ0C,MACb2M,GACAH,EACAE,EAHKpP,CAILlK,GAYN,SAASsZ,EAAyBtZ,GAEhC,OADAkK,EAAQQ,KAAK,gBACN8O,EAAkBxZ,GAI3B,SAASwZ,EAAkBxZ,GACzB,OAAa,OAATA,EACKiE,EAAKjE,GAGV0J,GAAmB1J,GACdkK,EAAQY,QACb,CACEF,SAAU6O,EACVvL,SAAS,GAEXsL,EACAvV,EANKiG,CAOLlK,IAGJkK,EAAQK,MAAM,gBACPsB,EAAa7L,IAItB,SAASyZ,EAAYvP,EAASC,EAAI2D,GAChC,OAGA,SAAe9N,GAIb,OAHAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNO,GAIT,SAASA,EAAUjL,GACjB,OAAOsL,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,MAAQsQ,EAAI9N,GAAQmK,EAAGnK,IAK9D,SAASkZ,EAA0BlZ,GACjC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTmY,GAGFtM,EAAa7L,GAItB,SAASmZ,EAAuBnZ,GAC9B,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBgY,EAAS,GACF0B,GAGF7N,EAAa7L,GAItB,SAAS0Z,EAAsB1Z,GAC7B,OAAa,KAATA,GAAe6X,GAAavV,SAAS0V,EAAOpb,gBAC9CsN,EAAQO,QAAQzK,GACToZ,GAGLnQ,EAAWjJ,IAASgY,EAAOre,OAAS,GACtCuQ,EAAQO,QAAQzK,GAChBgY,GAAUzR,OAAOyD,aAAahK,GACvB0Z,GAGF7N,EAAa7L,GAItB,SAASqZ,EAAgCrZ,GACvC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTmY,GAGFtM,EAAa7L,GAItB,SAASmY,EAA8BnY,GACrC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACToZ,GAGI,KAATpZ,GAAwB,IAATsU,GACjBpK,EAAQO,QAAQzK,GACTmY,GAGFtM,EAAa7L,GAItB,SAASoZ,EAAkBpZ,GACzB,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,gBACNzG,EAAKjE,KAGdkK,EAAQO,QAAQzK,GACToZ,GAIT,SAASnV,EAAKjE,GAEZ,OADAkK,EAAQQ,KAAK,YACNP,EAAGnK,KA3gBZgU,UAWF,SAA2B7H,GACzB,IAAI1P,EAAQ0P,EAAOxS,OAEnB,KAAO8C,MACoB,UAArB0P,EAAO1P,GAAO,IAA4C,aAA1B0P,EAAO1P,GAAO,GAAG8K,QAKnD9K,EAAQ,GAAmC,eAA9B0P,EAAO1P,EAAQ,GAAG,GAAG8K,OAEpC4E,EAAO1P,GAAO,GAAGkB,MAAQwO,EAAO1P,EAAQ,GAAG,GAAGkB,MAE9CwO,EAAO1P,EAAQ,GAAG,GAAGkB,MAAQwO,EAAO1P,EAAQ,GAAG,GAAGkB,MAElDwO,EAAOnE,OAAOvL,EAAQ,EAAG,IAG3B,OAAO0P,GA5BPK,UAAU,GAIN+M,GAAqB,CACzB3O,SA0gBF,SAA2BV,EAASC,EAAI2D,GACtC,OAGA,SAAe9N,GAKb,OAJAkK,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,mBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,mBACNR,EAAQY,QAAQmD,GAAW9D,EAAI2D,KAlhBxCI,SAAS,GAiiBX,MAAMyL,GAAa,CACjB9gB,KAAM,aACN+R,SAKF,SAA4BV,EAASC,EAAI2D,GACvC,MAAMxC,EAAOhN,KAGPsb,EAAwB,CAC5BhP,SAuKF,SAA8BV,EAASC,EAAI2D,GACzC,IAAIxD,EAAO,EACX,OAAOL,GACLC,EACA2P,EACA,aACAvb,KAAKyM,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBACzCjE,EACA,GAIN,SAASwb,EAAqB7Z,GAG5B,OAFAkK,EAAQK,MAAM,mBACdL,EAAQK,MAAM,2BACPiN,EAAgBxX,GAIzB,SAASwX,EAAgBxX,GACvB,OAAIA,IAASkU,GACXhK,EAAQO,QAAQzK,GAChBsK,IACOkN,GAGLlN,EAAOwP,EAAiBhM,EAAI9N,IAChCkK,EAAQQ,KAAK,2BACNT,GAAaC,EAASuN,EAAoB,aAA1CxN,CAAwDjK,IAIjE,SAASyX,EAAmBzX,GAC1B,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,mBACNP,EAAGnK,IAGL8N,EAAI9N,KA5MbkO,SAAS,GAIL6L,EAAc,CAClBnP,SA8IF,SAA6BV,EAASC,EAAI2D,GACxC,MAAMxC,EAAOhN,KACb,OAAOX,EAGP,SAASA,EAAMqC,GAIb,OAHAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNO,EAIT,SAASA,EAAUjL,GACjB,OAAOsL,EAAKP,OAAOiC,KAAK1B,EAAK2B,MAAMzP,MAAQsQ,EAAI9N,GAAQmK,EAAGnK,KA3J5DkO,SAAS,GAEL4B,EAAOxR,KAAK6N,OAAO7N,KAAK6N,OAAOxS,OAAS,GACxCqgB,EACJlK,GAAyB,eAAjBA,EAAK,GAAGvI,KACZuI,EAAK,GAAGC,eAAeD,EAAK,IAAI,GAAMnW,OACtC,EACN,IAGIua,EAHA4F,EAAW,EAIf,OAGA,SAAe9Z,GAKb,OAJAkK,EAAQK,MAAM,cACdL,EAAQK,MAAM,mBACdL,EAAQK,MAAM,2BACd2J,EAASlU,EACFia,EAAaja,IAItB,SAASia,EAAaja,GACpB,OAAIA,IAASkU,GACXhK,EAAQO,QAAQzK,GAChB8Z,IACOG,IAGT/P,EAAQQ,KAAK,2BACNoP,EAAW,EACdhM,EAAI9N,GACJiK,GAAaC,EAASgQ,EAAU,aAAhCjQ,CAA8CjK,IAIpD,SAASka,EAASla,GAChB,OAAa,OAATA,GAAiB0J,GAAmB1J,GAC/Bma,EAAUna,IAGnBkK,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERyG,EAAK7R,IAId,SAAS6R,EAAK7R,GACZ,OAAa,OAATA,GAAiByJ,GAA0BzJ,IAC7CkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACNT,GAAaC,EAASkQ,EAAW,aAAjCnQ,CAA+CjK,IAG3C,KAATA,GAAeA,IAASkU,EAAepG,EAAI9N,IAC/CkK,EAAQO,QAAQzK,GACT6R,GAIT,SAASuI,EAAUpa,GACjB,OAAa,OAATA,GAAiB0J,GAAmB1J,GAC/Bma,EAAUna,IAGnBkK,EAAQK,MAAM,uBACdL,EAAQK,MAAM,cAAe,CAC3Ba,YAAa,WAERiP,EAAKra,IAId,SAASqa,EAAKra,GACZ,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,uBACNyP,EAAUna,IAGN,KAATA,GAAeA,IAASkU,EAAepG,EAAI9N,IAC/CkK,EAAQO,QAAQzK,GACTqa,GAIT,SAASF,EAAUna,GAEjB,OADAkK,EAAQQ,KAAK,mBACNY,EAAKoB,UAAYvC,EAAGnK,GAAQ6K,EAAa7K,GAIlD,SAAS6K,EAAa7K,GACpB,OAAa,OAATA,EACKmV,EAAMnV,GAGX0J,GAAmB1J,GACdkK,EAAQY,QACbiP,EACA7P,EAAQY,QACN8O,EACAzE,EACA6E,EACI/P,GACEC,EACAW,EACA,aACAmP,EAAgB,GAElBnP,GAENsK,EAdKjL,CAeLlK,IAGJkK,EAAQK,MAAM,iBACPqF,EAAgB5P,IAIzB,SAAS4P,EAAgB5P,GACvB,OAAa,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,iBACNG,EAAa7K,KAGtBkK,EAAQO,QAAQzK,GACT4P,GAIT,SAASuF,EAAMnV,GAEb,OADAkK,EAAQQ,KAAK,cACNP,EAAGnK,KAzJZwM,UAAU,GAiOZ,MAAM8N,GAAoB,CACxBC,MAAO,OACPC,IAAK,IACLC,OAAQ,OACRC,OAAQ,SACRC,MAAO,OACPC,IAAK,SACLC,IAAK,eACLC,OAAQ,OACRC,MAAO,SACPC,MAAO,SACPC,IAAK,SACLC,MAAO,SACPC,KAAM,eACNC,cAAe,SACfC,MAAO,OACPC,KAAM,eACNC,OAAQ,SACRC,OAAQ,OACRC,KAAM,OACNC,UAAW,SACXC,KAAM,SACNC,OAAQ,SACRC,IAAK,SACLC,QAAS,SACTC,WAAY,SACZC,KAAM,SACNC,IAAK,eACLC,KAAM,eACNC,MAAO,SACPC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,KAAM,OACNC,OAAQ,SACRC,IAAK,SACLC,qBAAsB,SACtBC,QAAS,SACTC,OAAQ,SACRC,OAAQ,OACRC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,QAAS,OACTC,UAAW,OACXC,IAAK,SACLC,IAAK,SACLC,UAAW,SACXC,YAAa,SACbC,WAAY,SACZC,YAAa,SACbC,yBAA0B,SAC1BC,sBAAuB,SACvBC,gBAAiB,SACjBC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,gBAAiB,SACjBC,KAAM,SACNC,UAAW,SACXC,gCAAiC,SACjCC,MAAO,SACPC,KAAM,eACNC,IAAK,SACLC,OAAQ,SACRC,GAAI,SACJC,SAAU,SACVC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,IAAK,SACLC,MAAO,SACPC,IAAK,eACLC,iBAAkB,OAClBC,eAAgB,SAChBC,uBAAwB,SACxBC,iBAAkB,IAClBC,iBAAkB,SAClBC,QAAS,SACTC,cAAe,SACfC,KAAM,eACNC,IAAK,OACLC,OAAQ,SACRC,SAAU,SACVC,sBAAuB,SACvBC,UAAW,OACXC,gBAAiB,SACjBC,gBAAiB,SACjBC,qBAAsB,SACtBC,cAAe,SACfC,oBAAqB,SACrBC,yBAA0B,SAC1BC,qBAAsB,SACtBC,iBAAkB,SAClBC,eAAgB,SAChBC,cAAe,SACfC,kBAAmB,SACnBC,kBAAmB,SACnBC,UAAW,SACXC,aAAc,SACdC,iBAAkB,SAClBC,UAAW,SACXC,oBAAqB,SACrBC,kBAAmB,SACnBC,eAAgB,SAChBC,kBAAmB,SACnBC,mBAAoB,SACpBC,gBAAiB,SACjBC,mBAAoB,SACpBC,QAAS,SACTC,aAAc,SACdC,UAAW,SACXC,KAAM,eACNC,OAAQ,SACRC,IAAK,SACLC,IAAK,OACLC,OAAQ,OACRC,OAAQ,SACRC,MAAO,OACPC,IAAK,SACLC,KAAM,SACNC,IAAK,eACLC,OAAQ,OACRC,QAAS,SACTC,MAAO,SACPC,iBAAkB,SAClBC,qBAAsB,SACtBC,MAAO,SACPC,KAAM,eACNC,QAAS,SACTC,MAAO,SACPC,WAAY,SACZC,YAAa,SACbC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,KAAM,OACNC,OAAQ,SACRC,aAAc,SACdC,IAAK,SACLC,IAAK,eACLC,kBAAmB,SACnBC,sBAAuB,SACvBC,KAAM,eACNC,OAAQ,SACRC,WAAY,SACZC,KAAM,SACNC,KAAM,SACNC,GAAI,IACJC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,IAAK,eACLC,GAAI,SACJC,KAAM,eACNC,aAAc,SACdC,iBAAkB,SAClBC,iBAAkB,SAClBC,eAAgB,SAChBC,YAAa,SACbC,kBAAmB,SACnBC,aAAc,SACdC,KAAM,eACNC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACPC,IAAK,IACLC,MAAO,SACPC,IAAK,SACLC,aAAc,SACdC,KAAM,SACNC,eAAgB,SAChBC,KAAM,SACNC,OAAQ,SACRC,aAAc,SACdC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,OAAQ,OACRC,MAAO,OACPC,IAAK,SACLC,KAAM,SACNC,IAAK,SACLC,OAAQ,OACRC,GAAI,SACJC,MAAO,SACPC,WAAY,SACZC,QAAS,SACTC,IAAK,SACLC,SAAU,SACVC,aAAc,SACdC,eAAgB,SAChBC,eAAgB,SAChBC,MAAO,SACPC,KAAM,eACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,KAAM,OACNC,MAAO,SACPC,IAAK,SACLC,IAAK,eACLC,KAAM,eACNC,KAAM,eACNC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,IAAK,eACLC,KAAM,eACNC,KAAM,eACNC,KAAM,SACNC,GAAI,IACJC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,WAAY,SACZC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,iBAAkB,SAClBC,UAAW,SACXC,aAAc,SACdC,oBAAqB,SACrBC,YAAa,SACbC,kBAAmB,SACnBC,kBAAmB,SACnBC,eAAgB,SAChBC,kBAAmB,SACnBC,UAAW,SACXC,eAAgB,SAChBC,gBAAiB,SACjBC,QAAS,SACTC,aAAc,SACdC,cAAe,SACfC,aAAc,SACdC,gBAAiB,SACjBC,kBAAmB,SACnBC,iBAAkB,SAClBC,gBAAiB,SACjBC,aAAc,SACdC,gBAAiB,SACjBC,WAAY,SACZC,cAAe,SACfC,UAAW,SACXC,eAAgB,SAChBC,iBAAkB,SAClBC,cAAe,SACfC,YAAa,SACbC,SAAU,SACVC,eAAgB,SAChBC,UAAW,SACXC,IAAK,eACLC,GAAI,SACJC,WAAY,SACZC,OAAQ,SACRC,cAAe,SACfC,mBAAoB,SACpBC,eAAgB,SAChBC,cAAe,SACfC,mBAAoB,SACpBC,eAAgB,SAChBC,KAAM,eACNC,eAAgB,SAChBC,gBAAiB,SACjBC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,YAAa,SACbC,UAAW,SACXC,IAAK,eACLC,UAAW,SACXC,KAAM,eACNC,KAAM,SACNC,GAAI,SACJC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,oBAAqB,SACrBC,mBAAoB,SACpBC,kBAAmB,SACnBC,sBAAuB,SACvBC,qBAAsB,SACtBC,eAAgB,SAChBC,QAAS,KACTC,IAAK,eACLC,QAAS,SACTC,iBAAkB,OAClBC,KAAM,SACNC,IAAK,SACLC,aAAc,SACdC,UAAW,SACXC,qBAAsB,SACtBC,WAAY,SACZC,SAAU,SACVC,cAAe,eACfC,UAAW,SACXC,WAAY,SACZC,gBAAiB,SACjBC,oBAAqB,eACrBC,kBAAmB,eACnBC,eAAgB,SAChBC,qBAAsB,eACtBC,gBAAiB,SACjBC,gBAAiB,eACjBC,aAAc,eACdC,gBAAiB,SACjBC,mBAAoB,eACpBC,qBAAsB,SACtBC,QAAS,SACTC,aAAc,SACdC,eAAgB,SAChBC,YAAa,eACbC,kBAAmB,eACnBC,aAAc,SACdC,wBAAyB,eACzBC,kBAAmB,eACnBC,YAAa,SACbC,iBAAkB,eAClBC,sBAAuB,SACvBC,kBAAmB,SACnBC,iBAAkB,SAClBC,oBAAqB,eACrBC,sBAAuB,SACvBC,gBAAiB,eACjBC,qBAAsB,SACtBC,kBAAmB,eACnBC,uBAAwB,SACxBC,UAAW,eACXC,eAAgB,SAChBC,YAAa,SACbC,iBAAkB,eAClBC,sBAAuB,SACvBC,iBAAkB,eAClBC,YAAa,eACbC,iBAAkB,SAClBC,SAAU,SACVC,cAAe,SACfC,kBAAmB,SACnBC,cAAe,SACfC,eAAgB,SAChBC,KAAM,eACNC,OAAQ,OACRC,GAAI,SACJC,MAAO,SACPC,OAAQ,OACRC,MAAO,OACPC,IAAK,SACLC,OAAQ,SACRC,IAAK,eACLC,OAAQ,OACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,eACNC,qBAAsB,SACtBC,eAAgB,SAChBC,GAAI,SACJC,KAAM,eACNC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,SACRC,KAAM,OACNC,QAAS,SACTC,UAAW,SACXC,YAAa,SACbC,gBAAiB,SACjBC,SAAU,SACVC,IAAK,SACLC,IAAK,eACLC,IAAK,SACLC,GAAI,SACJC,UAAW,OACXC,cAAe,SACfC,KAAM,SACNC,GAAI,SACJC,SAAU,SACVC,cAAe,SACfC,mBAAoB,SACpBC,cAAe,SACfC,MAAO,SACPC,QAAS,SACTC,WAAY,SACZC,aAAc,SACdC,KAAM,eACNC,IAAK,SACLC,KAAM,IACNC,IAAK,eACLC,KAAM,SACNC,KAAM,eACNC,MAAO,SACPC,IAAK,OACLC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,GAAI,SACJC,eAAgB,SAChBC,mBAAoB,SACpBC,qBAAsB,SACtBC,IAAK,SACLC,IAAK,SACLC,kBAAmB,SACnBC,WAAY,SACZC,cAAe,SACfC,oBAAqB,SACrBC,aAAc,SACdC,mBAAoB,SACpBC,mBAAoB,SACpBC,gBAAiB,SACjBC,mBAAoB,SACpBC,WAAY,SACZC,SAAU,SACVC,cAAe,SACfC,eAAgB,SAChBC,cAAe,SACfC,iBAAkB,SAClBC,mBAAoB,SACpBC,kBAAmB,SACnBC,iBAAkB,SAClBC,cAAe,SACfC,iBAAkB,SAClBC,YAAa,SACbC,eAAgB,SAChBC,WAAY,SACZC,KAAM,SACNC,aAAc,SACdC,YAAa,SACbC,KAAM,SACNC,IAAK,SACLC,YAAa,SACbC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,GAAI,SACJC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,IAAK,eACLC,eAAgB,SAChBC,eAAgB,SAChBC,gBAAiB,SACjBC,aAAc,SACdC,MAAO,SACPC,YAAa,SACbC,KAAM,eACNC,KAAM,SACNC,OAAQ,SACRC,mBAAoB,SACpBC,aAAc,SACdC,kBAAmB,SACnBC,eAAgB,SAChBC,oBAAqB,SACrBC,YAAa,SACbC,KAAM,eACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,YAAa,SACbC,SAAU,SACVC,cAAe,SACfC,mBAAoB,SACpBC,cAAe,SACfC,SAAU,SACVC,IAAK,SACLC,IAAK,SACLC,SAAU,SACVC,cAAe,SACfC,OAAQ,SACRC,MAAO,OACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,IAAK,KACLC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,IAAK,eACLC,UAAW,SACXC,MAAO,SACPC,WAAY,eACZC,UAAW,SACXC,MAAO,SACPC,WAAY,SACZC,eAAgB,SAChBC,WAAY,SACZC,KAAM,eACNC,UAAW,SACXC,KAAM,eACNC,OAAQ,SACRC,OAAQ,OACRC,KAAM,SACNC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,MAAO,OACPC,IAAK,SACLC,OAAQ,SACRC,IAAK,eACLC,OAAQ,OACRC,MAAO,SACPC,SAAU,IACVC,WAAY,SACZC,aAAc,SACdC,iBAAkB,SAClBC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,KAAM,eACNC,QAAS,SACTC,WAAY,SACZC,iBAAkB,SAClBC,YAAa,SACbC,cAAe,SACfC,MAAO,SACPC,WAAY,SACZC,QAAS,SACTC,YAAa,SACbC,eAAgB,SAChBC,gBAAiB,SACjBC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,KAAM,OACNC,MAAO,SACPC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,KAAM,SACNC,YAAa,SACbC,aAAc,IACdC,kBAAmB,SACnBC,cAAe,SACfC,cAAe,SACfC,IAAK,eACLC,KAAM,eACNC,KAAM,eACNC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,IAAK,eACLC,KAAM,eACNC,KAAM,eACNC,IAAK,eACLC,GAAI,SACJC,KAAM,eACNC,KAAM,eACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,OACRC,MAAO,SACPC,IAAK,SACLC,IAAK,eACLC,KAAM,eACNC,KAAM,eACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,eAAgB,SAChBC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,KAAM,eACNC,OAAQ,OACRC,OAAQ,SACRC,GAAI,SACJC,IAAK,eACLC,IAAK,SACLC,MAAO,OACPC,MAAO,OACPC,IAAK,SACLC,MAAO,OACPC,GAAI,SACJC,IAAK,eACLC,OAAQ,OACRC,QAAS,SACTC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,IAAK,IACLC,IAAK,SACLC,OAAQ,SACRC,KAAM,SACNC,SAAU,SACVC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,MAAO,SACPC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,MAAO,OACPC,QAAS,SACTC,MAAO,SACPC,KAAM,eACNC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,KAAM,IACNC,OAAQ,SACRC,SAAU,SACVC,MAAO,OACPC,KAAM,eACNC,IAAK,IACLC,MAAO,SACPC,QAAS,SACTC,OAAQ,OACRC,KAAM,OACNC,SAAU,SACVC,MAAO,SACPC,KAAM,SACNC,SAAU,SACVC,YAAa,SACbC,UAAW,SACXC,QAAS,SACTC,UAAW,SACXC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,KAAM,SACNC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,QAAS,SACTC,IAAK,eACLC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,UAAW,SACXC,SAAU,SACVC,QAAS,SACTC,gBAAiB,SACjBC,cAAe,SACfC,SAAU,SACVC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,aAAc,SACdC,YAAa,SACbC,cAAe,SACfC,kBAAmB,SACnBC,kBAAmB,SACnBC,mBAAoB,SACpBC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,IAAK,UACLC,QAAS,eACTC,KAAM,SACNC,KAAM,eACNC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,QAAS,SACTC,SAAU,SACVC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,OAAQ,OACRC,KAAM,eACNC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,KAAM,KACNC,MAAO,SACPC,SAAU,SACVC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,eACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,OACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,MAAO,OACPC,QAAS,SACTC,KAAM,OACNC,UAAW,OACXC,IAAK,eACLC,KAAM,SACNt/B,MAAO,SACPu/B,UAAW,SACXC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,gBAAiB,SACjBC,iBAAkB,SAClBC,SAAU,OACVC,SAAU,SACVC,WAAY,SACZC,YAAa,SACbC,YAAa,SACbC,KAAM,SACNC,SAAU,SACVC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,SAAU,SACV9wC,MAAO,IACP+wC,OAAQ,SACRC,QAAS,SACTC,MAAO,IACPC,OAAQ,IACRC,KAAM,SACNC,OAAQ,SACRC,WAAY,SACZC,UAAW,SACXC,KAAM,SACNC,QAAS,SACTC,OAAQ,SACRC,KAAM,eACNC,OAAQ,SACR50C,KAAM,OACN60C,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,IAAK,SACLC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,QAAS,SACTC,YAAa,SACbC,YAAa,SACbC,SAAU,SACVC,WAAY,SACZC,OAAQ,OACRC,eAAgB,SAChBC,gBAAiB,SACjBC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,GAAI,SACJC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,IAAK,OACLC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,IAAK,eACLC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,QAAS,SACTC,YAAa,SACbC,MAAO,SACPC,IAAK,OACLC,QAAS,SACTC,MAAO,SACPC,IAAK,OACLC,OAAQ,OACRC,cAAe,SACfC,OAAQ,SACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,IACRC,KAAM,eACNC,IAAK,SACLC,MAAO,SACPC,SAAU,SACVC,SAAU,SACVC,QAAS,SACTC,UAAW,SACXC,eAAgB,SAChBC,UAAW,SACXC,eAAgB,SAChBC,gBAAiB,SACjBC,iBAAkB,SAClBC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,KAAM,eACNC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,SAAU,SACVC,MAAO,SACPC,KAAM,SACNC,OAAQ,OACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,OACPC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,GAAI,SACJC,MAAO,SACPC,IAAK,eACLC,GAAI,SACJC,OAAQ,OACRC,IAAK,SACLC,OAAQ,SACRC,GAAI,SACJC,SAAU,SACVC,IAAK,SACLC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,KAAM,eACNC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,MAAO,SACPC,WAAY,SACZC,YAAa,SACbC,OAAQ,IACRC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,SAAU,SACVC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,IAAK,SACLC,IAAK,OACLC,KAAM,OACNC,KAAM,SACNC,KAAM,IACNC,MAAO,SACPC,YAAa,SACbC,aAAc,SACdC,cAAe,SACfC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,IAAK,eACLC,MAAO,SACPC,MAAO,KACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,KAAM,eACNC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,SAAU,SACVC,OAAQ,OACRC,OAAQ,SACRC,OAAQ,OACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,OACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,GAAI,SACJC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,SAAU,SACVC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,KAAM,eACNC,OAAQ,SACRC,IAAK,eACLC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,KAAM,SACNC,GAAI,SACJC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,SAAU,SACVC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,MAAO,IACPC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,GAAI,IACJC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,UAAW,SACXC,OAAQ,SACRC,OAAQ,SACRC,UAAW,SACXC,WAAY,SACZC,QAAS,SACTC,OAAQ,SACRC,UAAW,eACXC,KAAM,eACNC,KAAM,SACNC,OAAQ,SACRC,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,OAAQ,SACRC,OAAQ,SACRC,IAAK,eACLC,SAAU,SACVC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,cAAe,SACfC,eAAgB,SAChBC,KAAM,eACNC,OAAQ,SACRC,KAAM,eACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,OACRC,GAAI,SACJC,MAAO,OACPC,IAAK,SACLC,KAAM,SACNC,MAAO,OACPC,IAAK,SACLC,IAAK,eACLC,OAAQ,OACRC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,SAAU,SACVC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACPC,SAAU,SACVC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,SAAU,SACVC,SAAU,SACVC,SAAU,SACVC,QAAS,SACTC,KAAM,SACNC,MAAO,SACPC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,OACRC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACPC,KAAM,OACNC,MAAO,SACPC,IAAK,SACLC,IAAK,eACLC,MAAO,SACPC,KAAM,eACNC,KAAM,eACNC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,IAAK,eACLC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,KAAM,eACNC,KAAM,eACNC,MAAO,SACPC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,GAAI,SACJC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,MAAO,OACPC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,KAAM,SACNC,MAAO,eACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,KAAM,IACNC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,KAAM,SACNC,GAAI,SACJC,UAAW,SACXC,cAAe,SACfC,gBAAiB,SACjBC,cAAe,SACfC,eAAgB,SAChBC,eAAgB,SAChBC,gBAAiB,SACjBC,kBAAmB,SACnBC,oBAAqB,SACrBC,eAAgB,SAChBC,IAAK,SACLC,IAAK,SACLC,KAAM,SACNC,SAAU,SACVC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,QAAS,SACTC,SAAU,SACVC,KAAM,eACNC,OAAQ,SACRC,WAAY,SACZC,QAAS,SACTC,UAAW,SACXC,WAAY,SACZC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,IAAK,eACLC,GAAI,SACJC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,GAAI,SACJC,MAAO,SACPC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,WAAY,SACZC,IAAK,SACLC,KAAM,SACNC,SAAU,SACVC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,cAAe,SACfC,mBAAoB,SACpBC,WAAY,SACZC,eAAgB,SAChBC,cAAe,SACfC,eAAgB,SAChBC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,OAAQ,IACRC,IAAK,SACLC,QAAS,SACTC,KAAM,SACNC,KAAM,IACNC,OAAQ,SACRC,MAAO,SACPC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,KAAM,eACNC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,KAAM,IACNC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,GAAI,IACJC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,QAAS,SACTC,UAAW,eACXC,KAAM,eACNC,MAAO,SACPC,KAAM,OACNC,KAAM,SACNC,KAAM,SACNC,QAAS,SACT5rD,IAAK,SACL6rD,OAAQ,SACRC,WAAY,SACZC,WAAY,SACZC,SAAU,SACVl6C,OAAQ,SACRm6C,OAAQ,SACRC,IAAK,SACLC,MAAO,SACPC,cAAe,SACfC,IAAK,eACLC,IAAK,SACLC,MAAO,OACPC,IAAK,SACLC,OAAQ,IACRC,OAAQ,SACRC,OAAQ,OACRC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,KAAM,eACNC,GAAI,SACJC,KAAM,eACNC,OAAQ,SACRC,GAAI,SACJC,SAAU,SACVC,MAAO,SACPC,IAAK,eACLC,IAAK,eACLC,KAAM,eACNC,WAAY,SACZC,gBAAiB,SACjBC,IAAK,eACLC,IAAK,eACLC,KAAM,eACNC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,KAAM,eACNC,IAAK,SACLC,KAAM,eACNC,MAAO,eACPC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,SAAU,SACVC,KAAM,OACNC,MAAO,eACPC,OAAQ,eACRC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,SAAU,eACVC,KAAM,SACNC,IAAK,SACLC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,MAAO,eACPC,OAAQ,SACRC,OAAQ,SACRC,MAAO,eACPC,OAAQ,SACRC,QAAS,SACTC,IAAK,eACLC,IAAK,eACLC,IAAK,SACLC,KAAM,SACNC,MAAO,eACPC,UAAW,eACXC,KAAM,eACNC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,GAAI,SACJC,IAAK,SACLC,KAAM,SACNC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,IAAK,eACLC,MAAO,SACPC,KAAM,SACNC,IAAK,SACLC,WAAY,SACZC,gBAAiB,SACjBC,KAAM,SACNC,MAAO,eACPC,UAAW,eACXC,KAAM,eACNC,MAAO,SACPC,MAAO,SACPC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,eACNC,IAAK,OACLC,MAAO,SACPC,OAAQ,eACRC,SAAU,eACVC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,KAAM,SACNC,UAAW,SACXC,OAAQ,eACRC,MAAO,eACPC,QAAS,SACTC,IAAK,SACLC,OAAQ,SACRC,KAAM,eACNC,MAAO,SACPC,QAAS,eACTC,MAAO,SACPC,MAAO,SACPC,OAAQ,eACRC,OAAQ,eACRC,YAAa,SACbC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,KAAM,eACNC,KAAM,eACNC,UAAW,SACXC,eAAgB,SAChBC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,KAAM,SACNC,MAAO,eACPC,MAAO,SACPC,QAAS,eACTC,UAAW,SACXC,WAAY,eACZC,MAAO,SACPC,QAAS,eACTC,KAAM,SACNC,MAAO,eACPC,MAAO,SACPC,QAAS,eACTC,UAAW,SACXC,WAAY,eACZC,KAAM,SACNC,OAAQ,OACRC,KAAM,SACNC,cAAe,SACfC,gBAAiB,SACjBC,eAAgB,SAChBC,iBAAkB,SAClBC,GAAI,SACJC,IAAK,IACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,KAAM,eACNC,OAAQ,SACRC,KAAM,eACNC,KAAM,UACNC,QAAS,SACTC,OAAQ,SACRC,KAAM,eACNC,KAAM,UACNC,QAAS,eACTC,OAAQ,SACRC,QAAS,eACTC,MAAO,eACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,GAAI,SACJC,OAAQ,OACRC,KAAM,SACNC,KAAM,SACNC,MAAO,OACPC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,IAAK,eACLC,KAAM,SACNC,OAAQ,OACRC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,IAAK,SACLC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,OAAQ,SACRC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,IAAK,SACL16D,MAAO,SACP26D,QAAS,SACTC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,IAAK,SACLC,KAAM,SACNC,OAAQ,OACRC,KAAM,SACNC,OAAQ,OACRC,OAAQ,SACRC,SAAU,SACVC,KAAM,OACNC,MAAO,SACPC,IAAK,SACLC,KAAM,OACNC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPh7D,KAAM,SACNi7D,IAAK,SACLC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,IAAK,eACLC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,GAAI,SACJC,UAAW,SACXC,IAAK,SACLC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,KAAM,IACNC,SAAU,SACVC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,OAAQ,OACRC,QAAS,SACTC,QAAS,SACTC,GAAI,OACJC,SAAU,SACVC,KAAM,eACNC,MAAO,OACPC,GAAI,SACJC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,WAAY,SACZC,YAAa,SACbC,OAAQ,SACRC,YAAa,SACbC,SAAU,SACVC,SAAU,SACVC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,SAAU,SACVC,SAAU,SACVC,SAAU,SACV5+D,KAAM,SACN6+D,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,KAAM,eACNC,IAAK,SACLC,OAAQ,SACRC,IAAK,eACLC,KAAM,SACNC,KAAM,eACNC,OAAQ,SACRC,KAAM,eACNC,YAAa,SACbC,QAAS,SACTC,MAAO,IACPC,QAAS,SACTC,KAAM,IACNC,MAAO,SACPC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,KAAM,eACNC,OAAQ,SACRC,MAAO,SACPC,SAAU,SACVC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,OACPC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,UAAW,SACXC,MAAO,SACPC,MAAO,SACPC,OAAQ,IACRC,OAAQ,IACRC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,KAAM,IACNC,IAAK,SACLC,KAAM,SACNC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,QAAS,SACTC,SAAU,SACVC,MAAO,SACPC,KAAM,SACNC,IAAK,OACLC,OAAQ,SACRC,OAAQ,SACRC,IAAK,eACLC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,WAAY,SACZC,eAAgB,SAChBC,iBAAkB,SAClBC,eAAgB,SAChBC,gBAAiB,SACjBC,kBAAmB,SACnBC,iBAAkB,SAClBC,gBAAiB,SACjBC,gBAAiB,SACjBC,KAAM,SACNC,aAAc,SACdC,MAAO,SACPC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,WAAY,SACZC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,QAAS,SACTC,KAAM,IACNC,OAAQ,SACRC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,KAAM,eACNC,IAAK,SACLC,KAAM,IACNC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,SAAU,SACVC,QAAS,SACTC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACPC,GAAI,SACJC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,SAAU,SACVC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,KAAM,OACNC,KAAM,IACNC,OAAQ,SACRC,SAAU,SACVC,MAAO,SACPC,KAAM,SACNC,IAAK,eACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,SAAU,SACVC,cAAe,SACfC,IAAK,OACLC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,cAAe,SACfC,OAAQ,SACRC,SAAU,SACVC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,KAAM,SACNC,MAAO,eACPC,OAAQ,SACRC,IAAK,IACLC,KAAM,SACNC,OAAQ,SACRC,KAAM,eACNC,OAAQ,SACRC,UAAW,SACXC,KAAM,SACNC,MAAO,SACPC,OAAQ,eACRC,MAAO,SACPC,OAAQ,eACRC,MAAO,SACPC,OAAQ,SACRC,SAAU,SACVC,WAAY,SACZC,MAAO,SACPC,OAAQ,SACRC,SAAU,SACVC,WAAY,SACZC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,gBAAiB,SACjBC,YAAa,SACbC,MAAO,OACPC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,SAAU,SACVC,UAAW,SACXC,UAAW,SACXC,WAAY,SACZC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,KAAM,SACNC,WAAY,SACZC,YAAa,SACbC,OAAQ,SACRC,YAAa,SACbC,SAAU,SACVC,SAAU,SACVC,QAAS,SACTC,IAAK,SACLC,KAAM,SACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,QAAS,SACTC,KAAM,SACNC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,SAAU,SACVC,UAAW,SACXC,UAAW,SACXC,WAAY,SACZC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,OAAQ,SACRC,MAAO,OACPp5E,OAAQ,SACRq5E,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,IAAK,eACLC,OAAQ,SACRC,UAAW,SACXC,MAAO,SACPC,SAAU,SACVC,OAAQ,SACRC,YAAa,SACbC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,MAAO,OACPC,MAAO,SACPC,MAAO,OACPC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,KAAM,eACNC,QAAS,SACTC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,SAAU,SACVC,aAAc,SACdC,aAAc,SACdC,eAAgB,SAChBC,UAAW,SACXC,cAAe,SACfC,gBAAiB,SACjBC,OAAQ,SACRC,KAAM,SACNC,SAAU,SACVC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,SAAU,SACVC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,iBAAkB,SAClBC,kBAAmB,SACnBC,KAAM,SACNC,KAAM,SACNC,OAAQ,OACRC,KAAM,SACNC,MAAO,SACPC,OAAQ,SACRC,MAAO,OACPC,IAAK,SACLC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,IAAK,eACLC,OAAQ,OACRC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,IAAK,OACLC,MAAO,SACPC,KAAM,eACNC,QAAS,SACTC,YAAa,SACbC,cAAe,SACfC,eAAgB,SAChBC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,QAAS,SACTC,WAAY,SACZC,OAAQ,SACRC,SAAU,SACVC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,MAAO,SACPC,OAAQ,SACRC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,KAAM,OACNC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,WAAY,SACZC,SAAU,SACVC,WAAY,SACZC,OAAQ,SACRC,MAAO,SACPC,UAAW,SACXC,KAAM,SACNC,OAAQ,SACRC,SAAU,SACVC,aAAc,eACdC,cAAe,eACfC,aAAc,eACdC,cAAe,eACfC,SAAU,SACVC,gBAAiB,SACjBC,iBAAkB,SAClBC,IAAK,SACLC,MAAO,SACPC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,OAAQ,IACRC,KAAM,IACNC,IAAK,eACLC,MAAO,SACPC,MAAO,eACPC,MAAO,eACPC,KAAM,eACNC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,OAAQ,eACRC,OAAQ,eACRC,OAAQ,eACRC,OAAQ,eACRC,QAAS,SACTC,MAAO,SACPC,OAAQ,SACRC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,IAAK,eACLC,KAAM,eACNC,GAAI,SACJC,GAAI,SACJC,OAAQ,SACRC,KAAM,eACNC,KAAM,SACNC,MAAO,SACPC,KAAM,SACNC,MAAO,SACPC,IAAK,eACLC,MAAO,SACPC,MAAO,SACPC,GAAI,SACJC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,eACNC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,KAAM,SACNC,OAAQ,SACRC,OAAQ,OACRC,KAAM,SACNC,MAAO,SACPC,IAAK,SACLC,IAAK,OACLC,IAAK,eACLC,KAAM,SACNC,KAAM,eACNC,KAAM,eACNC,KAAM,SACNC,KAAM,OACNC,OAAQ,SACRC,OAAQ,SACRC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,KAAM,SACNC,IAAK,eACLC,KAAM,SACNC,QAAS,SACTC,KAAM,eACNC,KAAM,eACNC,IAAK,SACLC,KAAM,UAMFC,GAAuC,GAAGjnF,eAahD,SAASknF,GAA8B5lF,GACrC,QAAO2lF,GAAqCxmF,KAAKmiB,GAAmBthB,IAASshB,GAAkBthB,GAejG,MAAM6lF,GAAqB,CACzBhmF,KAAM,qBACN+R,SAIF,SAAoCV,EAASC,EAAI2D,GAC/C,MAAMxC,EAAOhN,KACb,IAGI8L,EAGAL,EANAO,EAAO,EAOX,OAGA,SAAetK,GAKb,OAJAkK,EAAQK,MAAM,sBACdL,EAAQK,MAAM,4BACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,4BACNwK,GAIT,SAASA,EAAKlV,GACZ,OAAa,KAATA,GACFkK,EAAQK,MAAM,mCACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,mCACNo0E,IAGT50E,EAAQK,MAAM,2BACdH,EAAM,GACNL,EAAOV,EACArQ,EAAMgH,IAIf,SAAS8+E,EAAQ9+E,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBkK,EAAQK,MAAM,uCACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,uCACbR,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOX,EACApQ,IAGTkR,EAAQK,MAAM,2BACdH,EAAM,EACNL,EAAOZ,EACAnQ,EAAMgH,IAIf,SAAShH,EAAMgH,GAEb,IAAImL,EAEJ,OAAa,KAATnL,GAAesK,GACjBa,EAAQjB,EAAQQ,KAAK,2BAGnBX,IAASV,GACRu1E,GAA8BtzE,EAAKyE,eAAe5E,KAKrDjB,EAAQK,MAAM,4BACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,4BACbR,EAAQQ,KAAK,sBACNP,GAPE2D,EAAI9N,IAUX+J,EAAK/J,IAASsK,IAASF,GACzBF,EAAQO,QAAQzK,GACThH,GAGF8U,EAAI9N,MAaf,MAAM++E,GAAkB,CACtBlmF,KAAM,kBACN+R,SAIF,SAAiCV,EAASC,EAAI2D,GAC5C,OAGA,SAAe9N,GAKb,OAJAkK,EAAQK,MAAM,mBACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,gBACNwK,GAIT,SAASA,EAAKlV,GACZ,OAAIsJ,EAAiBtJ,IACnBkK,EAAQK,MAAM,wBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,wBACbR,EAAQQ,KAAK,mBACNP,GAGF2D,EAAI9N,MAcf,MAAMg/E,GAAa,CACjBnmF,KAAM,aACN+R,SAIF,SAA4BV,EAASC,GACnC,OAGA,SAAenK,GAIb,OAHAkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNT,GAAaC,EAASC,EAAI,iBAwBrC,MAAM80E,GAAW,CACfpmF,KAAM,WACN+R,SAgJF,SAA0BV,EAASC,EAAI2D,GACrC,MAAMxC,EAAOhN,KACb,IAGI4gF,EAGAloE,EANAva,EAAQ6O,EAAKa,OAAOxS,OAQxB,KAAO8C,KACL,IACkC,eAA/B6O,EAAKa,OAAO1P,GAAO,GAAG8K,MACU,cAA/B+D,EAAKa,OAAO1P,GAAO,GAAG8K,QACvB+D,EAAKa,OAAO1P,GAAO,GAAG0iF,UACvB,CACAD,EAAa5zE,EAAKa,OAAO1P,GAAO,GAChC,MAIJ,OAGA,SAAeuD,GACb,IAAKk/E,EACH,OAAOpxE,EAAI9N,GAGb,OAAIk/E,EAAWE,UAAkBC,EAASr/E,IAC1CgX,EAAU1L,EAAKP,OAAOiM,QAAQ1U,SAC5BmU,GACEnL,EAAKyE,eAAe,CAClBpS,MAAOuhF,EAAWthF,IAClBA,IAAK0N,EAAK2B,UAIhB/C,EAAQK,MAAM,YACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,YACN40E,IAIT,SAASA,EAAct/E,GAErB,OAAa,KAATA,EACKkK,EAAQY,QACby0E,GACAp1E,EACA6M,EAAU7M,EAAKk1E,EAHVn1E,CAILlK,GAGS,KAATA,EACKkK,EAAQY,QACb00E,GACAr1E,EACA6M,EACI9M,EAAQY,QAAQ20E,GAA6Bt1E,EAAIk1E,GACjDA,EALCn1E,CAMLlK,GAGGgX,EAAU7M,EAAGnK,GAAQq/E,EAASr/E,GAIvC,SAASq/E,EAASr/E,GAEhB,OADAk/E,EAAWC,WAAY,EAChBrxE,EAAI9N,KAxNbgU,UA6CF,SAA2B7H,EAAQ4C,GACjC,IAII5D,EAGA+J,EAGAwqE,EAGAC,EAbAljF,EAAQ0P,EAAOxS,OACfuT,EAAS,EAcb,KAAOzQ,KAGL,GAFA0O,EAAQgB,EAAO1P,GAAO,GAElByY,EAAM,CAER,GACiB,SAAf/J,EAAM5D,MACU,cAAf4D,EAAM5D,MAAwB4D,EAAMi0E,UAErC,MAIuB,UAArBjzE,EAAO1P,GAAO,IAAiC,cAAf0O,EAAM5D,OACxC4D,EAAMi0E,WAAY,QAEf,GAAIM,GACT,GACuB,UAArBvzE,EAAO1P,GAAO,KACE,eAAf0O,EAAM5D,MAAwC,cAAf4D,EAAM5D,QACrC4D,EAAMg0E,YAEPjqE,EAAOzY,EAEY,cAAf0O,EAAM5D,MAAsB,CAC9B2F,EAAS,EACT,WAGoB,aAAf/B,EAAM5D,OACfm4E,EAAQjjF,GAIZ,MAAMmjF,EAAQ,CACZr4E,KAA+B,cAAzB4E,EAAO+I,GAAM,GAAG3N,KAAuB,OAAS,QACtD5J,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAO+I,GAAM,GAAGvX,OACzCC,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAOA,EAAOxS,OAAS,GAAG,GAAGiE,MAEhDqY,EAAQ,CACZ1O,KAAM,QACN5J,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAO+I,GAAM,GAAGvX,OACzCC,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAOuzE,GAAO,GAAG9hF,MAEpC6S,EAAO,CACXlJ,KAAM,YACN5J,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAO+I,EAAOhI,EAAS,GAAG,GAAGtP,KACtDA,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAOuzE,EAAQ,GAAG,GAAG/hF,QA+B9C,OA7BAgiF,EAAQ,CACN,CAAC,QAASC,EAAO7wE,GACjB,CAAC,QAASkH,EAAOlH,IAGnB4wE,EAAQzoF,EAAKyoF,EAAOxzE,EAAOxP,MAAMuY,EAAO,EAAGA,EAAOhI,EAAS,IAE3DyyE,EAAQzoF,EAAKyoF,EAAO,CAAC,CAAC,QAASlvE,EAAM1B,KAErC4wE,EAAQzoF,EACNyoF,EACAxvE,GACEpB,EAAQhE,OAAOC,WAAW1P,WAAW0S,KACrC7B,EAAOxP,MAAMuY,EAAOhI,EAAS,EAAGwyE,EAAQ,GACxC3wE,IAIJ4wE,EAAQzoF,EAAKyoF,EAAO,CAClB,CAAC,OAAQlvE,EAAM1B,GACf5C,EAAOuzE,EAAQ,GACfvzE,EAAOuzE,EAAQ,GACf,CAAC,OAAQzpE,EAAOlH,KAGlB4wE,EAAQzoF,EAAKyoF,EAAOxzE,EAAOxP,MAAM+iF,EAAQ,IAEzCC,EAAQzoF,EAAKyoF,EAAO,CAAC,CAAC,OAAQC,EAAO7wE,KACrC/G,EAAOmE,EAAQ+I,EAAM/I,EAAOxS,OAAQgmF,GAC7BxzE,GA1IPgE,WAmBF,SAA4BhE,GAC1B,IAGIhB,EAHA1O,GAAS,EAKb,OAASA,EAAQ0P,EAAOxS,QACtBwR,EAAQgB,EAAO1P,GAAO,GAGL,eAAf0O,EAAM5D,MACS,cAAf4D,EAAM5D,MACS,aAAf4D,EAAM5D,OAGN4E,EAAOnE,OAAOvL,EAAQ,EAAkB,eAAf0O,EAAM5D,KAAwB,EAAI,GAC3D4D,EAAM5D,KAAO,OACb9K,KAIJ,OAAO0P,IApCHozE,GAAoB,CACxB30E,SAuNF,SAA0BV,EAASC,EAAI2D,GACrC,OAGA,SAAe9N,GAKb,OAJAkK,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,kBACN8L,GAAkBtM,EAASgL,IAIpC,SAASA,EAAKlV,GACZ,OAAa,KAATA,EACKpC,EAAIoC,GAGNoV,GACLlL,EACA21E,EACA/xE,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATKsH,CAULpV,GAIJ,SAAS6/E,EAAiB7/E,GACxB,OAAOyJ,GAA0BzJ,GAC7BwW,GAAkBtM,EAAS46B,EAA3BtuB,CAAoCxW,GACpCpC,EAAIoC,GAIV,SAAS8kC,EAAQ9kC,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBmW,GACLjM,EACAsM,GAAkBtM,EAAStM,GAC3BkQ,EACA,gBACA,sBACA,sBANKqI,CAOLnW,GAGGpC,EAAIoC,GAIb,SAASpC,EAAIoC,GACX,OAAa,KAATA,GACFkK,EAAQK,MAAM,kBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,GAGF2D,EAAI9N,MAnRTw/E,GAAyB,CAC7B50E,SAuRF,SAA+BV,EAASC,EAAI2D,GAC1C,MAAMxC,EAAOhN,KACb,OAGA,SAAe0B,GACb,OAAO+V,GAAa5d,KAClBmT,EACApB,EACA41E,EACAhyE,EACA,YACA,kBACA,kBAPKiI,CAQL/V,IAIJ,SAAS8/E,EAAW9/E,GAClB,OAAOsL,EAAKP,OAAOiM,QAAQ1U,SACzBmU,GACEnL,EAAKyE,eAAezE,EAAKa,OAAOb,EAAKa,OAAOxS,OAAS,GAAG,IAAIgD,MAAM,GAAI,KAGtEwN,EAAGnK,GACH8N,EAAI9N,MA5SNy/E,GAA8B,CAClC70E,SAgTF,SAAoCV,EAASC,EAAI2D,GAC/C,OAGA,SAAe9N,GAKb,OAJAkK,EAAQK,MAAM,aACdL,EAAQK,MAAM,mBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,mBACNwK,GAIT,SAASA,EAAKlV,GACZ,OAAa,KAATA,GACFkK,EAAQK,MAAM,mBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,mBACbR,EAAQQ,KAAK,aACNP,GAGF2D,EAAI9N,MA+Ef,SAAS+/E,GAAkB//E,GACzB,OACW,OAATA,GACAyJ,GAA0BzJ,IAC1B4J,GAAkB5J,GAEX,EAGL6J,GAAmB7J,GACd,OADT,EAqBF,MAAMggF,GAAY,CAChBnnF,KAAM,YACN+R,SAwKF,SAA2BV,EAASC,GAClC,MAAM81E,EAAmB3hF,KAAKyM,OAAOC,WAAWi1E,iBAAiBjyE,KAC3D9C,EAAW5M,KAAK4M,SAChBlC,EAAS+2E,GAAkB70E,GAGjC,IAAIgJ,EACJ,OAGA,SAAelU,GAGb,OAFAkK,EAAQK,MAAM,qBACd2J,EAASlU,EACFmU,EAASnU,IAIlB,SAASmU,EAASnU,GAChB,GAAIA,IAASkU,EAEX,OADAhK,EAAQO,QAAQzK,GACTmU,EAGT,MAAMhJ,EAAQjB,EAAQQ,KAAK,qBACrByK,EAAQ4qE,GAAkB//E,GAC1BkV,GACHC,GAAoB,IAAVA,GAAenM,GAAWi3E,EAAiB39E,SAAStC,GAC3D0/E,GACH12E,GAAsB,IAAXA,GAAgBmM,GAAU8qE,EAAiB39E,SAAS4I,GAGlE,OAFAC,EAAM+0E,MAAQz4E,QAAmB,KAAXyM,EAAgBgB,EAAOA,IAASlM,IAAW02E,IACjEv0E,EAAMg1E,OAAS14E,QAAmB,KAAXyM,EAAgBwrE,EAAQA,IAAUvqE,IAAUD,IAC5D/K,EAAGnK,KAtMZmQ,WAQF,SAA6BhE,EAAQ4C,GACnC,IAGImG,EAGA0qE,EAGAnvE,EAGA2vE,EAGA5oE,EAGAjT,EAGA87E,EAGAnzE,EAxBAzQ,GAAS,EA6Bb,OAASA,EAAQ0P,EAAOxS,QAEtB,GACuB,UAArBwS,EAAO1P,GAAO,IACY,sBAA1B0P,EAAO1P,GAAO,GAAG8K,MACjB4E,EAAO1P,GAAO,GAAG0jF,OAIjB,IAFAjrE,EAAOzY,EAEAyY,KAEL,GACsB,SAApB/I,EAAO+I,GAAM,IACY,sBAAzB/I,EAAO+I,GAAM,GAAG3N,MAChB4E,EAAO+I,GAAM,GAAGgrE,OAChBnxE,EAAQgB,eAAe5D,EAAO+I,GAAM,IAAI3V,WAAW,KACjDwP,EAAQgB,eAAe5D,EAAO1P,GAAO,IAAI8C,WAAW,GACtD,CAKA,IACG4M,EAAO+I,GAAM,GAAGirE,QAAUh0E,EAAO1P,GAAO,GAAGyjF,SAC3C/zE,EAAO1P,GAAO,GAAGmB,IAAIsP,OAASf,EAAO1P,GAAO,GAAGkB,MAAMuP,QAAU,MAE7Df,EAAO+I,GAAM,GAAGtX,IAAIsP,OACnBf,EAAO+I,GAAM,GAAGvX,MAAMuP,OACtBf,EAAO1P,GAAO,GAAGmB,IAAIsP,OACrBf,EAAO1P,GAAO,GAAGkB,MAAMuP,QACzB,GAGF,SAGF3I,EACE4H,EAAO+I,GAAM,GAAGtX,IAAIsP,OAASf,EAAO+I,GAAM,GAAGvX,MAAMuP,OAAS,GAC5Df,EAAO1P,GAAO,GAAGmB,IAAIsP,OAASf,EAAO1P,GAAO,GAAGkB,MAAMuP,OAAS,EAC1D,EACA,EACN,MAAMvP,EAAQnG,OAAOsO,OAAO,GAAIqG,EAAO+I,GAAM,GAAGtX,KAC1CA,EAAMpG,OAAOsO,OAAO,GAAIqG,EAAO1P,GAAO,GAAGkB,OAC/C2iF,GAAU3iF,GAAQ4G,GAClB+7E,GAAU1iF,EAAK2G,GACf67E,EAAkB,CAChB74E,KAAMhD,EAAM,EAAI,iBAAmB,mBACnC5G,MAAAA,EACAC,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAO+I,GAAM,GAAGtX,MAEzC4Z,EAAkB,CAChBjQ,KAAMhD,EAAM,EAAI,iBAAmB,mBACnC5G,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAO1P,GAAO,GAAGkB,OAC1CC,IAAAA,GAEF6S,EAAO,CACLlJ,KAAMhD,EAAM,EAAI,aAAe,eAC/B5G,MAAOnG,OAAOsO,OAAO,GAAIqG,EAAO+I,GAAM,GAAGtX,KACzCA,IAAKpG,OAAOsO,OAAO,GAAIqG,EAAO1P,GAAO,GAAGkB,QAE1CiiF,EAAQ,CACNr4E,KAAMhD,EAAM,EAAI,SAAW,WAC3B5G,MAAOnG,OAAOsO,OAAO,GAAIs6E,EAAgBziF,OACzCC,IAAKpG,OAAOsO,OAAO,GAAI0R,EAAgB5Z,MAEzCuO,EAAO+I,GAAM,GAAGtX,IAAMpG,OAAOsO,OAAO,GAAIs6E,EAAgBziF,OACxDwO,EAAO1P,GAAO,GAAGkB,MAAQnG,OAAOsO,OAAO,GAAI0R,EAAgB5Z,KAC3DyiF,EAAa,GAETl0E,EAAO+I,GAAM,GAAGtX,IAAIsP,OAASf,EAAO+I,GAAM,GAAGvX,MAAMuP,SACrDmzE,EAAanpF,EAAKmpF,EAAY,CAC5B,CAAC,QAASl0E,EAAO+I,GAAM,GAAInG,GAC3B,CAAC,OAAQ5C,EAAO+I,GAAM,GAAInG,MAI9BsxE,EAAanpF,EAAKmpF,EAAY,CAC5B,CAAC,QAAST,EAAO7wE,GACjB,CAAC,QAASqxE,EAAiBrxE,GAC3B,CAAC,OAAQqxE,EAAiBrxE,GAC1B,CAAC,QAAS0B,EAAM1B,KAGlBsxE,EAAanpF,EACXmpF,EACAlwE,GACEpB,EAAQhE,OAAOC,WAAW1P,WAAW0S,KACrC7B,EAAOxP,MAAMuY,EAAO,EAAGzY,GACvBsS,IAIJsxE,EAAanpF,EAAKmpF,EAAY,CAC5B,CAAC,OAAQ5vE,EAAM1B,GACf,CAAC,QAASyI,EAAiBzI,GAC3B,CAAC,OAAQyI,EAAiBzI,GAC1B,CAAC,OAAQ6wE,EAAO7wE,KAGd5C,EAAO1P,GAAO,GAAGmB,IAAIsP,OAASf,EAAO1P,GAAO,GAAGkB,MAAMuP,QACvDA,EAAS,EACTmzE,EAAanpF,EAAKmpF,EAAY,CAC5B,CAAC,QAASl0E,EAAO1P,GAAO,GAAIsS,GAC5B,CAAC,OAAQ5C,EAAO1P,GAAO,GAAIsS,MAG7B7B,EAAS,EAGXlF,EAAOmE,EAAQ+I,EAAO,EAAGzY,EAAQyY,EAAO,EAAGmrE,GAC3C5jF,EAAQyY,EAAOmrE,EAAW1mF,OAASuT,EAAS,EAC5C,MAMRzQ,GAAS,EAET,OAASA,EAAQ0P,EAAOxS,QACQ,sBAA1BwS,EAAO1P,GAAO,GAAG8K,OACnB4E,EAAO1P,GAAO,GAAG8K,KAAO,QAI5B,OAAO4E,IAiDT,SAASm0E,GAAUhjF,EAAO4P,GACxB5P,EAAMG,QAAUyP,EAChB5P,EAAM4P,QAAUA,EAChB5P,EAAM6T,cAAgBjE,EA83BxB,MAAMlS,GAAsB,CAC1BulF,GAAMnsE,GACNosE,GAAMpsE,GACNqsE,GAAMrsE,GACNssE,GAAMtsE,GACNusE,GAAMvsE,GACNwsE,GAAMxsE,GACNysE,GAAMzsE,GACN0sE,GAAM1sE,GACN2sE,GAAM3sE,GACN4sE,GAAM5sE,GACN6sE,GAAM7sE,GACN8sE,GAAM9sE,GACN+sE,GAAM/sE,GACNgtE,GAAMnsE,IAIFha,GAAiB,CACrBomF,GAAMzqE,IAIF1b,GAAc,CAClB6C,EAAE,GAAIkZ,GACNlZ,EAAE,GAAIkZ,GACNqqE,GAAMrqE,IAIF9b,GAAkB,CACtBomF,GA/9JiB,CACjB1oF,KAAM,aACN+R,SA4DF,SAA4BV,EAASC,EAAI2D,GACvC,MAAMxC,EAAOhN,KACb,IAAIgM,EAAO,EACX,OAGA,SAAetK,GAGb,OAFAkK,EAAQK,MAAM,cACdL,EAAQK,MAAM,sBACPi3E,EAAgBxhF,IAIzB,SAASwhF,EAAgBxhF,GACvB,OAAa,KAATA,GAAesK,IAAS,GAC1BJ,EAAQO,QAAQzK,GACTwhF,GAGI,OAATxhF,GAAiByJ,GAA0BzJ,IAC7CkK,EAAQQ,KAAK,sBACNY,EAAKoB,UAAYvC,EAAGnK,GAAQyhF,EAAazhF,IAG3C8N,EAAI9N,GAIb,SAASyhF,EAAazhF,GACpB,OAAa,KAATA,GACFkK,EAAQK,MAAM,sBACP4J,EAASnU,IAGL,OAATA,GAAiB0J,GAAmB1J,IACtCkK,EAAQQ,KAAK,cACNP,EAAGnK,IAGR2J,GAAc3J,GACTiK,GAAaC,EAASu3E,EAAc,aAApCx3E,CAAkDjK,IAG3DkK,EAAQK,MAAM,kBACPvI,EAAKhC,IAId,SAASmU,EAASnU,GAChB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTmU,IAGTjK,EAAQQ,KAAK,sBACN+2E,EAAazhF,IAItB,SAASgC,EAAKhC,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAeyJ,GAA0BzJ,IAC5DkK,EAAQQ,KAAK,kBACN+2E,EAAazhF,KAGtBkK,EAAQO,QAAQzK,GACTgC,KA7HT6E,QAIF,SAA2BsF,EAAQ4C,GACjC,IAIIsI,EAGA5G,EAPAf,EAAavD,EAAOxS,OAAS,EAC7BkR,EAAe,EAQkB,eAAjCsB,EAAOtB,GAAc,GAAGtD,OAC1BsD,GAAgB,GAIhB6E,EAAa,EAAI7E,GACc,eAA/BsB,EAAOuD,GAAY,GAAGnI,OAEtBmI,GAAc,GAIiB,uBAA/BvD,EAAOuD,GAAY,GAAGnI,OACrBsD,IAAiB6E,EAAa,GAC5BA,EAAa,EAAI7E,GACmB,eAAnCsB,EAAOuD,EAAa,GAAG,GAAGnI,QAE9BmI,GAAc7E,EAAe,IAAM6E,EAAa,EAAI,GAGlDA,EAAa7E,IACfwM,EAAU,CACR9P,KAAM,iBACN5J,MAAOwO,EAAOtB,GAAc,GAAGlN,MAC/BC,IAAKuO,EAAOuD,GAAY,GAAG9R,KAE7B6S,EAAO,CACLlJ,KAAM,YACN5J,MAAOwO,EAAOtB,GAAc,GAAGlN,MAC/BC,IAAKuO,EAAOuD,GAAY,GAAG9R,IAE3BwN,YAAa,QAEfpD,EAAOmE,EAAQtB,EAAc6E,EAAa7E,EAAe,EAAG,CAC1D,CAAC,QAASwM,EAAStI,GACnB,CAAC,QAAS0B,EAAM1B,GAChB,CAAC,OAAQ0B,EAAM1B,GACf,CAAC,OAAQsI,EAAStI,MAItB,OAAO5C,IAs6JPo0E,GAAMtsE,GACNwsE,GAAM,CAACnpE,GAAiBrD,IACxBytE,GAAM5pE,GACN6pE,GAAMrqE,GACNsqE,GAAM3tE,GACN4tE,GAAMloE,GACNmoE,IAAOnoE,IAIHve,GAAoB,CACxB2mF,GAAMlD,GACNmD,GAAMjD,IAIF1jF,GAAkB,CACtB0C,EAAE,GAAIihF,GACNjhF,EAAE,GAAIihF,GACNjhF,EAAE,GAAIihF,GACNiD,GA5uCsB,CACtBppF,KAAM,kBACN+R,SAKF,SAAiCV,EAASC,EAAI2D,GAC5C,MAAMxC,EAAOhN,KACb,OAGA,SAAe0B,GAKb,OAJAkK,EAAQK,MAAM,cACdL,EAAQK,MAAM,oBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,oBACNwK,GAIT,SAASA,EAAKlV,GACZ,OAAa,KAATA,GACFkK,EAAQK,MAAM,eACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,cACNyK,GAGFrH,EAAI9N,GAIb,SAASmV,EAAMnV,GAQb,OAAgB,KAATA,GAAe,2BAA4BsL,EAAKP,OAAOC,WAC1D8C,EAAI9N,GACJmK,EAAGnK,KAzCTmQ,WAAY8uE,GAAS9uE,YA0uCrB4xE,GAAMlD,GACN0B,GAAMP,GACN0B,GAAM,CAz6BS,CACf7oF,KAAM,WACN+R,SAIF,SAA0BV,EAASC,EAAI2D,GACrC,IAAIxD,EAAO,EACX,OAGA,SAAetK,GAMb,OALAkK,EAAQK,MAAM,YACdL,EAAQK,MAAM,kBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,kBACbR,EAAQK,MAAM,oBACP2K,GAIT,SAASA,EAAKlV,GACZ,OAAIiJ,EAAWjJ,IACbkK,EAAQO,QAAQzK,GACTkiF,GAGF34E,EAAWvJ,GAAQmiF,EAAWniF,GAAQ8N,EAAI9N,GAInD,SAASkiF,EAAmBliF,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAeqJ,EAAkBrJ,GAClEoiF,EAAyBpiF,GACzBmiF,EAAWniF,GAIjB,SAASoiF,EAAyBpiF,GAChC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTqiF,IAIG,KAATriF,GAAwB,KAATA,GAAwB,KAATA,GAAeqJ,EAAkBrJ,KAChEsK,IAAS,IAETJ,EAAQO,QAAQzK,GACToiF,GAGFD,EAAWniF,GAIpB,SAASqiF,EAAUriF,GACjB,OAAa,KAATA,GACFkK,EAAQQ,KAAK,oBACN9M,EAAIoC,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,GAAewJ,EAAaxJ,GACvD8N,EAAI9N,IAGbkK,EAAQO,QAAQzK,GACTqiF,GAIT,SAASF,EAAWniF,GAClB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBsK,EAAO,EACAg4E,GAGL/4E,EAAWvJ,IACbkK,EAAQO,QAAQzK,GACTmiF,GAGFr0E,EAAI9N,GAIb,SAASsiF,EAAiBtiF,GACxB,OAAOqJ,EAAkBrJ,GAAQuiF,EAAWviF,GAAQ8N,EAAI9N,GAI1D,SAASuiF,EAAWviF,GAClB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBsK,EAAO,EACAg4E,GAGI,KAATtiF,GAEFkK,EAAQQ,KAAK,oBAAoBnD,KAAO,gBACjC3J,EAAIoC,IAGNwiF,EAAWxiF,GAIpB,SAASwiF,EAAWxiF,GAClB,OAAc,KAATA,GAAeqJ,EAAkBrJ,KAAUsK,IAAS,IACvDJ,EAAQO,QAAQzK,GACA,KAATA,EAAcwiF,EAAaD,GAG7Bz0E,EAAI9N,GAIb,SAASpC,EAAIoC,GAKX,OAJAkK,EAAQK,MAAM,kBACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,kBACbR,EAAQQ,KAAK,YACNP,KAeM,CACftR,KAAM,WACN+R,SAIF,SAA0BV,EAASC,EAAI2D,GACrC,MAAMxC,EAAOhN,KAGb,IAAI4V,EAGA8D,EAGAvb,EAGAwW,EACJ,OAGA,SAAejT,GAIb,OAHAkK,EAAQK,MAAM,YACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQzK,GACTkV,GAIT,SAASA,EAAKlV,GACZ,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTyiF,GAGI,KAATziF,GACFkK,EAAQO,QAAQzK,GACTkY,GAGI,KAATlY,GACFkK,EAAQO,QAAQzK,GACT0iF,GAGLz5E,EAAWjJ,IACbkK,EAAQO,QAAQzK,GACT2iF,GAGF70E,EAAI9N,GAIb,SAASyiF,EAAgBziF,GACvB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACT4iF,GAGI,KAAT5iF,GACFkK,EAAQO,QAAQzK,GAChBgY,EAAS,SACTvb,EAAQ,EACDomF,GAGL55E,EAAWjJ,IACbkK,EAAQO,QAAQzK,GACT7F,GAGF2T,EAAI9N,GAIb,SAAS4iF,EAAY5iF,GACnB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACT8iF,GAGFh1E,EAAI9N,GAIb,SAAS8iF,EAAa9iF,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZ8N,EAAI9N,GAGA,KAATA,GACFkK,EAAQO,QAAQzK,GACT+iF,GAGFC,EAAQhjF,GAIjB,SAAS+iF,EAAiB/iF,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZ8N,EAAI9N,GAGNgjF,EAAQhjF,GAIjB,SAASgjF,EAAQhjF,GACf,OAAa,OAATA,EACK8N,EAAI9N,GAGA,KAATA,GACFkK,EAAQO,QAAQzK,GACTijF,GAGLv5E,GAAmB1J,IACrBiT,EAAc+vE,EACPE,EAAaljF,KAGtBkK,EAAQO,QAAQzK,GACTgjF,GAIT,SAASC,EAAajjF,GACpB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTpC,GAGFolF,EAAQhjF,GAIjB,SAAS6iF,EAAU7iF,GACjB,OAAIA,IAASgY,EAAOzY,WAAW9C,MAC7ByN,EAAQO,QAAQzK,GACTvD,IAAUub,EAAOre,OAASwpF,EAAQN,GAGpC/0E,EAAI9N,GAIb,SAASmjF,EAAMnjF,GACb,OAAa,OAATA,EACK8N,EAAI9N,GAGA,KAATA,GACFkK,EAAQO,QAAQzK,GACTojF,GAGL15E,GAAmB1J,IACrBiT,EAAckwE,EACPD,EAAaljF,KAGtBkK,EAAQO,QAAQzK,GACTmjF,GAIT,SAASC,EAAWpjF,GAClB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTqjF,GAGFF,EAAMnjF,GAIf,SAASqjF,EAASrjF,GAChB,OAAa,KAATA,EACKpC,EAAIoC,GAGA,KAATA,GACFkK,EAAQO,QAAQzK,GACTqjF,GAGFF,EAAMnjF,GAIf,SAAS7F,EAAY6F,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZpC,EAAIoC,GAGT0J,GAAmB1J,IACrBiT,EAAc9Y,EACP+oF,EAAaljF,KAGtBkK,EAAQO,QAAQzK,GACT7F,GAIT,SAASuoF,EAAY1iF,GACnB,OAAa,OAATA,EACK8N,EAAI9N,GAGA,KAATA,GACFkK,EAAQO,QAAQzK,GACTsjF,GAGL55E,GAAmB1J,IACrBiT,EAAcyvE,EACPQ,EAAaljF,KAGtBkK,EAAQO,QAAQzK,GACT0iF,GAIT,SAASY,EAAiBtjF,GACxB,OAAgB,KAATA,EAAcpC,EAAIoC,GAAQ0iF,EAAY1iF,GAI/C,SAASkY,EAAclY,GACrB,OAAIiJ,EAAWjJ,IACbkK,EAAQO,QAAQzK,GACTujF,GAGFz1E,EAAI9N,GAIb,SAASujF,EAASvjF,GAChB,OAAa,KAATA,GAAeqJ,EAAkBrJ,IACnCkK,EAAQO,QAAQzK,GACTujF,GAGFC,EAAgBxjF,GAIzB,SAASwjF,EAAgBxjF,GACvB,OAAI0J,GAAmB1J,IACrBiT,EAAcuwE,EACPN,EAAaljF,IAGlB2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACTwjF,GAGF5lF,EAAIoC,GAIb,SAAS2iF,EAAQ3iF,GACf,OAAa,KAATA,GAAeqJ,EAAkBrJ,IACnCkK,EAAQO,QAAQzK,GACT2iF,GAGI,KAAT3iF,GAAwB,KAATA,GAAeyJ,GAA0BzJ,GACnDyjF,EAAezjF,GAGjB8N,EAAI9N,GAIb,SAASyjF,EAAezjF,GACtB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACTpC,GAGI,KAAToC,GAAwB,KAATA,GAAeiJ,EAAWjJ,IAC3CkK,EAAQO,QAAQzK,GACT0jF,GAGLh6E,GAAmB1J,IACrBiT,EAAcwwE,EACPP,EAAaljF,IAGlB2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACTyjF,GAGF7lF,EAAIoC,GAIb,SAAS0jF,EAAqB1jF,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAqJ,EAAkBrJ,IAElBkK,EAAQO,QAAQzK,GACT0jF,GAGFC,EAA0B3jF,GAInC,SAAS2jF,EAA0B3jF,GACjC,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GACT4jF,GAGLl6E,GAAmB1J,IACrBiT,EAAc0wE,EACPT,EAAaljF,IAGlB2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACT2jF,GAGFF,EAAezjF,GAIxB,SAAS4jF,EAA4B5jF,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8N,EAAI9N,GAGA,KAATA,GAAwB,KAATA,GACjBkK,EAAQO,QAAQzK,GAChBkU,EAASlU,EACF6jF,GAGLn6E,GAAmB1J,IACrBiT,EAAc2wE,EACPV,EAAaljF,IAGlB2J,GAAc3J,IAChBkK,EAAQO,QAAQzK,GACT4jF,IAGT15E,EAAQO,QAAQzK,GAChBkU,OAAS7V,EACFylF,GAIT,SAASD,EAA4B7jF,GACnC,OAAIA,IAASkU,GACXhK,EAAQO,QAAQzK,GACT+jF,GAGI,OAAT/jF,EACK8N,EAAI9N,GAGT0J,GAAmB1J,IACrBiT,EAAc4wE,EACPX,EAAaljF,KAGtBkK,EAAQO,QAAQzK,GACT6jF,GAIT,SAASE,EAAiC/jF,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAeyJ,GAA0BzJ,GACnDyjF,EAAezjF,GAGjB8N,EAAI9N,GAIb,SAAS8jF,EAA8B9jF,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEO8N,EAAI9N,GAGA,KAATA,GAAeyJ,GAA0BzJ,GACpCyjF,EAAezjF,IAGxBkK,EAAQO,QAAQzK,GACT8jF,GAMT,SAASZ,EAAaljF,GAKpB,OAJAkK,EAAQQ,KAAK,gBACbR,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNT,GACLC,EACAiN,EACA,aACA7L,EAAKP,OAAOC,WAAWxP,QAAQwS,KAAK1L,SAAS,qBACzCjE,EACA,GAKR,SAAS8Y,EAAYnX,GAEnB,OADAkK,EAAQK,MAAM,gBACP0I,EAAYjT,GAIrB,SAASpC,EAAIoC,GACX,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,YACNP,GAGF2D,EAAI9N,OAmVbqhF,GAtUqB,CACrBxoF,KAAM,iBACN+R,SAKF,SAAgCV,EAASC,EAAI2D,GAC3C,MAAMxC,EAAOhN,KACb,OAGA,SAAe0B,GAMb,OALAkK,EAAQK,MAAM,aACdL,EAAQK,MAAM,eACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,eACbR,EAAQQ,KAAK,aACNyK,GAIT,SAASA,EAAMnV,GAQb,OAAgB,KAATA,GAAe,2BAA4BsL,EAAKP,OAAOC,WAC1D8C,EAAI9N,GACJmK,EAAGnK,KA7BTmQ,WAAY8uE,GAAS9uE,YAoUrB6xE,GAAM,CA1RgB,CACtBnpF,KAAM,kBACN+R,SAIF,SAAiCV,EAASC,EAAI2D,GAC5C,OAGA,SAAe9N,GAIb,OAHAkK,EAAQK,MAAM,mBACdL,EAAQK,MAAM,gBACdL,EAAQO,QAAQzK,GACTkV,GAIT,SAASA,EAAKlV,GACZ,OAAI0J,GAAmB1J,IACrBkK,EAAQQ,KAAK,gBACbR,EAAQQ,KAAK,mBACNP,EAAGnK,IAGL8N,EAAI9N,MAiQW++E,IACxBiF,GAAM/E,GACN2C,GAAM5B,GACN6B,GApPyB,CACzBhpF,KAAM,WACN+R,SA0EF,SAA0BV,EAASC,EAAI2D,GAErC,IAGIxD,EAGAa,EANA2O,EAAW,EAOf,OAGA,SAAe9Z,GAGb,OAFAkK,EAAQK,MAAM,YACdL,EAAQK,MAAM,oBACP61E,EAAgBpgF,IAIzB,SAASogF,EAAgBpgF,GACvB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChB8Z,IACOsmE,IAGTl2E,EAAQQ,KAAK,oBACNowC,EAAI96C,IAIb,SAAS86C,EAAI96C,GAEX,OAAa,OAATA,EACK8N,EAAI9N,GAIA,KAATA,GACFmL,EAAQjB,EAAQK,MAAM,oBACtBD,EAAO,EACAkN,EAAgBxX,IAGZ,KAATA,GACFkK,EAAQK,MAAM,SACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,SACNowC,GAGLpxC,GAAmB1J,IACrBkK,EAAQK,MAAM,cACdL,EAAQO,QAAQzK,GAChBkK,EAAQQ,KAAK,cACNowC,IAGT5wC,EAAQK,MAAM,gBACPvI,EAAKhC,IAKd,SAASgC,EAAKhC,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACA0J,GAAmB1J,IAEnBkK,EAAQQ,KAAK,gBACNowC,EAAI96C,KAGbkK,EAAQO,QAAQzK,GACTgC,GAKT,SAASwV,EAAgBxX,GAEvB,OAAa,KAATA,GACFkK,EAAQO,QAAQzK,GAChBsK,IACOkN,GAGLlN,IAASwP,GACX5P,EAAQQ,KAAK,oBACbR,EAAQQ,KAAK,YACNP,EAAGnK,KAGZmL,EAAM5D,KAAO,eACNvF,EAAKhC,MAzKd6G,QAKF,SAAyBsF,GACvB,IAII1P,EAGA8N,EAPA05E,EAAgB93E,EAAOxS,OAAS,EAChCuqF,EAAiB,EAQrB,IACsC,eAAnC/3E,EAAO+3E,GAAgB,GAAG38E,MACU,UAAnC4E,EAAO+3E,GAAgB,GAAG38E,QACO,eAAlC4E,EAAO83E,GAAe,GAAG18E,MACU,UAAlC4E,EAAO83E,GAAe,GAAG18E,MAI3B,IAFA9K,EAAQynF,IAECznF,EAAQwnF,GACf,GAA8B,iBAA1B93E,EAAO1P,GAAO,GAAG8K,KAAyB,CAE5C4E,EAAO+3E,GAAgB,GAAG38E,KAAO,kBACjC4E,EAAO83E,GAAe,GAAG18E,KAAO,kBAChC28E,GAAkB,EAClBD,GAAiB,EACjB,MAKNxnF,EAAQynF,EAAiB,EACzBD,IAEA,OAASxnF,GAASwnF,QACF5lF,IAAVkM,EACE9N,IAAUwnF,GAA2C,eAA1B93E,EAAO1P,GAAO,GAAG8K,OAC9CgD,EAAQ9N,GAGVA,IAAUwnF,GACgB,eAA1B93E,EAAO1P,GAAO,GAAG8K,OAEjB4E,EAAO5B,GAAO,GAAGhD,KAAO,eAEpB9K,IAAU8N,EAAQ,IACpB4B,EAAO5B,GAAO,GAAG3M,IAAMuO,EAAO1P,EAAQ,GAAG,GAAGmB,IAC5CuO,EAAOnE,OAAOuC,EAAQ,EAAG9N,EAAQ8N,EAAQ,GACzC05E,GAAiBxnF,EAAQ8N,EAAQ,EACjC9N,EAAQ8N,EAAQ,GAGlBA,OAAQlM,GAIZ,OAAO8N,GA3DPjB,SA+DF,SAA4BlL,GAE1B,OACW,KAATA,GACgD,oBAAhD1B,KAAK6N,OAAO7N,KAAK6N,OAAOxS,OAAS,GAAG,GAAG4N,QAiLrCjM,GAAa,CACjB0S,KAAM,CAACgyE,GAAW9vE,KAId3U,GAA8B,CAClCyS,KAAM,CAAC,GAAI,KAIPxS,GAAU,CACdwS,KAAM,IAuBR,SAASm2E,GAAYvrF,EAAU,IAG7B,MAMMmS,EAAS,CACbiM,QAAS,GACThK,KAAM,GACNhC,WAprQJ,SAA2Bo5E,GAEzB,MAAM37E,EAAM,GACZ,IAAIhM,GAAS,EAEb,OAASA,EAAQ2nF,EAAWzqF,QAC1B6O,EAAgBC,EAAK27E,EAAW3nF,IAGlC,OAAOgM,EAkqQY47E,CAEjB,CAACtpF,GAA4BupF,OAAO1rF,EAAQwrF,YAAc,KAQ1D/sE,QAAStD,EAAOpJ,IAChBoD,SAAUgG,EAAO1I,IACjB+B,KAAM2G,EAAO3G,IACbm3E,OAAQxwE,EAAO1D,IACfI,KAAMsD,EAAOxD,KAEf,OAAOxF,EAKP,SAASgJ,EAAO/D,GACd,OAGA,SAAiB3H,GACf,OAAO+I,GAAgBrG,EAAQiF,EAAS3H,KAoB9C,MAAMm8E,GAAS,cAiJf,SAASC,GAAgCzrF,EAAO0L,GAC9C,MAAM1E,EAAOwF,OAAOk/E,SAAS1rF,EAAO0L,GAEpC,OAEE1E,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,SAAX,MAAPA,IACkB,SAAX,MAAPA,IACDA,EAAO,QAEA,SAGFuG,OAAOyD,aAAahK,GAM7B,MAAM2kF,GACJ,oEAqBF,SAASC,GAAOC,EAAIC,EAAIC,GACtB,GAAID,EAEF,OAAOA,EAKT,GAAa,KAFAC,EAAGxlF,WAAW,GAEV,CACf,MAAMylF,EAAOD,EAAGxlF,WAAW,GACrB0lF,EAAe,MAATD,GAAyB,KAATA,EAC5B,OAAOP,GAAgCM,EAAGpoF,MAAMsoF,EAAM,EAAI,GAAIA,EAAM,GAAK,IAG3E,OAAOrG,GAA8BmG,IAAOF,EAgG9C,MAAMK,GAAU,GAAGxtF,eAObytF,GAcJ,SAAUnsF,EAAO2J,EAAU/J,GAMzB,MALwB,kBAAb+J,IACT/J,EAAU+J,EACVA,OAAWtE,GAejB,SAAkBzF,EAAU,IAG1B,MAAMwsF,EAASC,GACb,CACEC,WAAY,GACZC,eAAgB,CACd,WACA,WACA,UACA,YACA,UAEFh7E,MAAO,CACLi7E,SAAUC,EAAOC,IACjBC,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYL,EAAO9tE,IACnBouE,WAAYN,EAAOM,GACnBhH,gBAAiB6G,EACjB/G,mBAAoB+G,EACpBjsE,WAAY8rE,EAAOO,GACnBC,oBAAqBjuE,EACrBkuE,oBAAqBluE,EACrBf,aAAcwuE,EAAOO,EAAUhuE,GAC/BmuE,SAAUV,EAAOU,EAAUnuE,GAC3BouE,aAAcR,EACd5jF,KAAM4jF,EACNS,cAAeT,EACfluE,WAAY+tE,EAAO/tE,GACnB4uE,4BAA6BtuE,EAC7BuuE,sBAAuBvuE,EACvBwuE,sBAAuBxuE,EACvByuE,SAAUhB,EAAOgB,IACjBC,gBAAiBjB,EAAOkB,IACxBC,kBAAmBnB,EAAOkB,IAC1B7uE,SAAU2tE,EAAOoB,GAAM7uE,GACvB8uE,aAAclB,EACdmB,SAAUtB,EAAOoB,GAAM7uE,GACvBgvE,aAAcpB,EACd5kC,MAAOykC,EAAOzkC,IACd/qC,MAAO+B,EACP0tE,KAAMD,EAAOC,IACbuB,SAAUxB,EAAOwB,IACjBC,cAAeC,EACfC,YAAa3B,EAAOx9E,GAAMo/E,GAC1BC,cAAe7B,EAAOx9E,IACtBsP,UAAWkuE,EAAOluE,IAClBgwE,UAAWC,EACXC,gBAAiBzvE,EACjB0vE,0BAA2B1vE,EAC3B2vE,oBAAqB3vE,EACrB4vE,cAAenC,EAAO9tE,IACtBkwE,OAAQpC,EAAOoC,IACfC,cAAerC,EAAOqC,KAExBp9E,KAAM,CACJo7E,WAAYiC,IACZC,mBAAoBC,EACpBzC,SAAUuC,IACVlC,cAAeqC,EACfvC,iBAAkBwC,EAClBpC,WAAYgC,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzB/uE,WAAYouE,EAAOY,GACnBC,gBAAiBC,EACjB5C,oBAAqB6C,EACrB5C,oBAAqB6C,EACrB1C,cAAegC,EACfpxE,aAAc8wE,EAAOiB,GACrB7C,SAAU4B,EAAOkB,GACjB7C,aAAciC,EACdrmF,KAAMqmF,EACN3wE,WAAYqwE,IACZzB,4BAA6B4C,EAC7B3C,sBAAuB4C,EACvB3C,sBAAuB4C,EACvB3C,SAAUsB,IACVrB,gBAAiBqB,EAAOsB,GACxBzC,kBAAmBmB,EAAOsB,GAC1BvxE,SAAUiwE,EAAOuB,GACjBxC,aAAcuB,EACdtB,SAAUgB,EAAOwB,GACjBvC,aAAcqB,EACdrnC,MAAO+mC,EAAOyB,GACdvzE,MAAOwzE,EACPC,UAAWC,EACX3K,WAAY4K,EACZlE,KAAMqC,EAAO8B,GACb5C,SAAUc,IACVX,YAAaW,IACbT,cAAeS,IACfxwE,UAAWwwE,IACXN,gBAAiBqC,EACjBpC,0BAA2BqC,EAC3BpC,oBAAqBqC,EACrBC,SAAUC,EACVtC,cAAeG,EAAOoC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnB1C,OAAQE,IACRD,cAAeC,MAGnBnvF,EAAQ4xF,iBAAmB,IAIvBxoF,EAAO,GACb,OAAO2E,EAMP,SAASA,EAAQwF,GAEf,IAAIpF,EAAO,CACTQ,KAAM,OACNQ,SAAU,IAIZ,MAGM0iF,EAAa,GAGbC,EAAY,GAGZ37E,EAAU,CACdvQ,MAVY,CAACuI,GAWb0jF,WAAAA,EACArF,OAAAA,EACA76E,MAAAA,EACAG,KAAAA,EACAsN,OAAAA,EACA2yE,OAAAA,EACAC,QAAAA,EACAC,QAAAA,GAEF,IAAIpuF,GAAS,EAEb,OAASA,EAAQ0P,EAAOxS,QAGtB,GAC4B,gBAA1BwS,EAAO1P,GAAO,GAAG8K,MACS,kBAA1B4E,EAAO1P,GAAO,GAAG8K,KAEjB,GAAyB,UAArB4E,EAAO1P,GAAO,GAChBiuF,EAAUxzF,KAAKuF,OACV,CAELA,EAAQquF,EAAY3+E,EADPu+E,EAAUjnF,MACWhH,GAOxC,IAFAA,GAAS,IAEAA,EAAQ0P,EAAOxS,QAAQ,CAC9B,MAAMoxF,EAAU3F,EAAOj5E,EAAO1P,GAAO,IAEjCyoF,GAAQ/sF,KAAK4yF,EAAS5+E,EAAO1P,GAAO,GAAG8K,OACzCwjF,EAAQ5+E,EAAO1P,GAAO,GAAG8K,MAAMpP,KAC7BX,OAAOsO,OACL,CACEiK,eAAgB5D,EAAO1P,GAAO,GAAGsT,gBAEnChB,GAEF5C,EAAO1P,GAAO,IAKpB,GAAIguF,EAAW9wF,OAAS,EAAG,CACzB,MAAMmW,EAAO26E,EAAWA,EAAW9wF,OAAS,IAC5BmW,EAAK,IAAMk7E,IACnB7yF,KAAK4W,OAAS1Q,EAAWyR,EAAK,IAyBxC,IAtBA/I,EAAK3J,SAAW,CACdO,MAAOL,EACL6O,EAAOxS,OAAS,EACZwS,EAAO,GAAG,GAAGxO,MACb,CACEH,KAAM,EACNC,OAAQ,EACRyP,OAAQ,IAGhBtP,IAAKN,EACH6O,EAAOxS,OAAS,EACZwS,EAAOA,EAAOxS,OAAS,GAAG,GAAGiE,IAC7B,CACEJ,KAAM,EACNC,OAAQ,EACRyP,OAAQ,KAIlBzQ,GAAS,IAEAA,EAAQ2oF,EAAOE,WAAW3rF,QACjCoN,EAAOq+E,EAAOE,WAAW7oF,GAAOsK,IAASA,EAG3C,OAAOA,EAST,SAAS+jF,EAAY3+E,EAAQxO,EAAOhE,GAClC,IAKIstF,EAGA34E,EAGA28E,EAGA12E,EAdA9X,EAAQkB,EAAQ,EAChButF,GAAoB,EACpBC,GAAa,EAcjB,OAAS1uF,GAAS9C,GAAQ,CACxB,MAAM0U,EAAQlC,EAAO1P,GAuCrB,GApCoB,kBAAlB4R,EAAM,GAAG9G,MACS,gBAAlB8G,EAAM,GAAG9G,MACS,eAAlB8G,EAAM,GAAG9G,MAEQ,UAAb8G,EAAM,GACR68E,IAEAA,IAGF32E,OAAWlW,GACgB,oBAAlBgQ,EAAM,GAAG9G,KACD,UAAb8G,EAAM,MAEN44E,GACC1yE,GACA22E,GACAD,IAEDA,EAAsBxuF,GAGxB8X,OAAWlW,GAGK,eAAlBgQ,EAAM,GAAG9G,MACS,kBAAlB8G,EAAM,GAAG9G,MACS,mBAAlB8G,EAAM,GAAG9G,MACS,mBAAlB8G,EAAM,GAAG9G,MACS,6BAAlB8G,EAAM,GAAG9G,OAITgN,OAAWlW,IAIT6sF,GACa,UAAb78E,EAAM,IACY,mBAAlBA,EAAM,GAAG9G,OACY,IAAtB2jF,GACc,SAAb78E,EAAM,KACa,kBAAlBA,EAAM,GAAG9G,MACU,gBAAlB8G,EAAM,GAAG9G,MACb,CACA,GAAI0/E,EAAU,CACZ,IAAImE,EAAY3uF,EAGhB,IAFA6R,OAAYjQ,EAEL+sF,KAAa,CAClB,MAAMC,EAAYl/E,EAAOi/E,GAEzB,GACwB,eAAtBC,EAAU,GAAG9jF,MACS,oBAAtB8jF,EAAU,GAAG9jF,KACb,CACA,GAAqB,SAAjB8jF,EAAU,GAAe,SAEzB/8E,IACFnC,EAAOmC,GAAW,GAAG/G,KAAO,kBAC5B4jF,GAAa,GAGfE,EAAU,GAAG9jF,KAAO,aACpB+G,EAAY88E,OACP,GACiB,eAAtBC,EAAU,GAAG9jF,MACS,qBAAtB8jF,EAAU,GAAG9jF,MACS,+BAAtB8jF,EAAU,GAAG9jF,MACS,qBAAtB8jF,EAAU,GAAG9jF,MACS,mBAAtB8jF,EAAU,GAAG9jF,KAIb,MAKF0jF,KACE38E,GAAa28E,EAAsB38E,KAGrC24E,EAASqE,SAAU,GAGrBrE,EAASrpF,IAAMpG,OAAOsO,OACpB,GACAwI,EAAYnC,EAAOmC,GAAW,GAAG3Q,MAAQ0Q,EAAM,GAAGzQ,KAEpDuO,EAAOnE,OAAOsG,GAAa7R,EAAO,EAAG,CAAC,OAAQwqF,EAAU54E,EAAM,KAC9D5R,IACA9C,IAGoB,mBAAlB0U,EAAM,GAAG9G,OACX0/E,EAAW,CACT1/E,KAAM,WAEN+jF,SAAS,EACT3tF,MAAOnG,OAAOsO,OAAO,GAAIuI,EAAM,GAAG1Q,QAGpCwO,EAAOnE,OAAOvL,EAAO,EAAG,CAAC,QAASwqF,EAAU54E,EAAM,KAClD5R,IACA9C,IACAsxF,OAAsB5sF,EACtBkW,GAAW,IAMjB,OADApI,EAAOxO,GAAO,GAAG2tF,QAAUH,EACpBxxF,EAOT,SAASixF,EAAQtyF,EAAKU,GACpBgJ,EAAK1J,GAAOU,EASd,SAAS6xF,EAAQvyF,GACf,OAAO0J,EAAK1J,GAOd,SAASgF,EAAM1C,GACb,MAAO,CACL4C,KAAM5C,EAAE4C,KACRC,OAAQ7C,EAAE6C,OACVyP,OAAQtS,EAAEsS,QASd,SAASu4E,EAAO1xE,EAAQgtB,GACtB,OAAO7rB,EAOP,SAASA,EAAK/J,GACZZ,EAAMpS,KAAKmG,KAAMyV,EAAO5I,GAAQA,GAC5B41B,GAAKA,EAAI5oC,KAAKmG,KAAM6M,IAK5B,SAAS6M,IACP1Z,KAAKE,MAAMtH,KAAK,CACdqQ,KAAM,WACNQ,SAAU,KAad,SAASwC,EAAM/D,EAAM2E,EAAOogF,GAU1B,OATejtF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAEvCoO,SAAS7Q,KAAKsP,GACrBlI,KAAKE,MAAMtH,KAAKsP,GAChBlI,KAAKmsF,WAAWvzF,KAAK,CAACiU,EAAOogF,IAE7B/kF,EAAKpJ,SAAW,CACdO,MAAOL,EAAM6N,EAAMxN,QAEd6I,EAOT,SAASuhF,EAAOhnD,GACd,OAAO2+C,EAOP,SAASA,EAAMv0E,GACT41B,GAAKA,EAAI5oC,KAAKmG,KAAM6M,GACxBT,EAAKvS,KAAKmG,KAAM6M,IAWpB,SAAST,EAAKS,EAAOqgF,GACnB,MAAMhlF,EAAOlI,KAAKE,MAAMiF,MAClByR,EAAO5W,KAAKmsF,WAAWhnF,MAE7B,IAAKyR,EACH,MAAM,IAAIpX,MACR,iBACEqN,EAAM5D,KACN,MACArK,EAAkB,CAChBS,MAAOwN,EAAMxN,MACbC,IAAKuN,EAAMvN,MAEb,yBAEC,GAAIsX,EAAK,GAAG3N,OAAS4D,EAAM5D,KAChC,GAAIikF,EACFA,EAAYrzF,KAAKmG,KAAM6M,EAAO+J,EAAK,QAC9B,EACWA,EAAK,IAAM81E,IACnB7yF,KAAKmG,KAAM6M,EAAO+J,EAAK,IAKnC,OADA1O,EAAKpJ,SAASQ,IAAMN,EAAM6N,EAAMvN,KACzB4I,EAOT,SAASmkF,IACP,OAjqSJ,SAAuCnkF,EAAM5N,GAC3C,IAAIgP,gBAACA,GAAkB,GAAQhP,GAAW,GAC1C,OAAO+O,EAAInB,EAAMoB,GA+pSR6jF,CAA8BntF,KAAKE,MAAMiF,OAOlD,SAAS4jF,IACPuD,EAAQ,+BAA+B,GAIzC,SAASzD,EAAqBh8E,GAC5B,GAAI0/E,EAAQ,+BAAgC,CAGxCvsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GACxBgE,MAAQ6H,OAAOk/E,SAASpmF,KAAKyR,eAAe5E,GAAQ,IAC7Dy/E,EAAQ,gCAKZ,SAAS9B,IACP,MAAM9mF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BorD,KAAO/iD,EAId,SAAS+mF,IACP,MAAM/mF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5B0gB,KAAOrY,EAId,SAAS6mF,IAEHgC,EAAQ,oBACZvsF,KAAK0Z,SACL4yE,EAAQ,kBAAkB,IAI5B,SAASjC,IACP,MAAM3mF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BX,MAAQgJ,EAAK0U,QAAQ,2BAA4B,IACtDk0E,EAAQ,kBAIV,SAAS5B,IACP,MAAMhnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BX,MAAQgJ,EAAK0U,QAAQ,eAAgB,IAI5C,SAASyyE,EAA4Bh+E,GAEnC,MAAM8K,EAAQ3X,KAAKqsF,SACbnkF,EAEJlI,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GACjC6M,EAAKyP,MAAQA,EACbzP,EAAKqQ,WAAaJ,GAChBnY,KAAKyR,eAAe5E,IACpBvO,cAIJ,SAASwsF,IACP,MAAMpnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5B2c,MAAQtU,EAIf,SAASknF,IACP,MAAMlnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BwC,IAAM6F,EAIb,SAASimF,EAAyB98E,GAChC,MAAM3E,EAEJlI,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAEjC,IAAK6M,EAAKklF,MAAO,CACf,MAAMA,EAAQptF,KAAKyR,eAAe5E,GAAOxR,OACzC6M,EAAKklF,MAAQA,GAKjB,SAASnB,IACPK,EAAQ,gCAAgC,GAI1C,SAASP,EAAgCl/E,GAGrC7M,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5B+xF,MAAqD,KAA7CptF,KAAKyR,eAAe5E,GAAO5L,WAAW,GAAY,EAAI,EAIrE,SAAS4qF,IACPS,EAAQ,gCAIV,SAAShF,EAAYz6E,GACnB,MAAMwgF,EAEJrtF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAGjC,IAAImW,EAAO67E,EAAO5jF,SAAS4jF,EAAO5jF,SAASpO,OAAS,GAE/CmW,GAAsB,SAAdA,EAAKvI,OAEhBuI,EAAOW,KAEPX,EAAK1S,SAAW,CACdO,MAAOL,EAAM6N,EAAMxN,QAGrBguF,EAAO5jF,SAAS7Q,KAAK4Y,IAGvBxR,KAAKE,MAAMtH,KAAK4Y,GAIlB,SAASu4E,EAAWl9E,GAClB,MAAM2E,EAAOxR,KAAKE,MAAMiF,MACxBqM,EAAK9W,OAASsF,KAAKyR,eAAe5E,GAClC2E,EAAK1S,SAASQ,IAAMN,EAAM6N,EAAMvN,KAIlC,SAASgsF,EAAiBz+E,GACxB,MAAM4D,EAAUzQ,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAG/C,GAAIkxF,EAAQ,eAAgB,CAI1B,OAHa97E,EAAQhH,SAASgH,EAAQhH,SAASpO,OAAS,GACnDyD,SAASQ,IAAMN,EAAM6N,EAAMvN,UAChCgtF,EAAQ,gBAKPC,EAAQ,iCACTzF,EAAOG,eAAejjF,SAASyM,EAAQxH,QAEvCq+E,EAAYztF,KAAKmG,KAAM6M,GACvBk9E,EAAWlwF,KAAKmG,KAAM6M,IAK1B,SAASk+E,IACPuB,EAAQ,eAAe,GAIzB,SAAStB,IACP,MAAMtnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BX,MAAQgJ,EAIf,SAASunF,IACP,MAAMvnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BX,MAAQgJ,EAIf,SAASinF,IACP,MAAMjnF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BX,MAAQgJ,EAIf,SAAS6nF,IACP,MAAM96E,EAEJzQ,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAE7BkxF,EAAQ,gBACV97E,EAAQxH,MAAQ,YAEhBwH,EAAQ68E,cAAgBf,EAAQ,kBAAoB,kBAE7C97E,EAAQ5S,WACR4S,EAAQuH,eAGRvH,EAAQ8H,kBAER9H,EAAQkH,OAGjB20E,EAAQ,iBAIV,SAASpB,IACP,MAAMz6E,EAEJzQ,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAE7BkxF,EAAQ,gBACV97E,EAAQxH,MAAQ,YAEhBwH,EAAQ68E,cAAgBf,EAAQ,kBAAoB,kBAE7C97E,EAAQ5S,WACR4S,EAAQuH,eAGRvH,EAAQ8H,kBAER9H,EAAQkH,OAGjB20E,EAAQ,iBAIV,SAASjB,EAAgBx+E,GACvB,MAAM0gF,EAEJvtF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC3B4qF,EAASjmF,KAAKyR,eAAe5E,GACnC0gF,EAAS51E,MAv5Bb,SAAsBjd,GACpB,OAAOA,EAAM0d,QAAQiuE,GAA4BC,IAs5B9BkH,CAAavH,GAC9BsH,EAASh1E,WAAaJ,GAAoB8tE,GAAQ3nF,cAIpD,SAAS6sF,IACP,MAAMsC,EAEJztF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC3BX,EAAQsF,KAAKqsF,SACbnkF,EAEJlI,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAEjCixF,EAAQ,eAAe,GAEL,SAAdpkF,EAAKe,KAEPf,EAAKuB,SAAWgkF,EAAShkF,SAEzBvB,EAAKqB,IAAM7O,EAKf,SAAS+wF,IACP,MAAM/nF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BwC,IAAM6F,EAIb,SAASgoF,IACP,MAAMhoF,EAAO1D,KAAKqsF,SAGhBrsF,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5B2c,MAAQtU,EAIf,SAASkoF,IACPU,EAAQ,eAIV,SAASpD,IACPoD,EAAQ,gBAAiB,aAI3B,SAASd,EAAsB3+E,GAC7B,MAAM8K,EAAQ3X,KAAKqsF,SACbnkF,EAEJlI,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GACjC6M,EAAKyP,MAAQA,EACbzP,EAAKqQ,WAAaJ,GAChBnY,KAAKyR,eAAe5E,IACpBvO,cACFguF,EAAQ,gBAAiB,QAI3B,SAASrC,EAA+Bp9E,GACtCy/E,EAAQ,yBAA0Bz/E,EAAM5D,MAI1C,SAASmhF,EAA8Bv9E,GACrC,MAAMnJ,EAAO1D,KAAKyR,eAAe5E,GAC3B5D,EAAOsjF,EAAQ,0BAGrB,IAAI7xF,EAEAuO,GACFvO,EAAQyrF,GACNziF,EACS,oCAATuF,EAA6C,GAAK,IAEpDqjF,EAAQ,2BAKR5xF,EAAQ4lF,GAA8B58E,GAGxC,MAAM8N,EAAOxR,KAAKE,MAAMiF,MACxBqM,EAAK9W,OAASA,EACd8W,EAAK1S,SAASQ,IAAMN,EAAM6N,EAAMvN,KAIlC,SAASuqF,EAAuBh9E,GAC9Bk9E,EAAWlwF,KAAKmG,KAAM6M,GAGpB7M,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BwC,IAAMmC,KAAKyR,eAAe5E,GAIjC,SAAS+8E,EAAoB/8E,GAC3Bk9E,EAAWlwF,KAAKmG,KAAM6M,GAGpB7M,KAAKE,MAAMF,KAAKE,MAAM7E,OAAS,GAC5BwC,IAAM,UAAYmC,KAAKyR,eAAe5E,GAO7C,SAAS46E,IACP,MAAO,CACLx+E,KAAM,aACNQ,SAAU,IAKd,SAASi+E,IACP,MAAO,CACLz+E,KAAM,OACNw9C,KAAM,KACN1qC,KAAM,KACNrhB,MAAO,IAKX,SAASmtF,IACP,MAAO,CACL5+E,KAAM,aACNvO,MAAO,IAKX,SAAS0e,IACP,MAAO,CACLnQ,KAAM,aACNsP,WAAY,GACZZ,MAAO,KACPK,MAAO,KACPna,IAAK,IAKT,SAASsqF,KACP,MAAO,CACLl/E,KAAM,WACNQ,SAAU,IAKd,SAAS4P,KAEP,MAAO,CACLpQ,KAAM,UACNmkF,WAAOrtF,EACP0J,SAAU,IAKd,SAAS4+E,KACP,MAAO,CACLp/E,KAAM,SAKV,SAASs/E,KACP,MAAO,CACLt/E,KAAM,OACNvO,MAAO,IAKX,SAASgoD,KACP,MAAO,CACLz5C,KAAM,QACN+O,MAAO,KACPna,IAAK,GACL0L,IAAK,MAKT,SAAS69E,KACP,MAAO,CACLn+E,KAAM,OACN+O,MAAO,KACPna,IAAK,GACL4L,SAAU,IAQd,SAASE,GAAKkD,GACZ,MAAO,CACL5D,KAAM,OACNykF,QAAwB,gBAAf7gF,EAAM5D,KACf5J,MAAO,KAEPsuF,OAAQ9gF,EAAMmgF,QACdvjF,SAAU,IAQd,SAASk/E,GAAS97E,GAChB,MAAO,CACL5D,KAAM,WAEN0kF,OAAQ9gF,EAAMmgF,QACdY,QAAS,KACTnkF,SAAU,IAKd,SAASwP,KACP,MAAO,CACLhQ,KAAM,YACNQ,SAAU,IAKd,SAAS8/E,KACP,MAAO,CACLtgF,KAAM,SACNQ,SAAU,IAKd,SAAS0I,KACP,MAAO,CACLlJ,KAAM,OACNvO,MAAO,IAKX,SAAS8uF,KACP,MAAO,CACLvgF,KAAM,kBA3gCD4kF,CAASvzF,EAATuzF,CA1MX,SAAqBhgF,GACnB,MAAQgC,GAAYhC,KAIpB,OAAOA,EAsMHigF,CACEjI,GAAYvrF,GAASmV,WAAWH,MArUxC,WACE,IAOIy+E,EAPA5uF,EAAS,EACTua,EAAS,GAGTra,GAAQ,EAIZ,OAGA,SAAsB3E,EAAO2J,EAAU/E,GAErC,MAAMkT,EAAS,GAGf,IAAIw7E,EAGA5oF,EAGAsL,EAGAu9E,EAGAvsF,EAcJ,IAZAhH,EAAQgf,EAAShf,EAAMpB,SAAS+K,GAChCqM,EAAgB,EAChBgJ,EAAS,GAELra,IAC0B,QAAxB3E,EAAMuG,WAAW,IACnByP,IAGFrR,OAAQU,GAGH2Q,EAAgBhW,EAAMW,QAAQ,CAOnC,GANA6qF,GAAOgI,UAAYx9E,EACnBs9E,EAAQ9H,GAAOiI,KAAKzzF,GACpBuzF,EACED,QAAyBjuF,IAAhBiuF,EAAM7vF,MAAsB6vF,EAAM7vF,MAAQzD,EAAMW,OAC3DqG,EAAOhH,EAAMuG,WAAWgtF,IAEnBD,EAAO,CACVt0E,EAAShf,EAAM2D,MAAMqS,GACrB,MAGF,GAAa,KAAThP,GAAegP,IAAkBu9E,GAAeF,EAClDv7E,EAAO5Z,MAAM,GACbm1F,OAAmBhuF,OAYnB,OAVIguF,IACFv7E,EAAO5Z,MAAM,GACbm1F,OAAmBhuF,GAGjB2Q,EAAgBu9E,IAClBz7E,EAAO5Z,KAAK8B,EAAM2D,MAAMqS,EAAeu9E,IACvC9uF,GAAU8uF,EAAcv9E,GAGlBhP,GACN,KAAK,EACH8Q,EAAO5Z,KAAK,OACZuG,IACA,MAGF,KAAK,EAIH,IAHAiG,EAA+B,EAAxBgpF,KAAKC,KAAKlvF,EAAS,GAC1BqT,EAAO5Z,MAAM,GAENuG,IAAWiG,GAAMoN,EAAO5Z,MAAM,GAErC,MAGF,KAAK,GACH4Z,EAAO5Z,MAAM,GACbuG,EAAS,EACT,MAGF,QACE4uF,GAAmB,EACnB5uF,EAAS,EAKfuR,EAAgBu9E,EAAc,EAShC,OANI3uF,IACEyuF,GAAkBv7E,EAAO5Z,MAAM,GAC/B8gB,GAAQlH,EAAO5Z,KAAK8gB,GACxBlH,EAAO5Z,KAAK,OAGP4Z,GA0NmC87E,EAAAA,CAAa5zF,EAAO2J,GAAU,OAmhC5E,SAAS0iF,GAAUwH,EAAUzI,GAC3B,IAAI3nF,GAAS,EAEb,OAASA,EAAQ2nF,EAAWzqF,QAAQ,CAClC,MAAMX,EAAQorF,EAAW3nF,GAErBvE,MAAMF,QAAQgB,GAChBqsF,GAAUwH,EAAU7zF,GAEpB0P,GAAUmkF,EAAU7zF,GAIxB,OAAO6zF,EAQT,SAASnkF,GAAUmkF,EAAUnkF,GAE3B,IAAIpQ,EAEJ,IAAKA,KAAOoQ,EACV,GAAIw8E,GAAQ/sF,KAAKuQ,EAAWpQ,GAAM,CAChC,MAAM2P,EAAe,mBAAR3P,GAAoC,eAARA,EAInCsQ,GAHQs8E,GAAQ/sF,KAAK00F,EAAUv0F,GAAOu0F,EAASv0F,QAAO+F,KAGrCwuF,EAASv0F,GAAO2P,EAAO,GAAK,IAC7CY,EAAQH,EAAUpQ,GAEpBuQ,IACEZ,EAEF4kF,EAASv0F,GAAO,IAAIsQ,KAASC,GAE7BrR,OAAOsO,OAAO8C,EAAMC,KAQ9B,SAASmiF,GAAepiF,EAAMC,GAC5B,MAAID,EACI,IAAI9K,MACR,iBACE8K,EAAKrB,KACL,MACArK,EAAkB,CAChBS,MAAOiL,EAAKjL,MACZC,IAAKgL,EAAKhL,MAEZ,0BACAiL,EAAMtB,KACN,MACArK,EAAkB,CAChBS,MAAOkL,EAAMlL,MACbC,IAAKiL,EAAMjL,MAEb,aAGE,IAAIE,MACR,oCACE+K,EAAMtB,KACN,MACArK,EAAkB,CAChBS,MAAOkL,EAAMlL,MACbC,IAAKiL,EAAMjL,MAEb,mBAsCqB,IAAIkvF,GAxBjC,SAAqBl0F,GAkBnBpB,OAAOsO,OAAOxH,KAAM,CAAC6G,OAhBLgB,IAEd,MAAMT,EAAmCpH,KAAK0D,KAAK,YAEnD,OAAOmjF,GACLh/E,EACA3O,OAAOsO,OAAO,GAAIJ,EAAU9M,EAAS,CAInCwrF,WAAY9lF,KAAK0D,KAAK,wBAA0B,GAChDwoF,gBAAiBlsF,KAAK0D,KAAK,2BAA6B,UA6B5D+qF,GAEA,SAOQxlF,EAAMylF,EAAOh0F,GAErB,IAAIwN,EAAO,CAACe,KAAMhB,OAAOgB,IAiBzB,YAdalJ,IAAVrF,GAAiC,OAAVA,GACN,kBAAVg0F,IAAsB90F,MAAMF,QAAQg1F,GAI5Cx1F,OAAOsO,OAAOU,EAAMwmF,GAFpBh0F,EAAQg0F,EAKN90F,MAAMF,QAAQgB,GAChBwN,EAAKuB,SAAW/O,OACGqF,IAAVrF,GAAiC,OAAVA,IAChCwN,EAAKxN,MAAQuN,OAAOvN,IAGfwN,GAuDX,MA+DMymF,GAOJ,SAWYljF,GACR,QAAa1L,IAAT0L,GAA+B,OAATA,EACxB,OAAOmjF,GAGT,GAAoB,kBAATnjF,EACT,OA+ER,SAAqB6C,GACnB,OAAOugF,GAAY5lF,GAKnB,SAASA,EAAKf,GACZ,OAAOA,GAAQA,EAAKe,OAASqF,GAtFlBwgF,CAAYrjF,GAGrB,GAAoB,kBAATA,EACT,OAAO7R,MAAMF,QAAQ+R,GAc7B,SAAoBsjF,GAElB,MAAMC,EAAS,GACf,IAAI7wF,GAAS,EAEb,OAASA,EAAQ4wF,EAAM1zF,QACrB2zF,EAAO7wF,GAASwwF,GAAQI,EAAM5wF,IAGhC,OAAO0wF,GAAYI,GAOnB,SAASA,KAAOxpF,GACd,IAAItH,GAAS,EAEb,OAASA,EAAQ6wF,EAAO3zF,QACtB,GAAI2zF,EAAO7wF,GAAOtE,KAAKmG,QAASyF,GAAa,OAAO,EAGtD,OAAO,GArC0BypF,CAAWzjF,GAgDhD,SAAsB6C,GACpB,OAAOugF,GAAY1kF,GAMnB,SAASA,EAAIjC,GAEX,IAAIlO,EAEJ,IAAKA,KAAOsU,EAEV,GAAIpG,EAAKlO,KAASsU,EAAMtU,GAAM,OAAO,EAGvC,OAAO,GAhE6Cm1F,CAAa1jF,GAG/D,GAAoB,oBAATA,EACT,OAAOojF,GAAYpjF,GAGrB,MAAM,IAAIjM,MAAM,iDAqFtB,SAASqvF,GAAYvgF,GACnB,OAOA,YAAsB7I,GAEpB,OAAO0D,QAAQmF,EAAMzU,KAAKmG,QAASyF,KAKvC,SAASmpF,KACP,OAAO,EA8BT,MAsBMQ,GAOJ,SAOY3mF,EAAMgD,EAAM4jF,EAASC,GACT,oBAAT7jF,GAA0C,oBAAZ4jF,IACvCC,EAAUD,EAEVA,EAAU5jF,EACVA,EAAO,MAGT,MAAM8jF,EAAKZ,GAAQljF,GACb+jF,EAAOF,GAAW,EAAI,GAS5B,SAASG,EAAQvnF,EAAM/J,EAAOuxF,GAG5B,MAAMh1F,EAAwB,kBAATwN,GAA8B,OAATA,EAAgBA,EAAO,GAEjE,IAAI3N,EAEsB,kBAAfG,EAAMuO,OACf1O,EAC2B,kBAAlBG,EAAMof,QACTpf,EAAMof,QACgB,kBAAfpf,EAAMH,KACbG,EAAMH,UACNwF,EAEN7G,OAAOK,eAAeo2F,EAAO,OAAQ,CACnCj1F,MACE,SACMA,EAAMuO,MAAQ1O,EAAO,IAAMA,EAAO,IAAM,IAC9C,OAIN,OAAOo1F,EAEP,SAASA,IAEP,IAEIC,EAEAhhF,EAEAihF,EANA5tF,EAAS,GAQb,KAAKwJ,GAAQ8jF,EAAGrnF,EAAM/J,EAAOuxF,EAAQA,EAAQr0F,OAAS,IAAM,SAC1D4G,EAsCZ,SAAkBvH,GAChB,GAAId,MAAMF,QAAQgB,GAChB,OAAOA,EAGT,GAAqB,kBAAVA,EACT,MAAO,CAtIM,KAsIKA,GAGpB,MAAO,CAACA,GA/CWo1F,CAAST,EAAQnnF,EAAMwnF,IAlF/B,QAoFGztF,EAAO,IACT,OAAOA,EAKX,GAAIiG,EAAKuB,UA9FN,SA8FkBxH,EAAO,GAO1B,IALA2M,GAAU0gF,EAAUpnF,EAAKuB,SAASpO,QAAU,GAAKm0F,EAEjDK,EAAeH,EAAQ1J,OAAO99E,GAGvB0G,GAAU,GAAKA,EAAS1G,EAAKuB,SAASpO,QAAQ,CAInD,GAFAu0F,EAAYH,EAAQvnF,EAAKuB,SAASmF,GAASA,EAAQihF,EAAvCJ,GAnGb,QAqGKG,EAAU,GACZ,OAAOA,EAGThhF,EAC0B,kBAAjBghF,EAAU,GAAkBA,EAAU,GAAKhhF,EAAS4gF,EAIjE,OAAOvtF,GAvEXwtF,CAAQhnF,EAAM,KAAM,GAApBgnF,IAoHN,MAAMM,GAOJ,SAOYtnF,EAAMgD,EAAM4jF,EAASC,GACT,oBAAT7jF,GAA0C,oBAAZ4jF,IACvCC,EAAUD,EACVA,EAAU5jF,EACVA,EAAO,MAGT2jF,GAAa3mF,EAAMgD,GAMnB,SAAkBvD,EAAMwnF,GACtB,MAAMrC,EAASqC,EAAQA,EAAQr0F,OAAS,GACxC,OAAOg0F,EACLnnF,EACAmlF,EAASA,EAAO5jF,SAASvL,QAAQgK,GAAQ,KACzCmlF,KAX+BiC,IAiCnCU,GAAaC,GAA0B,SACvCC,GAAWD,GAA0B,OAiB3C,SAASA,GAA0BhnF,GACjC,OAQA,SAAef,GACb,MAAMlJ,EAASkJ,GAAQA,EAAKpJ,UAAYoJ,EAAKpJ,SAASmK,IAAU,GAEhE,MAAO,CACL/J,KAAMF,EAAME,MAAQ,KACpBC,OAAQH,EAAMG,QAAU,KACxByP,OAAQ5P,EAAM4P,QAAU,EAAI5P,EAAM4P,OAAS,OA+CjD,MAAMuhF,GAA6B,GAAG/2F,eA0CtC,SAASg3F,GAAM11F,GACb,OAAOuN,OAAOvN,GAAS,IAAI2d,cAa7B,MAAMg4E,GAAe,GAAGj3F,eAOxB,SAASk3F,GAAQC,EAAGroF,GAClB,MAAMxE,EAAOwE,EAAKxE,MAAQ,GAE1B,MACE,UAAWwE,KAETmoF,GAAax2F,KAAK6J,EAAM,UACxB2sF,GAAax2F,KAAK6J,EAAM,gBACxB2sF,GAAax2F,KAAK6J,EAAM,cAGnB6sF,EAAEC,QAAQtoF,EAAMumF,GAAE,OAAQvmF,EAAKxN,QAGjC61F,EAAEroF,EAAM,MAAOuoF,GAAaF,EAAGroF,IAOxC,SAASwoF,GAAaH,EAAGroF,EAAMmlF,GAC7B,MAAMpkF,EAAOf,GAAQA,EAAKe,KAE1B,IAAI5D,EAGJ,IAAK4D,EACH,MAAM,IAAIzJ,MAAM,uBAAyB0I,EAAO,KAWlD,OAPE7C,EADEgrF,GAAax2F,KAAK02F,EAAEI,SAAU1nF,GAC3BsnF,EAAEI,SAAS1nF,GACPsnF,EAAEK,aAAeL,EAAEK,YAAY5sF,SAASiF,GAC5C4nF,GAEAN,EAAEO,gBAGa,oBAAPzrF,EAAoBA,EAAKirF,IAASC,EAAGroF,EAAMmlF,GAO5D,SAASwD,GAAWN,EAAGroF,GAErB,MAAO,aAAcA,EAAO,IAAIA,EAAMuB,SAAUgnF,GAAaF,EAAGroF,IAASA,EAO3E,SAASuoF,GAAaF,EAAGlD,GAEvB,MAAMroF,EAAS,GAEf,GAAI,aAAcqoF,EAAQ,CACxB,MAAM0D,EAAQ1D,EAAO5jF,SACrB,IAAItL,GAAS,EAEb,OAASA,EAAQ4yF,EAAM11F,QAAQ,CAC7B,MAAM4G,EAASyuF,GAAaH,EAAGQ,EAAM5yF,GAAQkvF,GAE7C,GAAIprF,EAAQ,CACV,GAAI9D,GAAmC,UAA1B4yF,EAAM5yF,EAAQ,GAAG8K,OACvBrP,MAAMF,QAAQuI,IAA2B,SAAhBA,EAAOgH,OACnChH,EAAOvH,MAAQuH,EAAOvH,MAAM0d,QAAQ,OAAQ,MAGzCxe,MAAMF,QAAQuI,IAA2B,YAAhBA,EAAOgH,MAAoB,CACvD,MAAMy9E,EAAOzkF,EAAOwH,SAAS,GAEzBi9E,GAAsB,SAAdA,EAAKz9E,OACfy9E,EAAKhsF,MAAQgsF,EAAKhsF,MAAM0d,QAAQ,OAAQ,KAK1Cxe,MAAMF,QAAQuI,GAChB+C,EAAOpM,QAAQqJ,GAEf+C,EAAOpM,KAAKqJ,KAMpB,OAAO+C,EAIT,MAAMgsF,GAAsB,CAACC,IAAK,OAAQC,IAAK,MAAOC,IAAK,KAAMC,IAAK,MAgDtE,SAASC,GAAYxzF,EAAKO,GACxB,MAAM1D,EArCR,SAAgBA,GACd,OAAOA,EAAM0d,QAAQ,WAMrB,SAAiB1d,GAEf,MAAO,IAAMs2F,GAAoBt2F,GAAS,OA4B9B42F,CAkChB,SAAsB52F,GAEpB,MAAMuH,EAAS,GACf,IAAI9D,GAAS,EACTkB,EAAQ,EACRkyF,EAAO,EAEX,OAASpzF,EAAQzD,EAAMW,QAAQ,CAC7B,MAAMqG,EAAOhH,EAAMuG,WAAW9C,GAG9B,IAAIia,EAAU,GAEd,GACW,KAAT1W,GACAqJ,EAAkBrQ,EAAMuG,WAAW9C,EAAQ,KAC3C4M,EAAkBrQ,EAAMuG,WAAW9C,EAAQ,IAE3CozF,EAAO,OAEJ,GAAI7vF,EAAO,IACT,oBAAoB+J,KAAKxD,OAAOyD,aAAahK,MAChD0W,EAAUnQ,OAAOyD,aAAahK,SAG7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,MAAM0D,EAAO1K,EAAMuG,WAAW9C,EAAQ,GAElCuD,EAAO,OAAS0D,EAAO,OAASA,EAAO,OACzCgT,EAAUnQ,OAAOyD,aAAahK,EAAM0D,GACpCmsF,EAAO,GAGPn5E,EAAU,cAIZA,EAAUnQ,OAAOyD,aAAahK,GAG5B0W,IACFnW,EAAOrJ,KAAK8B,EAAM2D,MAAMgB,EAAOlB,GAAQqzF,mBAAmBp5E,IAC1D/Y,EAAQlB,EAAQozF,EAAO,EACvBn5E,EAAU,IAGRm5E,IACFpzF,GAASozF,EACTA,EAAO,GAIX,OAAOtvF,EAAON,KAAK,IAAMjH,EAAM2D,MAAMgB,GAtFhBoyF,CAAa5zF,GAAO,KAEzC,IAAKO,EACH,OAAO1D,EAGT,MAAMuD,EAAQvD,EAAMwD,QAAQ,KACtBwzF,EAAeh3F,EAAMwD,QAAQ,KAC7ByzF,EAAaj3F,EAAMwD,QAAQ,KAC3B0zF,EAAQl3F,EAAMwD,QAAQ,KAE5B,OAEED,EAAQ,GACP2zF,GAAS,GAAK3zF,EAAQ2zF,GACtBF,GAAgB,GAAKzzF,EAAQyzF,GAC7BC,GAAc,GAAK1zF,EAAQ0zF,GAC5BvzF,EAASqN,KAAK/Q,EAAM2D,MAAM,EAAGJ,IAEtBvD,EAGF,GAkFT,SAASm3F,GAAUd,EAAOe,GAExB,MAAM7vF,EAAS,GACf,IAAI9D,GAAS,EAMb,IAJI2zF,GACF7vF,EAAOrJ,KAAK61F,GAAE,OAAQ,SAGftwF,EAAQ4yF,EAAM11F,QACjB8C,GAAO8D,EAAOrJ,KAAK61F,GAAE,OAAQ,OACjCxsF,EAAOrJ,KAAKm4F,EAAM5yF,IAOpB,OAJI2zF,GAASf,EAAM11F,OAAS,GAC1B4G,EAAOrJ,KAAK61F,GAAE,OAAQ,OAGjBxsF,EAuPT,SAAS8vF,GAAkBxB,EAAGroF,GAC5B,MAAM8pF,EAAK/pF,OAAOC,EAAKqQ,YACjB05E,EAASZ,GAAYW,EAAG1zF,eACxBH,EAAQoyF,EAAE2B,cAAch0F,QAAQ8zF,GAEtC,IAAIG,GAEW,IAAXh0F,GACFoyF,EAAE2B,cAAct5F,KAAKo5F,GACrBzB,EAAE6B,eAAeJ,GAAM,EACvBG,EAAU5B,EAAE2B,cAAc72F,SAE1Bk1F,EAAE6B,eAAeJ,KACjBG,EAAUh0F,EAAQ,GAGpB,MAAMk0F,EAAe9B,EAAE6B,eAAeJ,GAEtC,OAAOzB,EAAEroF,EAAM,MAAO,CACpBqoF,EACEroF,EAAKpJ,SACL,IACA,CACEiE,KAAM,IAAMwtF,EAAE+B,cAAgB,MAAQL,EACtCD,GACEzB,EAAE+B,cACF,SACAL,GACCI,EAAe,EAAI,IAAMA,EAAe,IAC3CE,iBAAiB,EACjBC,gBAAiB,kBAEnB,CAAC/D,GAAE,OAAQxmF,OAAOkqF,QAiFxB,IAAIM,GAAez5F,EAAoB,QACnC05F,GAA8B15F,EAAoByF,EAAEg0F,IAoBxD,SAASE,GAAOpC,EAAGroF,GACjB,MAAM0qF,EAAU1qF,EAAKolF,cACrB,IAAIuF,EAAS,IAQb,GANgB,cAAZD,EACFC,GAAU,KACW,SAAZD,IACTC,GAAU,KAAO3qF,EAAKyP,OAASzP,EAAKqQ,YAAc,KAGlC,mBAAdrQ,EAAKe,KACP,OAAOwlF,GAAE,OAAQ,KAAOvmF,EAAKqB,IAAMspF,GAGrC,MAAMC,EAAWrC,GAAaF,EAAGroF,GAC3Bw+E,EAAOoM,EAAS,GAElBpM,GAAsB,SAAdA,EAAKz9E,KACfy9E,EAAKhsF,MAAQ,IAAMgsF,EAAKhsF,MAExBo4F,EAAS9oF,QAAQykF,GAAE,OAAQ,MAG7B,MAAMj9E,EAAOshF,EAASA,EAASz3F,OAAS,GAQxC,OANImW,GAAsB,SAAdA,EAAKvI,KACfuI,EAAK9W,OAASm4F,EAEdC,EAASl6F,KAAK61F,GAAE,OAAQoE,IAGnBC,EAiPT,SAASC,GAAc7qF,GACrB,MAAMylF,EAASzlF,EAAKylF,OAEpB,YAAkB5tF,IAAX4tF,GAAmC,OAAXA,EAC3BzlF,EAAKuB,SAASpO,OAAS,EACvBsyF,EAgNN,SAASqF,GAASt4F,EAAO2E,EAAOC,GAC9B,IAAI0U,EAAa,EACbE,EAAWxZ,EAAMW,OAErB,GAAIgE,EAAO,CACT,IAAIqC,EAAOhH,EAAMu4F,YAAYj/E,GAE7B,KApDQ,IAoDDtS,GAnDc,KAmDEA,GACrBsS,IACAtS,EAAOhH,EAAMu4F,YAAYj/E,GAI7B,GAAI1U,EAAK,CACP,IAAIoC,EAAOhH,EAAMu4F,YAAY/+E,EAAW,GAExC,KA7DQ,IA6DDxS,GA5Dc,KA4DEA,GACrBwS,IACAxS,EAAOhH,EAAMu4F,YAAY/+E,EAAW,GAIxC,OAAOA,EAAWF,EAAatZ,EAAM2D,MAAM2V,EAAYE,GAAY,GA4DrE,MAAMy8E,GAAW,CACfuC,WApyBF,SAAoB3C,EAAGroF,GACrB,OAAOqoF,EAAEroF,EAAM,aAAc2pF,GAAUpB,GAAaF,EAAGroF,IAAO,KAoyB9DirF,MAlxBF,SAAyB5C,EAAGroF,GAC1B,MAAO,CAACqoF,EAAEroF,EAAM,MAAOumF,GAAE,OAAQ,QAkxBjC/sF,KAlwBF,SAAmB6uF,EAAGroF,GACpB,MAAMxN,EAAQwN,EAAKxN,MAAQwN,EAAKxN,MAAQ,KAAO,GAGzC+rD,EAAOv+C,EAAKu+C,MAAQv+C,EAAKu+C,KAAKunC,MAAM,uBAEpCU,EAAQ,GAEVjoC,IACFioC,EAAM0E,UAAY,CAAC,YAAc3sC,IAGnC,MAAM/kD,EAAO6uF,EAAEroF,EAAM,OAAQwmF,EAAO,CAACD,GAAE,OAAQ/zF,KAM/C,OAJIwN,EAAK6T,OACPra,EAAKgC,KAAO,CAACqY,KAAM7T,EAAK6T,OAGnBw0E,EAAEroF,EAAKpJ,SAAU,MAAO,CAAC4C,KAivBhC2xF,OAluBF,SAAuB9C,EAAGroF,GACxB,OAAOqoF,EAAEroF,EAAM,MAAOuoF,GAAaF,EAAGroF,KAkuBtCigF,SAntBF,SAA2BoI,EAAGroF,GAC5B,OAAOqoF,EAAEroF,EAAM,KAAMuoF,GAAaF,EAAGroF,KAmtBrC6pF,kBAAmBA,GACnBuB,SA5oBF,SAAkB/C,EAAGroF,GACnB,MAAMqrF,EAAehD,EAAEgD,aACvB,IAAIC,EAAK,EAET,KAAOA,KAAMD,GAAcC,IAE3B,MAAMj7E,EAAatQ,OAAOurF,GAS1B,OAPAD,EAAah7E,GAAc,CACzBtP,KAAM,qBACNsP,WAAAA,EACA9O,SAAU,CAAC,CAACR,KAAM,YAAaQ,SAAUvB,EAAKuB,WAC9C3K,SAAUoJ,EAAKpJ,UAGVizF,GAAkBxB,EAAG,CAC1BtnF,KAAM,oBACNsP,WAAAA,EACAzZ,SAAUoJ,EAAKpJ,YA2nBjBua,QA3mBF,SAAyBk3E,EAAGroF,GAC1B,OAAOqoF,EAAEroF,EAAM,IAAMA,EAAKklF,MAAOqD,GAAaF,EAAGroF,KA2mBjDqgF,KA1lBF,SAAmBgI,EAAGroF,GACpB,OAAOqoF,EAAEkD,UAAYlD,EAAEC,QAAQtoF,EAAMumF,GAAE,MAAOvmF,EAAKxN,QAAU,MA0lB7Dg5F,eAjhBF,SAAwBnD,EAAGroF,GACzB,MAAM8M,EAAMu7E,EAAEn3E,WAAWlR,EAAKqQ,YAE9B,IAAKvD,EACH,OAAO29E,GAAOpC,EAAGroF,GAInB,MAAMwmF,EAAQ,CAAC3zF,IAAK23F,IAAAA,CAAiB19E,EAAInX,KAAO,IAAK0L,IAAKrB,EAAKqB,KAM/D,OAJkB,OAAdyL,EAAIgD,YAAgCjY,IAAdiV,EAAIgD,QAC5B02E,EAAM12E,MAAQhD,EAAIgD,OAGbu4E,EAAEroF,EAAM,MAAOwmF,IAogBtBhsC,MApfF,SAAqB6tC,EAAGroF,GAEtB,MAAMwmF,EAAQ,CAAC3zF,IAAK23F,IAAAA,CAAiBxqF,EAAKrK,KAAM0L,IAAKrB,EAAKqB,KAM1D,OAJmB,OAAfrB,EAAK8P,YAAiCjY,IAAfmI,EAAK8P,QAC9B02E,EAAM12E,MAAQ9P,EAAK8P,OAGdu4E,EAAEroF,EAAM,MAAOwmF,IA6etBiF,WA9dF,SAAoBpD,EAAGroF,GACrB,OAAOqoF,EAAEroF,EAAM,OAAQ,CAACumF,GAAE,OAAQvmF,EAAKxN,MAAM0d,QAAQ,YAAa,SA8dlEw7E,cA5cF,SAAuBrD,EAAGroF,GACxB,MAAM8M,EAAMu7E,EAAEn3E,WAAWlR,EAAKqQ,YAE9B,IAAKvD,EACH,OAAO29E,GAAOpC,EAAGroF,GAInB,MAAMwmF,EAAQ,CAAC3rF,KAAM2vF,IAAAA,CAAiB19E,EAAInX,KAAO,KAMjD,OAJkB,OAAdmX,EAAIgD,YAAgCjY,IAAdiV,EAAIgD,QAC5B02E,EAAM12E,MAAQhD,EAAIgD,OAGbu4E,EAAEroF,EAAM,IAAKwmF,EAAO+B,GAAaF,EAAGroF,KA+b3Ck/E,KA9aF,SAAmBmJ,EAAGroF,GAEpB,MAAMwmF,EAAQ,CAAC3rF,KAAM2vF,IAAAA,CAAiBxqF,EAAKrK,MAM3C,OAJmB,OAAfqK,EAAK8P,YAAiCjY,IAAfmI,EAAK8P,QAC9B02E,EAAM12E,MAAQ9P,EAAK8P,OAGdu4E,EAAEroF,EAAM,IAAKwmF,EAAO+B,GAAaF,EAAGroF,KAua3CygF,SAlZF,SAA4B4H,EAAGroF,EAAMmlF,GACnC,MAAMprF,EAASwuF,GAAaF,EAAGroF,GACzB4pF,EAAQzE,EA0EhB,SAAmBnlF,GACjB,IAAI4pF,EAAQ5pF,EAAKylF,OACjB,MAAMlkF,EAAWvB,EAAKuB,SACtB,IAAItL,GAAS,EAEb,MAAQ2zF,KAAW3zF,EAAQsL,EAASpO,QAClCy2F,EAAQiB,GAActpF,EAAStL,IAGjC,OAAOgL,QAAQ2oF,GAnFQ+B,CAAUxG,GAAU0F,GAAc7qF,GAEnDwmF,EAAQ,GAERlpF,EAAU,GAEhB,GAA4B,mBAAjB0C,EAAK0lF,QAAuB,CAErC,IAAI30E,EAGFhX,EAAO,IACY,YAAnBA,EAAO,GAAGgH,MACY,MAAtBhH,EAAO,GAAG6X,QAEVb,EAAYhX,EAAO,IAEnBgX,EAAYs3E,EAAE,KAAM,IAAK,IACzBtuF,EAAO+H,QAAQiP,IAGbA,EAAUxP,SAASpO,OAAS,GAC9B4d,EAAUxP,SAASO,QAAQykF,GAAE,OAAQ,MAGvCx1E,EAAUxP,SAASO,QACjBumF,EAAE,KAAM,QAAS,CACftnF,KAAM,WACN2kF,QAAS1lF,EAAK0lF,QACdkG,UAAU,KAMdpF,EAAM0E,UAAY,CAAC,kBAGrB,IAAIj1F,GAAS,EAEb,OAASA,EAAQ8D,EAAO5G,QAAQ,CAC9B,MAAM04F,EAAQ9xF,EAAO9D,IAInB2zF,GACU,IAAV3zF,GACe,YAAf41F,EAAM9qF,MACY,MAAlB8qF,EAAMj6E,UAENtU,EAAQ5M,KAAK61F,GAAE,OAAQ,OAGN,YAAfsF,EAAM9qF,MAAwC,MAAlB8qF,EAAMj6E,SAAoBg4E,EAGxDtsF,EAAQ5M,KAAKm7F,GAFbvuF,EAAQ5M,QAAQm7F,EAAMtqF,UAM1B,MAAM+H,EAAOvP,EAAOA,EAAO5G,OAAS,GAOpC,OAJImW,IAASsgF,GAAW,YAAatgF,GAA0B,MAAjBA,EAAKsI,SACjDtU,EAAQ5M,KAAK61F,GAAE,OAAQ,OAGlB8B,EAAEroF,EAAM,KAAMwmF,EAAOlpF,IA8U5BmE,KA/RF,SAA4B4mF,EAAGroF,GAE7B,MAAMwmF,EAAQ,GACRn0F,EAAO2N,EAAKwlF,QAAU,KAAO,KAC7B7jF,EAAQ4mF,GAAaF,EAAGroF,GAC9B,IAAI/J,GAAS,EAOb,IAL0B,kBAAf+J,EAAK7I,OAAqC,IAAf6I,EAAK7I,QACzCqvF,EAAMrvF,MAAQ6I,EAAK7I,SAIZlB,EAAQ0L,EAAMxO,QAAQ,CAC7B,MAAMgS,EAAOxD,EAAM1L,GAEnB,GACgB,YAAdkP,EAAKpE,MACY,OAAjBoE,EAAKyM,SACLzM,EAAK2mF,YACLp6F,MAAMF,QAAQ2T,EAAK2mF,WAAWZ,YAC9B/lF,EAAK2mF,WAAWZ,UAAUpvF,SAAS,kBACnC,CACA0qF,EAAM0E,UAAY,CAAC,sBACnB,OAIJ,OAAO7C,EAAEroF,EAAM3N,EAAMm0F,EAAOmD,GAAUhoF,GAAO,KAqQ7CoP,UAtPF,SAA6Bs3E,EAAGroF,GAC9B,OAAOqoF,EAAEroF,EAAM,IAAKuoF,GAAaF,EAAGroF,KAsPpC+rF,KArOF,SAAc1D,EAAGroF,GAEf,OAAOqoF,EAAEC,QAAQtoF,EAAMumF,GAAE,OAAQoD,GAAUpB,GAAaF,EAAGroF,OAoO3DqhF,OArNF,SAAuBgH,EAAGroF,GACxB,OAAOqoF,EAAEroF,EAAM,SAAUuoF,GAAaF,EAAGroF,KAqNzCgsF,MAlMF,SAAe3D,EAAGroF,GAChB,MAAMisF,EAAOjsF,EAAKuB,SAClB,IAAItL,GAAS,EACb,MAAMi2F,EAAQlsF,EAAKksF,OAAS,GAEtBnyF,EAAS,GAEf,OAAS9D,EAAQg2F,EAAK94F,QAAQ,CAC5B,MAAMg5F,EAAMF,EAAKh2F,GAAOsL,SAClBlP,EAAiB,IAAV4D,EAAc,KAAO,KAE5Bm2F,EAAM,GACZ,IAAIC,GAAa,EACjB,MAAMl5F,EAAS6M,EAAKksF,MAAQA,EAAM/4F,OAASg5F,EAAIh5F,OAE/C,OAASk5F,EAAYl5F,GAAQ,CAC3B,MAAMm5F,EAAOH,EAAIE,GACjBD,EAAI17F,KACF23F,EAAEiE,EAAMj6F,EAAM,CAAC65F,MAAOA,EAAMG,IAAaC,EAAO/D,GAAaF,EAAGiE,GAAQ,KAI5EvyF,EAAO9D,GAASoyF,EAAE4D,EAAKh2F,GAAQ,KAAM0zF,GAAUyC,GAAK,IAGtD,OAAO/D,EACLroF,EACA,QACA2pF,GACE,CAACtB,EAAEtuF,EAAO,GAAGnD,SAAU,QAAS+yF,GAAU,CAAC5vF,EAAO,KAAK,KAAQ+jF,OAC7D/jF,EAAO,GACHsuF,EACE,CACElxF,MAAO2wF,GAAW/tF,EAAO,IACzB3C,IAAK4wF,GAASjuF,EAAOA,EAAO5G,OAAS,KAEvC,QACAw2F,GAAU5vF,EAAO5D,MAAM,IAAI,IAE7B,KAEN,KA0JJ8T,KAjEF,SAA4Bo+E,EAAGroF,GAC7B,OAAOqoF,EAAEC,QAAQtoF,EAAMumF,GAAE,OAxE3B,SAAmB/zF,GACjB,MAAM0F,EAAS6H,OAAOvN,GAChBwrF,EAAS,YACf,IAAI8H,EAAQ9H,EAAOiI,KAAK/tF,GACpBq0F,EAAO,EAEX,MAAMC,EAAQ,GAEd,KAAO1G,GACL0G,EAAM97F,KACJo6F,GAAS5yF,EAAO/B,MAAMo2F,EAAMzG,EAAM7vF,OAAQs2F,EAAO,GAAG,GACpDzG,EAAM,IAGRyG,EAAOzG,EAAM7vF,MAAQ6vF,EAAM,GAAG3yF,OAC9B2yF,EAAQ9H,EAAOiI,KAAK/tF,GAKtB,OAFAs0F,EAAM97F,KAAKo6F,GAAS5yF,EAAO/B,MAAMo2F,GAAOA,EAAO,GAAG,IAE3CC,EAAM/yF,KAAK,IAoDegzF,CAAU1sF,OAAOC,EAAKxN,WAiEvD8uF,cAlDF,SAA+C+G,EAAGroF,GAChD,OAAOqoF,EAAEroF,EAAM,OAkDf0sF,KAAMC,GACNC,KAAMD,GACNz7E,WAAYy7E,GACZE,mBAAoBF,IAItB,SAASA,KACP,OAAO,KAiJT,MAAMG,GAA6B,GAAG57F,eAYtC,SAAS67F,GAAYxsF,EAAMnO,GACzB,MAAM8M,EAAW9M,GAAW,GACtBm5F,EAAYrsF,EAAS8tF,qBAAsB,EAE3C3B,EAAe,GAmCrB,OAjCAhD,EAAEkD,UAAYA,EACdlD,EAAE+B,mBAC2BvyF,IAA3BqH,EAASkrF,eAA0D,OAA3BlrF,EAASkrF,cAC7C,gBACAlrF,EAASkrF,cACf/B,EAAE4E,cAAgB/tF,EAAS+tF,eAAiB,YAC5C5E,EAAE6E,qBAAuBhuF,EAASguF,sBAAwB,KAC1D7E,EAAE8E,wBAA0BjuF,EAASiuF,yBAA2B,CAC9DjC,UAAW,CAAC,YAEd7C,EAAE+E,kBAAoBluF,EAASkuF,mBAAqB,kBACpD/E,EAAEn3E,WAh8CJ,SAA4ClR,GAE1C,MAAMqtF,EAAQr8F,OAAOuc,OAAO,MAE5B,IAAKvN,IAASA,EAAKe,KACjB,MAAM,IAAIzJ,MAAM,wCAUlB,OAPAuwF,GAAuB7nF,EAAM,cAAekR,IAC1C,MAAM44E,EAAK5B,GAAMh3E,EAAWb,YACxBy5E,IAAO7B,GAA2Bt2F,KAAK07F,EAAOvD,KAChDuD,EAAMvD,GAAM54E,MAYhB,SAAoBb,GAClB,MAAMy5E,EAAK5B,GAAM73E,GACjB,OAAOy5E,GAAM7B,GAA2Bt2F,KAAK07F,EAAOvD,GAAMuD,EAAMvD,GAAM,MAu6CzDwD,CAAmC/sF,GAClD8nF,EAAEgD,aAAeA,EAEjBhD,EAAE2B,cAAgB,GAElB3B,EAAE6B,eAAiB,GACnB7B,EAAEC,QAAUA,EACZD,EAAEI,SAAW,IAAIA,MAAavpF,EAASupF,UACvCJ,EAAEO,eAAiB1pF,EAAS0pF,eAC5BP,EAAEK,YAAcxpF,EAASwpF,YAEzBb,GAAuBtnF,EAAM,sBAAuB2Q,IAClD,MAAM44E,EAAK/pF,OAAOmR,EAAWb,YAAYF,cAIpC28E,GAA2Bn7F,KAAK05F,EAAcvB,KACjDuB,EAAavB,GAAM54E,MAKhBm3E,EASP,SAASC,EAAQlmF,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAK5G,KAAM,CAEvC,MAAMA,EAAO4G,EAAK5G,KAEdA,EAAK+xF,QACY,YAAflrF,EAAMtB,OACRsB,EAAQ,CACNtB,KAAM,UACN6Q,QAAS,GACTk6E,WAAY,GACZvqF,SAAU,KAIdc,EAAMuP,QAAUpW,EAAK+xF,OAGJ,YAAflrF,EAAMtB,MAAsBvF,EAAKgyF,cACnCnrF,EAAMypF,WAAa,IAAIzpF,EAAMypF,cAAetwF,EAAKgyF,cAG/C,aAAcnrF,GAASA,EAAMd,UAAY/F,EAAKiyF,YAChDprF,EAAMd,SAAW/F,EAAKiyF,WAI1B,GAAIrrF,EAAM,CACR,MAAMsrF,EAAM,SAAUtrF,EAAOA,EAAO,CAACxL,SAAUwL,IA1hDlCpC,EA4hDE0tF,IAzhDhB1tF,EAAKpJ,UACLoJ,EAAKpJ,SAASO,OACd6I,EAAKpJ,SAASO,MAAMH,MACpBgJ,EAAKpJ,SAASO,MAAMF,QACpB+I,EAAKpJ,SAASQ,KACd4I,EAAKpJ,SAASQ,IAAIJ,MAClBgJ,EAAKpJ,SAASQ,IAAIH,SAqhDfoL,EAAMzL,SAAW,CAACO,MAAO2wF,GAAW4F,GAAMt2F,IAAK4wF,GAAS0F,KA9hDhE,IAAmB1tF,EAkiDf,OAAOqC,EAQT,SAASgmF,EAAEroF,EAAM4R,EAAS40E,EAAOjlF,GAO/B,OANI7P,MAAMF,QAAQg1F,KAChBjlF,EAAWilF,EACXA,EAAQ,IAIH8B,EAAQtoF,EAAM,CACnBe,KAAM,UACN6Q,QAAAA,EACAk6E,WAAYtF,GAAS,GACrBjlF,SAAUA,GAAY,MAY5B,SAASosF,GAAOptF,EAAMnO,GACpB,MAAMi2F,EAAI0E,GAAYxsF,EAAMnO,GACtB4N,EAAOwoF,GAAaH,EAAG9nF,EAAM,MAC7BqtF,EAptCR,SAAgBvF,GACd,IAAIpyF,GAAS,EAEb,MAAM43F,EAAY,GAElB,OAAS53F,EAAQoyF,EAAE2B,cAAc72F,QAAQ,CACvC,MAAM2Z,EAAMu7E,EAAEgD,aAAahD,EAAE2B,cAAc/zF,GAAOka,eAElD,IAAKrD,EACH,SAGF,MAAM+D,EAAU03E,GAAaF,EAAGv7E,GAC1Bg9E,EAAK/pF,OAAO+M,EAAIuD,YAChB05E,EAASZ,GAAYW,EAAG1zF,eAC9B,IAAI03F,EAAiB,EAErB,MAAMC,EAAiB,GAEvB,OAASD,GAAkBzF,EAAE6B,eAAeJ,IAAK,CAE/C,MAAMkE,EAAgB,CACpBjtF,KAAM,UACN6Q,QAAS,IACTk6E,WAAY,CACVjxF,KACE,IACAwtF,EAAE+B,cACF,SACAL,GACC+D,EAAiB,EAAI,IAAMA,EAAiB,IAC/CG,qBAAqB,EACrB/C,UAAW,CAAC,yBACZgD,UAAW7F,EAAE+E,mBAEf7rF,SAAU,CAAC,CAACR,KAAM,OAAQvO,MAAO,YAG/Bs7F,EAAiB,GACnBE,EAAczsF,SAAS7Q,KAAK,CAC1BqQ,KAAM,UACN6Q,QAAS,MACTrQ,SAAU,CAAC,CAACR,KAAM,OAAQvO,MAAOuN,OAAO+tF,OAIxCC,EAAe56F,OAAS,GAC1B46F,EAAer9F,KAAK,CAACqQ,KAAM,OAAQvO,MAAO,MAG5Cu7F,EAAer9F,KAAKs9F,GAGtB,MAAM1kF,EAAOuH,EAAQA,EAAQ1d,OAAS,GAEtC,GAAImW,GAAsB,YAAdA,EAAKvI,MAAuC,MAAjBuI,EAAKsI,QAAiB,CAC3D,MAAMu8E,EAAW7kF,EAAK/H,SAAS+H,EAAK/H,SAASpO,OAAS,GAClDg7F,GAA8B,SAAlBA,EAASptF,KACvBotF,EAAS37F,OAAS,IAElB8W,EAAK/H,SAAS7Q,KAAK,CAACqQ,KAAM,OAAQvO,MAAO,MAG3C8W,EAAK/H,SAAS7Q,QAAQq9F,QAEtBl9E,EAAQngB,QAAQq9F,GAIlB,MAAMtN,EAAW,CACf1/E,KAAM,UACN6Q,QAAS,KACTk6E,WAAY,CAAChC,GAAIzB,EAAE+B,cAAgB,MAAQL,GAC3CxoF,SAAUooF,GAAU94E,GAAS,IAG3B/D,EAAIlW,WACN6pF,EAAS7pF,SAAWkW,EAAIlW,UAG1Bi3F,EAAUn9F,KAAK+vF,GAGjB,OAAyB,IAArBoN,EAAU16F,OACL,KAGF,CACL4N,KAAM,UACN6Q,QAAS,UACTk6E,WAAY,CAACsC,eAAe,EAAMlD,UAAW,CAAC,cAC9C3pF,SAAU,CACR,CACER,KAAM,UACN6Q,QAASy2E,EAAE6E,qBACXpB,WAAY,IACPvxF,KAAK/G,MAAM+G,KAAKC,UAAU6tF,EAAE8E,0BAC/BrD,GAAI,kBAENvoF,SAAU,CAACglF,GAAE,OAAQ8B,EAAE4E,iBAEzB,CAAClsF,KAAM,OAAQvO,MAAO,MACtB,CACEuO,KAAM,UACN6Q,QAAS,KACTk6E,WAAY,GACZvqF,SAAUooF,GAAUkE,GAAW,IAEjC,CAAC9sF,KAAM,OAAQvO,MAAO,QAwmCb67F,CAAOhG,GASpB,OAPIuF,GAIF5tF,EAAKuB,SAAS7Q,KAAK61F,GAAE,OAAQ,MAAOqH,GAG/Bl8F,MAAMF,QAAQwO,GAAQ,CAACe,KAAM,OAAQQ,SAAUvB,GAAQA,EAmDnC,IAAIsuF,GAR/B,SACYztF,EAAazO,GACrB,OAAOyO,GAAe,QAASA,EAcrC,SAAgBA,EAAazO,GAC3B,MAAO,CAAC4N,EAAM1H,EAAM4E,KAClB2D,EAAYhE,IAAI8wF,GAAO3tF,EAAM5N,GAAUkG,GAAO0C,IAC5CkC,EAAKlC,OAhBDuzF,CAAO1tF,EAAazO,GA2B9B,SAAgBA,GAEd,OAAQ4N,GAAS2tF,GAAO3tF,EAAM5N,GA5BtBo8F,CAAO3tF,GAAezO,IAgChC,IAAIq8F,GAAa39F,EAAoB,QACjC49F,GAAkC59F,EAAoByF,EAAEk4F,IAS5D,MAAME,GAOJp3F,YAAY1D,EAAU+6F,EAAQC,GAC5B/2F,KAAKjE,SAAWA,EAChBiE,KAAK82F,OAASA,EACVC,IACF/2F,KAAK+2F,MAAQA,IAyBnB,SAASC,GAAMC,EAAaF,GAE1B,MAAMh7F,EAAW,GAEX+6F,EAAS,GACf,IAAI34F,GAAS,EAEb,OAASA,EAAQ84F,EAAY57F,QAC3BnC,OAAOsO,OAAOzL,EAAUk7F,EAAY94F,GAAOpC,UAC3C7C,OAAOsO,OAAOsvF,EAAQG,EAAY94F,GAAO24F,QAG3C,OAAO,IAAID,GAAO96F,EAAU+6F,EAAQC,GAQtC,SAASG,GAAoBx8F,GAC3B,OAAOA,EAAM4D,cAxCfu4F,GAAO19F,UAAU4C,SAAW,GAE5B86F,GAAO19F,UAAU29F,OAAS,GAE1BD,GAAO19F,UAAU49F,MAAQ,KAwCzB,MAAMI,GAMJ13F,YAAY1D,EAAUq7F,GAEpBp3F,KAAKjE,SAAWA,EAEhBiE,KAAKo3F,UAAYA,GAKrBD,GAAKh+F,UAAU49F,MAAQ,KACvBI,GAAKh+F,UAAUk+F,SAAU,EACzBF,GAAKh+F,UAAUkE,YAAa,EAC5B85F,GAAKh+F,UAAUmE,mBAAoB,EACnC65F,GAAKh+F,UAAUoE,QAAS,EACxB45F,GAAKh+F,UAAUsE,gBAAiB,EAChC05F,GAAKh+F,UAAUqE,gBAAiB,EAChC25F,GAAKh+F,UAAUuE,uBAAwB,EACvCy5F,GAAKh+F,UAAUm+F,iBAAkB,EACjCH,GAAKh+F,UAAUuf,SAAU,EAGzB,IAAI6+E,GAAS,EAEb,MAAMn6F,GAAgBo6F,KAChBn6F,GAAam6F,KACbl6F,GAAoBk6F,KACpBj6F,GAASi6F,KACTh6F,GAAiBg6F,KACjB/5F,GAAiB+5F,KACjB95F,GAAwB85F,KAE9B,SAASA,KACP,OAAO,KAAOD,GAShB,MAAMvI,GAAS91F,OAAO8P,KAAK7L,GAE3B,MAAMs6F,WAAiCN,GAQrC13F,YAAY1D,EAAUq7F,EAAWM,EAAMX,GACrC,IAAI54F,GAAS,EAMb,GAJA2B,MAAM/D,EAAUq7F,GAEhBO,GAAK33F,KAAM,QAAS+2F,GAEA,kBAATW,EACT,OAASv5F,EAAQ6wF,GAAO3zF,QAAQ,CAC9B,MAAMiT,EAAQ0gF,GAAO7wF,GACrBw5F,GAAK33F,KAAMgvF,GAAO7wF,IAASu5F,EAAOv6F,EAAsBmR,MAAYnR,EAAsBmR,MAalG,SAASqpF,GAAK3yF,EAAQhL,EAAKU,GACrBA,IAEFsK,EAAOhL,GAAOU,GAVlB+8F,GAAyBt+F,UAAUuf,SAAU,EAiC7C,MAAMk/E,GAAa,GAAGx+F,eAMtB,SAASy+F,GAAcz+E,GAErB,MAAMrd,EAAW,GAEX+6F,EAAS,GAEf,IAAI/yF,EAEJ,IAAKA,KAAQqV,EAAW46E,WACtB,GAAI4D,GAAW/9F,KAAKuf,EAAW46E,WAAYjwF,GAAO,CAChD,MAAMrJ,EAAQ0e,EAAW46E,WAAWjwF,GAC9BwP,EAAO,IAAIkkF,GACf1zF,EACAqV,EAAW0+E,UAAU1+E,EAAW2+E,YAAc,GAAIh0F,GAClDrJ,EACA0e,EAAW29E,OAIX39E,EAAWk+E,iBACXl+E,EAAWk+E,gBAAgBtzF,SAASD,KAEpCwP,EAAK+jF,iBAAkB,GAGzBv7F,EAASgI,GAAQwP,EAEjBujF,EAAOI,GAAoBnzF,IAASA,EACpC+yF,EAAOI,GAAoB3jF,EAAK6jF,YAAcrzF,EAIlD,OAAO,IAAI8yF,GAAO96F,EAAU+6F,EAAQ19E,EAAW29E,OAMjD,MAAMiB,GAAQH,GAAc,CAC1Bd,MAAO,QACPe,UAAS,CAACtjF,EAAGzQ,IACJ,SAAWA,EAAK1F,MAAM,GAAGC,cAElC01F,WAAY,CACViE,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QAOTC,GAAMX,GAAc,CACxBd,MAAO,MACPe,UAAS,CAACtjF,EAAGzQ,IACJ,OAASA,EAAK1F,MAAM,GAAGC,cAEhC01F,WAAY,CAACyE,QAAS,KAAMC,QAAS,KAAMC,SAAU,QASvD,SAASC,GAAuBb,EAAYX,GAC1C,OAAOA,KAAaW,EAAaA,EAAWX,GAAaA,EAW3D,SAASyB,GAAyBd,EAAYh8F,GAC5C,OAAO68F,GAAuBb,EAAYh8F,EAASuC,eAOrD,MAAMw6F,GAAQjB,GAAc,CAC1Bd,MAAO,QACPgB,WAAY,CAACgB,WAAY,eACzBjB,UAAWe,GACX7E,WAAY,CAAC8E,MAAO,KAAME,WAAY,QAOlCC,GAAOpB,GAAc,CACzBC,UAAS,CAACtjF,EAAGzQ,IACK,SAATA,EAAkBA,EAAO,QAAUA,EAAK1F,MAAM,GAAGC,cAE1D01F,WAAY,CACVkF,qBAAsB,KACtBC,WAAY97F,GACZ+7F,iBAAkB,KAClBC,SAAUh8F,GACVi8F,YAAaj8F,GACbk8F,aAAch8F,GACdi8F,aAAcj8F,GACdk8F,YAAal8F,GACbm8F,aAAcl8F,GACdm8F,YAAa,KACbnH,gBAAiBh1F,GACjBo8F,YAAa,KACbC,aAAcx8F,GACdy8F,eAAgBt8F,GAChBu8F,iBAAkB,KAClBC,aAAc38F,GACd48F,WAAYz8F,GACZ08F,YAAa78F,GACb88F,aAAc,KACdC,WAAY/8F,GACZg9F,YAAa,KACbC,iBAAkB,KAClBlE,UAAW,KACXmE,eAAgB/8F,GAChBg9F,UAAWj9F,GACXk9F,SAAU,KACVC,UAAWr9F,GACXs9F,cAAet9F,GACfu9F,oBAAqBv9F,GACrBw9F,gBAAiB,KACjBC,SAAUt9F,GACVu9F,gBAAiB,KACjBC,aAAcz9F,GACd09F,YAAa59F,GACb69F,aAAc79F,GACd89F,aAAc,KACdC,aAAc/9F,GACdg+F,oBAAqB79F,GACrB89F,aAAc/9F,GACdg+F,aAAch+F,GACdi+F,YAAaj+F,GACbk+F,aAAcp+F,GACdq+F,YAAan+F,GACbo+F,SAAU,KACVC,aAAcr+F,GACds+F,aAAct+F,GACdu+F,aAAcv+F,GACdw+F,cAAe,KACfC,KAAM,QASJC,GAAgBpE,GAAc,CAClCd,MAAO,OACPgB,WAAY,CACVmE,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEbvE,UAAWe,GACXvB,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClDtD,WAAY,CAEVsI,KAAM,KACNC,OAAQ9+F,GACR++F,cAAeh/F,GACfi/F,UAAWj/F,GACXk/F,OAAQ,KACRC,MAAO,KACPC,gBAAiBx/F,GACjBy/F,oBAAqBz/F,GACrB0/F,eAAgB1/F,GAChBmM,IAAK,KACLwzF,GAAI,KACJC,MAAO5/F,GACP6/F,eAAgB,KAChBC,aAAc1/F,GACd2/F,UAAW//F,GACXggG,SAAUhgG,GACVigG,QAASjgG,GACTkgG,QAAS,KACT1P,QAASxwF,GACTmgG,KAAM,KACNnK,UAAW51F,GACXggG,KAAMjgG,GACNkgG,QAAS,KACT1kF,QAAS,KACT2kF,gBAAiBrgG,GACjBsgG,SAAUvgG,GACVwgG,aAAcpgG,GACdqgG,OAAQtgG,GAASE,GACjBqgG,YAAa,KACbp6F,KAAM,KACNq6F,SAAU,KACVC,SAAU,KACVC,QAAS7gG,GACT8gG,MAAO9gG,GACP+gG,IAAK,KACLC,QAAS,KACTtK,SAAU12F,GACVihG,SAAU/gG,GACVghG,UAAWjhG,GACXkhG,QAAS,KACTC,aAAc,KACdC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgBzhG,GAChB0hG,WAAY,KACZC,QAASvhG,GACTwhG,OAAQzhG,GACR0hG,OAAQ7hG,GACR8hG,KAAM3hG,GACNwF,KAAM,KACNo8F,SAAU,KACVC,QAAS5hG,GACT6hG,UAAW7hG,GACXw0F,GAAI,KACJsN,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXlQ,GAAI,KACJmQ,MAAOtiG,GACPuiG,OAAQ,KACRC,SAAUpiG,GACVqiG,QAASriG,GACTsiG,UAAW1iG,GACX2iG,SAAUviG,GACVwY,KAAM,KACN2B,MAAO,KACP8uC,KAAM,KACNu5C,SAAU,KACVr2F,KAAM,KACNs2F,QAAS,KACTC,KAAM9iG,GACN+iG,IAAK5iG,GACL6iG,SAAU,KACVt0F,IAAK,KACLu0F,UAAW9iG,GACX8jF,MAAO,KACPif,OAAQ,KACRC,IAAK,KACLC,UAAWjjG,GACXkjG,SAAUrjG,GACVsjG,MAAOtjG,GACP7C,KAAM,KACNomG,MAAO,KACPC,SAAUxjG,GACVyjG,WAAYzjG,GACZ0jG,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACTtvF,KAAMxZ,GACN+oG,QAAS5oG,GACT6oG,QAAS,KACTC,KAAM7oG,GACN8oG,YAAa,KACbC,YAAanpG,GACbopG,OAAQ,KACRC,QAAS,KACTC,SAAUtpG,GACVupG,eAAgB,KAChBC,IAAKppG,GACLqpG,SAAUzpG,GACV0pG,SAAU1pG,GACV+2F,KAAM52F,GACNwpG,QAASxpG,GACTypG,QAASxpG,GACTypG,MAAO,KACPC,OAAQ9pG,GACR+pG,SAAU/pG,GACVgqG,SAAUhqG,GACViqG,MAAO,KACPr7F,KAAMzO,GACN+pG,MAAO,KACPC,KAAM,KACNC,KAAMjqG,GACNkqG,WAAYpqG,GACZtC,IAAK,KACL2sG,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRvoG,MAAO9B,GACPiyF,KAAM,KACN7zF,MAAO,KACPksG,SAAUtqG,GACVlD,OAAQ,KACR2d,MAAO,KACP8vF,UAAW,KACX7+F,KAAM,KACN8+F,cAAe3qG,GACf4qG,OAAQ,KACRttG,MAAO2C,GACP4qG,MAAO1qG,GACPyI,KAAM,KAINouF,MAAO,KACP8T,MAAO,KACPC,QAAS3qG,GACT4qG,KAAM,KACNC,WAAY,KACZC,QAAS,KACTC,OAAQhrG,GACRirG,YAAa,KACbC,aAAclrG,GACdmrG,YAAa,KACbC,YAAa,KACbC,KAAM,KACNC,QAAS,KACTC,QAAS,KACTC,MAAO,KACPrnG,KAAM,KACNsnG,SAAU,KACVC,SAAU,KACVC,MAAO,KACPC,QAAS/rG,GACTgsG,QAAShsG,GACT2S,MAAO,KACPs5F,KAAM,KACNC,MAAO,KACPC,YAAa,KACbC,OAAQjsG,GACRksG,WAAYlsG,GACZ6pF,KAAM,KACNsiB,SAAU,KACVC,OAAQ,KACRC,aAAcrsG,GACdssG,YAAatsG,GACbusG,SAAU1sG,GACV2sG,OAAQ3sG,GACR4sG,QAAS5sG,GACT6sG,OAAQ7sG,GACR8sG,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRC,IAAK,KACLC,YAAa/sG,GACbgtG,MAAO,KACPC,OAAQ,KACRC,UAAWptG,GACXqtG,QAAS,KACTC,QAAS,KACTx4F,KAAM,KACNy4F,UAAWrtG,GACXstG,UAAW,KACXC,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,OAAQ1tG,GAGR2tG,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyBjuG,GACzBkuG,sBAAuBluG,GACvB8O,OAAQ,KACRnQ,SAAU,KACVwvG,QAAShuG,GACTiuG,SAAU,KACVC,aAAc,QASZC,GAAM7T,GAAc,CACxBd,MAAO,MACPgB,WAAY,CACV4T,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACX3Y,UAAW,QACX4Y,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChBvO,YAAa,cACbwO,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACbC,UAAW,aACXC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1BnO,SAAU,WACVoO,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZ3N,QAAS,UACT4N,WAAY,aACZ3N,aAAc,eACdE,cAAe,gBACf0N,QAAS,UACTvN,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,SAAU,WACVC,QAAS,UACTC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACXkM,MAAO,QACPjM,QAAS,UACTC,QAAS,UACTC,QAAS,UACTgM,UAAW,YACXC,WAAY,aACZ/L,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACX4K,aAAc,eACd3K,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACdkK,SAAU,WACVhK,QAAS,UACTC,SAAU,WACVC,SAAU,WACVE,SAAU,WACVC,UAAW,YACXC,SAAU,WACV2J,OAAQ,SACRzJ,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACXiJ,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACTC,cAAe,iBACf5I,eAAgB,iBAChB6I,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACfC,YAAa,eACbvI,SAAU,WACVwI,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACfC,OAAQ,SACRC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjB5Z,UAAWc,GACX5E,WAAY,CACV2d,MAAOj0G,GACPiuG,aAAcpuG,GACdq0G,WAAY,KACZC,SAAU,KACVjG,kBAAmB,KACnBkG,WAAYv0G,GACZw0G,UAAWx0G,GACXsuG,WAAY,KACZmG,OAAQz0G,GACR00G,cAAe,KACfC,cAAe,KACfC,QAAS50G,GACT60G,UAAW,KACXtG,cAAe,KACfuG,cAAe,KACfC,YAAa,KACbC,KAAM,KACNC,MAAO,KACPC,KAAMl1G,GACNm1G,GAAI,KACJC,SAAU,KACV5G,UAAWxuG,GACX61F,UAAW51F,GACXo1G,KAAM,KACN5G,SAAU,KACV6G,cAAe,KACf5G,SAAU,KACV/C,MAAO,KACPgD,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChBtzF,QAAS,KACT+5F,kBAAmB,KACnBC,iBAAkB,KAClBjV,YAAa,KACbkV,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJ52G,EAAG,KACHgwG,SAAU,KACV6G,cAAe,KACfC,QAAS71G,GACT81G,gBAAiB91G,GACjB+1G,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAASl2G,GACTgvG,iBAAkB,KAClBlO,SAAUjhG,GACVs2G,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWv2G,GACXivG,iBAAkB,KAClBltG,IAAK,KACLyQ,MAAO,KACPgkG,SAAUx2G,GACVy2G,0BAA2B,KAC3BC,KAAM,KACNxH,YAAalvG,GACbmvG,SAAU,KACVwH,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbzH,WAAY,KACZC,aAAc,KACdyH,UAAW,KACXC,eAAgB,KAChBzH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZoH,OAAQ,KACRC,GAAI,KACJzqG,KAAM,KACN0qG,GAAI,KACJC,GAAI,KACJC,GAAIl3G,GACJm3G,GAAIn3G,GACJ2vG,UAAW3vG,GACX4vG,2BAA4B,KAC5BC,yBAA0B,KAC1BuH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACftoB,QAAS,KACTuoB,QAASz3G,GACT03G,kBAAmB,KACnBC,WAAY,KACZlW,OAAQ,KACRj8F,KAAM,KACNo8F,SAAU,KACVoO,UAAWhwG,GACXiwG,aAAcjwG,GACdkwG,aAAclwG,GACdy0F,GAAI,KACJmjB,YAAa53G,GACbmwG,eAAgB,KAChB0H,kBAAmB,KACnBpyD,GAAI,KACJqyD,IAAK,KACLC,UAAW/3G,GACXg4G,EAAGh4G,GACHi4G,GAAIj4G,GACJk4G,GAAIl4G,GACJm4G,GAAIn4G,GACJo4G,GAAIp4G,GACJq4G,aAAcl4G,GACdm4G,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTxvD,KAAM,KACNyvD,aAAc,KACdvI,cAAe,KACfC,cAAe,KACfuI,kBAAmB54G,GACnB64G,MAAO,KACPvI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbsI,aAAc,KACdC,YAAa,KACbC,YAAa,KACb7e,KAAM,KACN8e,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACd5qG,IAAK,KACLu1E,MAAO,KACPs1B,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAWt5G,GACXu5G,UAAW,KACXxW,OAAQ,KACRC,IAAK,KACLwW,KAAM,KACNx8G,KAAM,KACNyzG,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZuI,WAAY,KACZC,SAAU,KACVroG,OAAQ,KACRkyF,QAAS,KACT4N,WAAY,KACZ3N,aAAc,KACdE,cAAe,KACf0N,QAAS,KACTvN,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACVC,QAAS,KACTC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXkM,MAAO,KACPjM,QAAS,KACTC,QAAS,KACTC,QAAS,KACTgM,UAAW,KACXC,WAAY,KACZ/L,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACX4K,aAAc,KACd3K,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdkK,SAAU,KACVhK,QAAS,KACTC,SAAU,KACVC,SAAU,KACVE,SAAU,KACVC,UAAW,KACXC,SAAU,KACV2J,OAAQ,KACRzJ,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXiJ,OAAQ,KACRgI,QAAS,KACTC,SAAU,KACV3zG,MAAO,KACP4zG,OAAQ,KACRC,YAAa,KACbz3G,OAAQ,KACR03G,SAAU,KACVC,QAAS,KACTpI,iBAAkB5xG,GAClB6xG,kBAAmB7xG,GACnB8xG,WAAY,KACZC,QAAS,KACT1uG,KAAM,KACN42G,WAAYj6G,GACZk6G,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACPvR,KAAM7oG,GACNq6G,MAAO,KACPpG,cAAe,KACflC,cAAe,KACfuI,OAAQ,KACRC,UAAWx6G,GACXy6G,UAAWz6G,GACX06G,UAAW16G,GACX26G,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACXt8G,SAAU2B,GACVrB,EAAG,KACHi8G,OAAQ,KACR3R,eAAgB,KAChB4R,KAAM,KACNC,KAAM,KACN5R,IAAKlpG,GACL2sG,IAAK3sG,GACL8xG,gBAAiB,KACjBiJ,YAAa,KACbC,UAAW,KACXC,mBAAoBj7G,GACpBk7G,iBAAkBl7G,GAClBm7G,cAAen7G,GACfo7G,gBAAiBp7G,GACjBiuF,SAAU,KACVotB,QAAS,KACT92G,OAAQ,KACR+2G,OAAQ,KACR/uC,GAAI,KACJgvC,GAAI,KACJC,MAAO,KACPC,KAAM,KACN1J,eAAgB,KAChB2J,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkBh8G,GAClBi8G,iBAAkBj8G,GAClBk8G,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACbrK,UAAW,KACXC,YAAa,KACbC,sBAAuBryG,GACvBsyG,uBAAwBtyG,GACxB0oF,OAAQ,KACR+zB,OAAQ,KACRlK,gBAAiBpyG,GACjBqyG,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB3yG,GAClB4yG,cAAe5yG,GACf6yG,YAAa,KACbz0G,MAAO,KACPs+G,aAAc18G,GACd28G,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgB78G,GAChBmqG,SAAUtqG,GACVi9G,YAAa,KACbngH,OAAQ,KACRogH,QAASl9G,GACTm9G,QAASn9G,GACT8yG,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACfoK,WAAY,KACZjJ,cAAe,KACf15F,MAAO,KACP4iG,kBAAmB,KACnB3xG,KAAM,KACNunG,OAAQ9yG,GACRm9G,GAAI,KACJ/iB,UAAW,KACXgjB,GAAI,KACJC,GAAI,KACJtK,kBAAmBlzG,GACnBmzG,mBAAoBnzG,GACpBy9G,QAAS,KACTrK,YAAa,KACbC,aAAc,KACdC,WAAYtzG,GACZyH,OAAQ,KACR8rG,YAAavzG,GACb0zG,cAAe1zG,GACf2zG,aAAc,KACdH,SAAUxzG,GACVyzG,aAAczzG,GACdutG,QAAS,KACTqG,SAAU5zG,GACV6zG,YAAa7zG,GACb8zG,YAAa9zG,GACb09G,QAAS,KACTC,WAAY,KACZC,WAAY,KACZlT,MAAO,KACPmT,OAAQ,KACR9J,YAAa,KACbC,YAAa,KACb8J,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBhK,QAASj0G,GACTk+G,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QAqBVC,GAA4B/kB,GAAM,CAACwB,GAAKR,GAAOc,GAAOG,GAAMgD,IAAgB,QAC5E+f,GAA2BhlB,GAAM,CAACwB,GAAKR,GAAOc,GAAOG,GAAMyS,IAAM,OA0BvE,SAASuQ,GAAa3hH,GACpB,GAAIA,EAAQ4hH,iBAAmB5hH,EAAQ6hH,mBACrC,MAAM,IAAIr7G,UACR,4EAIJ,GACExG,EAAQ4hH,iBACR5hH,EAAQ6hH,oBACR7hH,EAAQ8hH,aAER,OAAQ3zG,IACNsnF,GAAuBtnF,EAAM,WAAW,CAACP,EAAM/J,EAAOk+G,KACpD,MAAMhvB,EAAqC,EAE3C,IAAIzjF,EAYJ,GAVItP,EAAQ4hH,gBACVtyG,GAAUtP,EAAQ4hH,gBAAgBl4G,SAASkE,EAAK4R,SACvCxf,EAAQ6hH,qBACjBvyG,EAAStP,EAAQ6hH,mBAAmBn4G,SAASkE,EAAK4R,WAG/ClQ,GAAUtP,EAAQ8hH,cAAiC,kBAAVj+G,IAC5CyL,GAAUtP,EAAQ8hH,aAAal0G,EAAM/J,EAAOkvF,IAG1CzjF,GAA2B,kBAAVzL,EAOnB,OANI7D,EAAQgiH,kBAAoBp0G,EAAKuB,SACnC4jF,EAAO5jF,SAASC,OAAOvL,EAAO,KAAM+J,EAAKuB,UAEzC4jF,EAAO5jF,SAASC,OAAOvL,EAAO,GAGzBA,MAUjB,IAAIo+G,GAAWvjH,EAAoB,QAC/BwjH,GAAgCxjH,EAAoByF,EAAE89G,IAO1D,SAASE,GAAWC,GAElB,IAAIhiH,EAEFgiH,GAA0B,kBAAVA,GAAqC,SAAfA,EAAMzzG,KAExCyzG,EAAMhiH,OAAS,GACfgiH,EAIN,MAAwB,kBAAVhiH,GAA4D,KAAtCA,EAAM0d,QAAQ,eAAgB,IAYpE,MAAMukG,GAAQ,kBACRrqE,GAAO,UACP/F,GAAM,SA+CZ,SAASqwE,GAAMr2B,GACb,MAAO,IAAMA,EAAGjoF,cAOlB,SAASu+G,GAAUt2B,GACjB,OAAOA,EAAGvoF,OAAO,GAAGqa,cAItB,MAAMykG,GAAc,CAClBhU,QAAS,UACTwD,SAAU,WACV3M,OAAQ,SACRmQ,gBAAiB,kBACjBC,iBAAkB,mBAClBC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBM,OAAQ,SACRvY,aAAc,eACdC,aAAc,eACdC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXS,WAAY,cA6Fd,IAAI+jB,GAAkB/jH,EAAoB,QACtCgkH,GAAuChkH,EAAoByF,EAAEs+G,IA+GjE,MAAME,GAAmB,GAAG7jH,eAItB8jH,GAAgB,IAAIC,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAMnE,SAASC,GAAgB3sG,EAASvI,GAEhC,MAAMuB,EAAW,GACjB,IAEIsqF,EAFAspB,GAAc,EAIlB,OAASA,EAAan1G,EAAKuB,SAASpO,QAClC04F,EAAQ7rF,EAAKuB,SAAS4zG,GAEH,YAAftpB,EAAM9qF,KACRQ,EAAS7Q,KAAK0kH,GAAQ7sG,EAASsjF,EAAOspB,EAAYn1G,IAC1B,SAAf6rF,EAAM9qF,KASC,YAAdf,EAAKe,MACJi0G,GAAcK,IAAIr1G,EAAK4R,UACvB2iG,GAAW1oB,IAEZtqF,EAAS7Q,KAAKm7F,EAAMr5F,OAEE,QAAfq5F,EAAM9qF,MAAmBwH,EAAQnW,QAAQkjH,UAElD/zG,EAAS7Q,KAAKm7F,EAAMr5F,OAIxB,OAAO+O,EAST,SAAS6zG,GAAQ7sG,EAASvI,EAAM/J,EAAOkvF,GACrC,MAAM/yF,EAAUmW,EAAQnW,QAClBmjH,EAAehtG,EAAQitG,OAGvBnjH,EAAO2N,EAAK4R,QAEZk6E,EAAa,GACnB,IAEIj4F,EAFA2hH,EAASD,EASb,GAL2B,SAAvBA,EAAa1mB,OAA6B,QAATx8F,IACnCmjH,EAAS1B,GACTvrG,EAAQitG,OAASA,GAGfx1G,EAAK8rF,WACP,IAAKj4F,KAAYmM,EAAK8rF,WAChBipB,GAAiBpjH,KAAKqO,EAAK8rF,WAAYj4F,IACzC4hH,GAAY3pB,EAAYj4F,EAAUmM,EAAK8rF,WAAWj4F,GAAW0U,GAKtD,OAATlW,GAA0B,OAATA,GACnBkW,EAAQmtG,YAGV,MAAMn0G,EAAW2zG,GAAgB3sG,EAASvI,GAE7B,OAAT3N,GAA0B,OAATA,GACnBkW,EAAQmtG,YAIVntG,EAAQitG,OAASD,EAIjB,MAAM3+G,EAAWoJ,EAAKpJ,UAAY,CAChCO,MAAO,CAACH,KAAM,KAAMC,OAAQ,KAAMyP,OAAQ,MAC1CtP,IAAK,CAACJ,KAAM,KAAMC,OAAQ,KAAMyP,OAAQ,OAEpCivG,EACJvjH,EAAQwjH,YAAcb,GAAiBpjH,KAAKS,EAAQwjH,WAAYvjH,GAC5DD,EAAQwjH,WAAWvjH,GACnBA,EACAwjH,EAA6B,kBAAdF,GAA0BA,IAAcr/G,EAAcw/G,EAAEC,SAE7E,IAAKzB,GAAiBwB,EAAEE,mBAAmBL,GACzC,MAAM,IAAI/8G,UACR,wBAAwBvG,wCA2D5B,GAvDAy5F,EAAWh6F,IAAM,CACfO,EACAuE,EAASO,MAAMH,KACfJ,EAASO,MAAMF,OACfhB,GACAwD,KAAK,KAEM,MAATpH,GAAgBD,EAAQ6jH,aAC1BnqB,EAAW35F,OACqB,oBAAvBC,EAAQ6jH,WACX7jH,EAAQ6jH,WACNl2G,OAAO+rF,EAAWjxF,MAAQ,IAC1BmF,EAAKuB,SACuB,kBAArBuqF,EAAWh8E,MAAqBg8E,EAAWh8E,MAAQ,MAE5D1d,EAAQ6jH,YAGH,MAAT5jH,GAAgBD,EAAQ8jH,mBAC1BpqB,EAAWjxF,KAAOzI,EAAQ8jH,iBACxBn2G,OAAO+rF,EAAWjxF,MAAQ,IAC1BmF,EAAKuB,SACuB,kBAArBuqF,EAAWh8E,MAAqBg8E,EAAWh8E,MAAQ,OAK3D+lG,GACQ,SAATxjH,GACgB,YAAhB8yF,EAAOpkF,MACY,QAAnBokF,EAAOvzE,UAEPk6E,EAAWqqB,QAAS,GAInBN,GACS,OAATxjH,GACU,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,IAEFy5F,EAAWsqB,MAAQp3G,OAAOk/E,SAAS7rF,EAAKyD,OAAO,GAAI,KAGxC,QAATzD,GAAkBD,EAAQikH,oBAC5BvqB,EAAWj5F,IAAMT,EAAQikH,kBACvBt2G,OAAO+rF,EAAWj5F,KAAO,IACzBkN,OAAO+rF,EAAWzqF,KAAO,IACG,kBAArByqF,EAAWh8E,MAAqBg8E,EAAWh8E,MAAQ,QAIzD+lG,GAAkB,OAATxjH,GAAiC,YAAhB8yF,EAAOpkF,KAAoB,CACxD,MAAMu1G,EA0DV,SAAyBt2G,GACvB,IAAI/J,GAAS,EAEb,OAASA,EAAQ+J,EAAKuB,SAASpO,QAAQ,CACrC,MAAM04F,EAAQ7rF,EAAKuB,SAAStL,GAE5B,GAAmB,YAAf41F,EAAM9qF,MAAwC,UAAlB8qF,EAAMj6E,QACpC,OAAOi6E,EAIX,OAAO,KArES0qB,CAAgBv2G,GAC9B8rF,EAAWpG,QACT4wB,GAASA,EAAMxqB,WAAa7qF,QAAQq1G,EAAMxqB,WAAWpG,SAAW,KAClEoG,EAAW71F,MAAQugH,GAAuBrxB,EAAQnlF,GAClD8rF,EAAWtG,QAA6B,OAAnBL,EAAOvzE,QAgKhC,IAAyB1a,EAnHvB,OA1CK2+G,GAAmB,OAATxjH,GAA0B,OAATA,IAC9By5F,EAAWtG,QAAmB,OAATnzF,EACrBy5F,EAAW5G,MAAQ38E,EAAQmtG,WAGhB,OAATrjH,GAA0B,OAATA,IACfy5F,EAAWI,QACRJ,EAAWr4F,QAAOq4F,EAAWr4F,MAAQ,IAE1Cq4F,EAAWr4F,MAAMgjH,UAAY3qB,EAAWI,aACjCJ,EAAWI,OAGf2pB,IACH/pB,EAAW4qB,SAAoB,OAATrkH,IAIrBwjH,GAAkB,OAATxjH,GAAiC,YAAhB8yF,EAAOpkF,OACpC+qF,EAAW4qB,SAAWz1G,QAA2B,UAAnBkkF,EAAOvzE,UAInCxf,EAAQukH,YACV7qB,EAAW,kBAsIN,EADgB50F,EArI0BN,GAuI3CO,MAAMH,KACV,IACAE,EAAIC,MAAMF,OACV,IACAC,EAAIE,IAAIJ,KACR,IACAE,EAAIE,IAAIH,QAEP2E,KAAKxH,GAAM2L,OAAO3L,KAClBqF,KAAK,MA7IHo8G,GAASzjH,EAAQwkH,eACpB9qB,EAAW+qB,eAAiB72G,EAAKpJ,WAI9Bi/G,GAASzjH,EAAQ0kH,sBACpBhrB,EAAW71F,MAAQugH,GAAuBrxB,EAAQnlF,GAClD8rF,EAAWirB,aAAeP,GAAuBrxB,IAG9C0wB,IACH/pB,EAAW9rF,KAAOA,GAIbuB,EAASpO,OAAS,EACrBmD,EAAcw/G,EAAEkB,cAAcrB,EAAW7pB,EAAYvqF,GACrDjL,EAAcw/G,EAAEkB,cAAcrB,EAAW7pB,GA0B/C,SAAS0qB,GAAuBrxB,EAAQnlF,GACtC,IAAI/J,GAAS,EACTghH,EAAQ,EAEZ,OAAShhH,EAAQkvF,EAAO5jF,SAASpO,QAC3BgyF,EAAO5jF,SAAStL,KAAW+J,GACK,YAAhCmlF,EAAO5jF,SAAStL,GAAO8K,MAAoBk2G,IAGjD,OAAOA,EAST,SAASxB,GAAYjvB,EAAO3qF,EAAMrJ,EAAOk7F,GACvC,MAAMriF,EAvhBR,SAAcmqG,EAAQhjH,GACpB,MAAMo8F,EAASI,GAAoBx8F,GACnC,IAAIqJ,EAAOrJ,EACP0kH,EAAOjoB,GAEX,GAAIL,KAAU4mB,EAAO5mB,OACnB,OAAO4mB,EAAO3hH,SAAS2hH,EAAO5mB,OAAOA,IAGvC,GAAIA,EAAOz7F,OAAS,GAA4B,SAAvBy7F,EAAOz4F,MAAM,EAAG,IAAiBs+G,GAAMlxG,KAAK/Q,GAAQ,CAE3E,GAAwB,MAApBA,EAAMsD,OAAO,GAAY,CAE3B,MAAMqhH,EAAO3kH,EAAM2D,MAAM,GAAG+Z,QAAQk6B,GAAMuqE,IAC1C94G,EAAO,OAASs7G,EAAKrhH,OAAO,GAAGqa,cAAgBgnG,EAAKhhH,MAAM,OACrD,CAEL,MAAMghH,EAAO3kH,EAAM2D,MAAM,GAEzB,IAAKi0C,GAAK7mC,KAAK4zG,GAAO,CACpB,IAAIC,EAASD,EAAKjnG,QAAQm0B,GAAKqwE,IAEN,MAArB0C,EAAOthH,OAAO,KAChBshH,EAAS,IAAMA,GAGjB5kH,EAAQ,OAAS4kH,GAIrBF,EAAO3nB,GAGT,OAAO,IAAI2nB,EAAKr7G,EAAMrJ,GAsfT6kH,CAAK3pB,EAAI8nB,OAAQ35G,GAC9B,IAAI9B,EAASvH,EAIE,OAAXuH,QAA8BlC,IAAXkC,GAAwBA,IAAWA,IAMtDrI,MAAMF,QAAQuI,KAChBA,EAASsR,EAAK9V,eAlZlB,SAA0CuH,EAAQ1K,GAChD,IAAI8M,EAAW9M,GAAW,GAO1B,MAJkC,KAA9B0K,EAAOA,EAAO3J,OAAS,KACzB2J,EAASA,EAAOghF,OAAO,KAGlBhhF,EACJrD,MACEyF,EAASo4G,SAAW,IAAM,IACzB,MACsB,IAArBp4G,EAASq4G,QAAoB,GAAK,MAEtC3hH,OAoY8B4hH,CAAiCz9G,GAA2CA,EAvc/FN,KAAK,KAAK7D,QA0cF,UAAlByV,EAAKxX,UAA0C,kBAAXkG,IACtCA,EAkBJ,SAAoBvH,GAElB,MAAMuH,EAAS,GAEf,IACE+6G,IAAAA,CAA0BtiH,EAAOkB,GACjC,OAIF,OAAOqG,EAMP,SAASrG,EAASrB,EAAMolH,GACtB,MAAMpK,EAAyB,SAArBh7G,EAAK8D,MAAM,EAAG,GAAgB,MAAM9D,EAAK8D,MAAM,KAAO9D,EAChE0H,EAAOszG,EAAEn9F,QAAQ,YAAawnG,KAAkBD,GApCvCE,CAAW59G,IAGlBsR,EAAKwjF,OAASxjF,EAAKxX,SACrB2yF,EACEuuB,GAAiBpjH,KAAKijH,GAAavpG,EAAKxX,UACpC+gH,GAAYvpG,EAAKxX,UACjBwX,EAAKxX,UACPkG,EACKsR,EAAK6jF,YACd1I,EAAMn7E,EAAK6jF,WAAan1F,IAkC5B,SAAS29G,GAAcprG,EAAGgyE,GACxB,OAAOA,EAAGnuE,cA2DZ,MAAMynG,GAAqB,GAAG1mH,eAKxB2mH,GAAa,CACjBp4G,QAAS,CAACkzG,GAAI,UAAW7oB,GAAI,mCAC7BguB,UAAW,CAACnF,GAAI,aAAc7oB,GAAI,kCAClCiuB,WAAY,CAACjuB,GAAI,wCACjBkD,mBAAoB,CAAClD,GAAI,wCACzBkuB,WAAY,CAACluB,GAAI,wCACjB5xF,OAAQ,CAACy6G,GAAI,WAAY7oB,GAAI,6BAC7BmuB,UAAW,CACTtF,GAAI,eACJ7oB,GAAI,sDAENouB,aAAc,CACZvF,GAAI,kBACJ7oB,GAAI,sDAENquB,gBAAiB,CACfxF,GAAI,qBACJ7oB,GAAI,sDAENsuB,iBAAkB,CAChBzF,GAAI,sBACJ7oB,GAAI,mDAUR,SAASx1F,GAAclC,GACrB,IAAK,MAAMN,KAAO+lH,GAChB,GAAID,GAAmBjmH,KAAKkmH,GAAY/lH,IAAQ8lH,GAAmBjmH,KAAKS,EAASN,GAAM,CACrF,MAAMumH,EAAcR,GAAW/lH,GAC/BwmH,QAAQC,KACN,oCACEF,EAAY1F,GAAK,SAAS0F,EAAY1F,kBAAoB,cACtD7gH,+EAA4BumH,EAAYvuB,6BAEzC+tB,GAAW/lH,GAItB,MAAM0M,EAAYP,IACfF,IAAIuoF,IACJvoF,IAAI3L,EAAQomH,eAAiB,IAC7Bz6G,IAAIuwF,GAAK,IACLl8F,EAAQqmH,oBACXzrB,oBAAoB,IAErBjvF,IAAI3L,EAAQsmH,eAAiB,IAC7B36G,IAAIg2G,GAAc3hH,GAEfkG,EAAO,IAAIiD,EAEe,kBAArBnJ,EAAQmP,SACjBjJ,EAAK9F,MAAQJ,EAAQmP,cACS1J,IAArBzF,EAAQmP,UAA+C,OAArBnP,EAAQmP,UACnD+2G,QAAQC,KACN,0EAA0EnmH,EAAQmP,eAItF,MAAMo3G,EAAWn6G,EAAUgC,QAAQhC,EAAUhL,MAAM8E,GAAOA,GAE1D,GAAsB,SAAlBqgH,EAAS53G,KACX,MAAM,IAAInI,UAAU,0BAItB,IAAImB,EAASzD,EAAcw/G,EAAEkB,cAC3B1gH,EAAcw/G,EAAEC,SAChB,GACAb,GAAgB,CAAC9iH,QAAAA,EAASojH,OAAQ3B,GAA2B6B,UAAW,GAAIiD,IAO9E,OAJIvmH,EAAQ84F,YACVnxF,EAASzD,EAAcw/G,EAAEkB,cAAc,MAAO,CAAC9rB,UAAW94F,EAAQ84F,WAAYnxF,IAGzEA,EAGTzF,GAAcskH,aAAe,CAAC1C,iBAAkB7hH,GAEhDC,GAAcukH,UAAY,CAExBt3G,SAAUmtF,GAAmBonB,EAAE/3B,OAE/BmN,UAAWwD,GAAmBonB,EAAE/3B,OAEhCm2B,aAAcxlB,GAAmBonB,EAAEgD,KACnC9E,gBAAiBtlB,GAAmBonB,EAAEiD,QAAQrqB,GAAmBonB,EAAE/3B,QACnEk2B,mBAAoBvlB,GAAmBonB,EAAEiD,QAAQrqB,GAAmBonB,EAAE/3B,QACtEq2B,iBAAkB1lB,GAAmBonB,EAAEkD,KAEvCR,cAAe9pB,GAAmBonB,EAAEiD,QAClCrqB,GAAmBonB,EAAEmD,UAAU,CAC7BvqB,GAAmBonB,EAAE9T,OACrBtT,GAAmBonB,EAAEgD,KACrBpqB,GAAmBonB,EAAEiD,QACnBrqB,GAAmBonB,EAAEmD,UAAU,CAC7BvqB,GAAmBonB,EAAEkD,KACrBtqB,GAAmBonB,EAAE/3B,OACrB2Q,GAAmBonB,EAAE9T,OACrBtT,GAAmBonB,EAAEgD,KACrBpqB,GAAmBonB,EAAEiD,QAGnBrqB,GAAmBonB,EAAE/uB,WAM/B2xB,cAAehqB,GAAmBonB,EAAEiD,QAClCrqB,GAAmBonB,EAAEmD,UAAU,CAC7BvqB,GAAmBonB,EAAE9T,OACrBtT,GAAmBonB,EAAEgD,KACrBpqB,GAAmBonB,EAAEiD,QACnBrqB,GAAmBonB,EAAEmD,UAAU,CAC7BvqB,GAAmBonB,EAAEkD,KACrBtqB,GAAmBonB,EAAE/3B,OACrB2Q,GAAmBonB,EAAE9T,OACrBtT,GAAmBonB,EAAEgD,KACrBpqB,GAAmBonB,EAAEiD,QAGnBrqB,GAAmBonB,EAAE/uB,WAO/B4vB,UAAWjoB,GAAmBonB,EAAEkD,KAChCpC,aAAcloB,GAAmBonB,EAAEkD,KACnC1D,SAAU5mB,GAAmBonB,EAAEkD,KAC/BlC,oBAAqBpoB,GAAmBonB,EAAEkD,KAC1C9C,iBAAkBxnB,GAAmBonB,EAAEmD,UAAU,CAACvqB,GAAmBonB,EAAEgD,KAAMpqB,GAAmBonB,EAAEkD,OAClG/C,WAAYvnB,GAAmBonB,EAAEmD,UAAU,CAACvqB,GAAmBonB,EAAEgD,KAAMpqB,GAAmBonB,EAAE/3B,SAC5Fs4B,kBAAmB3nB,GAAmBonB,EAAEgD,KACxClD,WAAYlnB,GAAmBonB,EAAE9T,SAgB7BkX,KACA,SAAUtoH,EAAQC,GAIxB,IAAIsoH,EAAgB,kCAEhBC,EAAgB,MAChBC,EAAmB,OAGnBC,EAAiB,yCACjBC,EAAc,QACdC,EAAc,uDACdC,EAAkB,UAGlBC,EAAa,aAMbC,EAAe,GA8OnB,SAAS/jH,EAAKgkH,GACZ,OAAOA,EAAMA,EAAI1pG,QAAQwpG,EAAYC,GAAgBA,EAlOvD/oH,EAAOC,QAAU,SAAS4C,EAAOrB,GAC/B,GAAqB,kBAAVqB,EACT,MAAM,IAAImF,UAAU,mCAGtB,IAAKnF,EAAO,MAAO,GAEnBrB,EAAUA,GAAW,GAKrB,IAAIynH,EAAS,EACT5iH,EAAS,EAOb,SAAS6iH,EAAeF,GACtB,IAAIptB,EAAQotB,EAAI9zB,MAAMszB,GAClB5sB,IAAOqtB,GAAUrtB,EAAMr5F,QAC3B,IAAID,EAAI0mH,EAAIz/G,YAvCF,MAwCVlD,GAAU/D,EAAI0mH,EAAIzmH,OAASD,EAAI+D,EAAS2iH,EAAIzmH,OAQ9C,SAASyD,IACP,IAAIO,EAAQ,CAAEH,KAAM6iH,EAAQ5iH,OAAQA,GACpC,OAAO,SAAS+I,GAGd,OAFAA,EAAKpJ,SAAW,IAAImjH,EAAS5iH,GAC7Bo9G,IACOv0G,GAYX,SAAS+5G,EAAS5iH,GAChBW,KAAKX,MAAQA,EACbW,KAAKV,IAAM,CAAEJ,KAAM6iH,EAAQ5iH,OAAQA,GACnCa,KAAKI,OAAS9F,EAAQ8F,OAMxB6hH,EAAS9oH,UAAU4f,QAAUpd,EAE7B,IAAIumH,EAAa,GAQjB,SAASh/G,EAAMi/G,GACb,IAAIC,EAAM,IAAI5iH,MACZlF,EAAQ8F,OAAS,IAAM2hH,EAAS,IAAM5iH,EAAS,KAAOgjH,GAQxD,GANAC,EAAI1iH,OAASyiH,EACbC,EAAIC,SAAW/nH,EAAQ8F,OACvBgiH,EAAIljH,KAAO6iH,EACXK,EAAIjjH,OAASA,EACbijH,EAAIhiH,OAASzE,GAETrB,EAAQgoH,OAGV,MAAMF,EAFNF,EAAWtpH,KAAKwpH,GAYpB,SAASp0B,EAAMu0B,GACb,IAAIC,EAAID,EAAGp0B,KAAKxyF,GAChB,GAAK6mH,EAAL,CACA,IAAIV,EAAMU,EAAE,GAGZ,OAFAR,EAAeF,GACfnmH,EAAQA,EAAM0C,MAAMyjH,EAAIzmH,QACjBmnH,GAMT,SAAS/F,IACPzuB,EAAMuzB,GASR,SAASkB,EAASlY,GAChB,IAAImY,EAEJ,IADAnY,EAAQA,GAAS,GACTmY,EAAIh+B,MACA,IAANg+B,GACFnY,EAAM3xG,KAAK8pH,GAGf,OAAOnY,EAST,SAAS7lB,IACP,IAAItlF,EAAMN,IACV,GAnJgB,KAmJKnD,EAAMqC,OAAO,IAlJvB,KAkJyCrC,EAAMqC,OAAO,GAAjE,CAGA,IADA,IAAI5C,EAAI,EAENymH,GAAgBlmH,EAAMqC,OAAO5C,KAtJpB,KAuJIO,EAAMqC,OAAO5C,IAxJZ,KAwJmCO,EAAMqC,OAAO5C,EAAI,OAEhEA,EAIJ,GAFAA,GAAK,EAEDymH,IAAiBlmH,EAAMqC,OAAO5C,EAAI,GACpC,OAAO8H,EAAM,0BAGf,IAAI4+G,EAAMnmH,EAAM0C,MAAM,EAAGjD,EAAI,GAM7B,OALA+D,GAAU,EACV6iH,EAAeF,GACfnmH,EAAQA,EAAM0C,MAAMjD,GACpB+D,GAAU,EAEHC,EAAI,CACT6J,KApKa,UAqKby7E,QAASo9B,KAUb,SAASjmH,IACP,IAAIuD,EAAMN,IAGNiF,EAAOiqF,EAAMwzB,GACjB,GAAKz9G,EAAL,CAIA,GAHA2gF,KAGKsJ,EAAMyzB,GAAc,OAAOv+G,EAAM,wBAGtC,IAAIy/G,EAAM30B,EAAM0zB,GAEZkB,EAAMxjH,EAAI,CACZ6J,KA7LiB,cA8LjBlN,SAAU+B,EAAKiG,EAAK,GAAGqU,QAAQipG,EAAeQ,IAC9CnnH,MAAOioH,EACH7kH,EAAK6kH,EAAI,GAAGvqG,QAAQipG,EAAeQ,IACnCA,IAMN,OAFA7zB,EAAM2zB,GAECiB,GA0BT,OADAnG,IAjBA,WACE,IAKIoG,EALAC,EAAQ,GAMZ,IAJAL,EAASK,GAIDD,EAAOhnH,MACA,IAATgnH,IACFC,EAAMlqH,KAAKiqH,GACXJ,EAASK,IAIb,OAAOA,EAIF9mH,KAgBH+mH,OACA,SAAUjqH,EAAQC,EAASC,GAEjC,aAUA,IAA4by1F,EAAxbu0B,EAAEt+G,OAAOu+G,IAAI,iBAAiBP,EAAEh+G,OAAOu+G,IAAI,gBAAgB3mH,EAAEoI,OAAOu+G,IAAI,kBAAkBC,EAAEx+G,OAAOu+G,IAAI,qBAAqBE,EAAEz+G,OAAOu+G,IAAI,kBAAkBG,EAAE1+G,OAAOu+G,IAAI,kBAAkB1yB,EAAE7rF,OAAOu+G,IAAI,iBAAiB1N,EAAE7wG,OAAOu+G,IAAI,wBAAwBI,EAAE3+G,OAAOu+G,IAAI,qBAAqBT,EAAE99G,OAAOu+G,IAAI,kBAAkBxkH,EAAEiG,OAAOu+G,IAAI,uBAAuBK,EAAE5+G,OAAOu+G,IAAI,cAAcM,EAAE7+G,OAAOu+G,IAAI,cAAcO,EAAE9+G,OAAOu+G,IAAI,mBACza,SAAStD,EAAE3B,GAAG,GAAG,kBAAkBA,GAAG,OAAOA,EAAE,CAAC,IAAI3hH,EAAE2hH,EAAEyF,SAAS,OAAOpnH,GAAG,KAAK2mH,EAAE,OAAOhF,EAAEA,EAAE/0G,MAAQ,KAAK3M,EAAE,KAAK6mH,EAAE,KAAKD,EAAE,KAAKV,EAAE,KAAK/jH,EAAE,OAAOu/G,EAAE,QAAQ,OAAOA,EAAEA,GAAGA,EAAEyF,UAAY,KAAKlO,EAAE,KAAKhlB,EAAE,KAAK8yB,EAAE,KAAKE,EAAE,KAAKD,EAAE,KAAKF,EAAE,OAAOpF,EAAE,QAAQ,OAAO3hH,GAAG,KAAKqmH,EAAE,OAAOrmH,IADwLoyF,EAAE/pF,OAAOu+G,IAAI,0BACjMlqH,EAAQ2qH,gBAAgBnzB,EAAEx3F,EAAQ4qH,gBAAgBP,EAAErqH,EAAQkrB,QAAQ++F,EAAEjqH,EAAQ6qH,WAAWP,EAAEtqH,EAAQklH,SAAS3hH,EAAEvD,EAAQ8qH,KAAKN,EAAExqH,EAAQ+qH,KAAKR,EAAEvqH,EAAQgrH,OAAOrB,EAAE3pH,EAAQirH,SAASb,EAAEpqH,EAAQkrH,WAAWf,EAAEnqH,EAAQmrH,SAAS1B,EAChezpH,EAAQorH,aAAa1lH,EAAE1F,EAAQqrH,YAAY,WAAW,OAAM,GAAIrrH,EAAQsrH,iBAAiB,WAAW,OAAM,GAAItrH,EAAQurH,kBAAkB,SAAStG,GAAG,OAAO2B,EAAE3B,KAAKztB,GAAGx3F,EAAQwrH,kBAAkB,SAASvG,GAAG,OAAO2B,EAAE3B,KAAKoF,GAAGrqH,EAAQyrH,UAAU,SAASxG,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEyF,WAAWT,GAAGjqH,EAAQ0rH,aAAa,SAASzG,GAAG,OAAO2B,EAAE3B,KAAKqF,GAAGtqH,EAAQ2rH,WAAW,SAAS1G,GAAG,OAAO2B,EAAE3B,KAAK1hH,GAAGvD,EAAQ4rH,OAAO,SAAS3G,GAAG,OAAO2B,EAAE3B,KAAKuF,GAAGxqH,EAAQ6rH,OAAO,SAAS5G,GAAG,OAAO2B,EAAE3B,KAAKsF,GACtevqH,EAAQ8rH,SAAS,SAAS7G,GAAG,OAAO2B,EAAE3B,KAAK0E,GAAG3pH,EAAQ+rH,WAAW,SAAS9G,GAAG,OAAO2B,EAAE3B,KAAKmF,GAAGpqH,EAAQgsH,aAAa,SAAS/G,GAAG,OAAO2B,EAAE3B,KAAKkF,GAAGnqH,EAAQisH,WAAW,SAAShH,GAAG,OAAO2B,EAAE3B,KAAKwE,GAAGzpH,EAAQksH,eAAe,SAASjH,GAAG,OAAO2B,EAAE3B,KAAKv/G,GACjP1F,EAAQmlH,mBAAmB,SAASF,GAAG,MAAM,kBAAkBA,GAAG,oBAAoBA,GAAGA,IAAI1hH,GAAG0hH,IAAImF,GAAGnF,IAAIkF,GAAGlF,IAAIwE,GAAGxE,IAAIv/G,GAAGu/G,IAAIwF,GAAG,kBAAkBxF,GAAG,OAAOA,IAAIA,EAAEyF,WAAWF,GAAGvF,EAAEyF,WAAWH,GAAGtF,EAAEyF,WAAWL,GAAGpF,EAAEyF,WAAWlzB,GAAGytB,EAAEyF,WAAWJ,GAAGrF,EAAEyF,WAAWh1B,QAAG,IAASuvB,EAAEkH,cAAoBnsH,EAAQy3G,OAAOmP,GAK3SwF,KACA,SAAUrsH,EAAQC,EAASC,GAEjC,aAIEF,EAAOC,QAAUC,EAAoB,SAMjCosH,KACA,SAAUtsH,EAAQC,EAASC,GAEjC,aAKA,IAAIqsH,EAAc,GAsClB,SAAS/zB,EAAOrL,EAAQq/B,EAASC,GAC/B,IAAInqH,EAAGioH,EAAG3hH,EAAM8jH,EAAUjwB,EACtBtzF,EAAS,GAcb,IAZuB,kBAAZqjH,IAETC,EAAeD,EACfA,EAAUh0B,EAAOm0B,cAGQ,qBAAhBF,IACTA,GAAc,GAGhBhwB,EA9CF,SAAwB+vB,GACtB,IAAIlqH,EAAGsqH,EAAInwB,EAAQ8vB,EAAYC,GAC/B,GAAI/vB,EAAS,OAAOA,EAIpB,IAFAA,EAAQ8vB,EAAYC,GAAW,GAE1BlqH,EAAI,EAAGA,EAAI,IAAKA,IACnBsqH,EAAKz9G,OAAOyD,aAAatQ,GAErB,cAAcqQ,KAAKi6G,GAErBnwB,EAAM38F,KAAK8sH,GAEXnwB,EAAM38F,KAAK,KAAO,IAAMwC,EAAE9B,SAAS,IAAI+e,eAAeha,OAAO,IAIjE,IAAKjD,EAAI,EAAGA,EAAIkqH,EAAQjqH,OAAQD,IAC9Bm6F,EAAM+vB,EAAQrkH,WAAW7F,IAAMkqH,EAAQlqH,GAGzC,OAAOm6F,EAyBCowB,CAAeL,GAElBlqH,EAAI,EAAGioH,EAAIp9B,EAAO5qF,OAAQD,EAAIioH,EAAGjoH,IAGpC,GAFAsG,EAAOukF,EAAOhlF,WAAW7F,GAErBmqH,GAAwB,KAAT7jH,GAAyBtG,EAAI,EAAIioH,GAC9C,iBAAiB53G,KAAKw6E,EAAO5nF,MAAMjD,EAAI,EAAGA,EAAI,IAChD6G,GAAUgkF,EAAO5nF,MAAMjD,EAAGA,EAAI,GAC9BA,GAAK,OAKT,GAAIsG,EAAO,IACTO,GAAUszF,EAAM7zF,QAIlB,GAAIA,GAAQ,OAAUA,GAAQ,MAA9B,CACE,GAAIA,GAAQ,OAAUA,GAAQ,OAAUtG,EAAI,EAAIioH,IAC9CmC,EAAWv/B,EAAOhlF,WAAW7F,EAAI,KACjB,OAAUoqH,GAAY,MAAQ,CAC5CvjH,GAAUuvF,mBAAmBvL,EAAO7qF,GAAK6qF,EAAO7qF,EAAI,IACpDA,IACA,SAGJ6G,GAAU,iBAIZA,GAAUuvF,mBAAmBvL,EAAO7qF,IAGtC,OAAO6G,EAGTqvF,EAAOm0B,aAAiB,uBACxBn0B,EAAOs0B,eAAiB,YAGxB9sH,EAAOC,QAAUu4F"},"name":"static/chunks/12.34aefc1e67526bac4b8c.js","input":"(window[\"webpackJsonp_N_E\"] = window[\"webpackJsonp_N_E\"] || []).push([[12],{\n\n/***/ \"6dBs\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n/***/ }),\n\n/***/ \"BEtg\":\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n\n/***/ }),\n\n/***/ \"CC3I\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar parse = __webpack_require__(\"Lc7W\");\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n\n\n/***/ }),\n\n/***/ \"FEXr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"uriTransformer\", function() { return /* reexport */ uriTransformer; });\n__webpack_require__.d(__webpack_exports__, \"default\", function() { return /* reexport */ ReactMarkdown; });\n\n// NAMESPACE OBJECT: ./node_modules/micromark/lib/constructs.js\nvar constructs_namespaceObject = {};\n__webpack_require__.r(constructs_namespaceObject);\n__webpack_require__.d(constructs_namespaceObject, \"document\", function() { return constructs_document; });\n__webpack_require__.d(constructs_namespaceObject, \"contentInitial\", function() { return contentInitial; });\n__webpack_require__.d(constructs_namespaceObject, \"flowInitial\", function() { return flowInitial; });\n__webpack_require__.d(constructs_namespaceObject, \"flow\", function() { return constructs_flow; });\n__webpack_require__.d(constructs_namespaceObject, \"string\", function() { return constructs_string; });\n__webpack_require__.d(constructs_namespaceObject, \"text\", function() { return constructs_text; });\n__webpack_require__.d(constructs_namespaceObject, \"insideSpan\", function() { return insideSpan; });\n__webpack_require__.d(constructs_namespaceObject, \"attentionMarkers\", function() { return constructs_attentionMarkers; });\n__webpack_require__.d(constructs_namespaceObject, \"disable\", function() { return disable; });\n\n// NAMESPACE OBJECT: ./node_modules/property-information/lib/util/types.js\nvar types_namespaceObject = {};\n__webpack_require__.r(types_namespaceObject);\n__webpack_require__.d(types_namespaceObject, \"boolean\", function() { return types_boolean; });\n__webpack_require__.d(types_namespaceObject, \"booleanish\", function() { return booleanish; });\n__webpack_require__.d(types_namespaceObject, \"overloadedBoolean\", function() { return overloadedBoolean; });\n__webpack_require__.d(types_namespaceObject, \"number\", function() { return number; });\n__webpack_require__.d(types_namespaceObject, \"spaceSeparated\", function() { return spaceSeparated; });\n__webpack_require__.d(types_namespaceObject, \"commaSeparated\", function() { return commaSeparated; });\n__webpack_require__.d(types_namespaceObject, \"commaOrSpaceSeparated\", function() { return commaOrSpaceSeparated; });\n\n// CONCATENATED MODULE: ./node_modules/react-markdown/lib/uri-transformer.js\nconst protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nfunction uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tI\");\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/is-buffer/index.js\nvar is_buffer = __webpack_require__(\"BEtg\");\nvar is_buffer_default = /*#__PURE__*/__webpack_require__.n(is_buffer);\n\n// CONCATENATED MODULE: ./node_modules/unist-util-stringify-position/index.js\n/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nfunction stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return unist_util_stringify_position_position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return unist_util_stringify_position_position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return unist_util_stringify_position_point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction unist_util_stringify_position_point(point) {\n  return unist_util_stringify_position_index(point && point.line) + ':' + unist_util_stringify_position_index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction unist_util_stringify_position_position(pos) {\n  return unist_util_stringify_position_point(pos && pos.start) + '-' + unist_util_stringify_position_point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction unist_util_stringify_position_index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n\n// CONCATENATED MODULE: ./node_modules/vfile-message/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n\n\nclass vfile_message_VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nvfile_message_VFileMessage.prototype.file = ''\nvfile_message_VFileMessage.prototype.name = ''\nvfile_message_VFileMessage.prototype.reason = ''\nvfile_message_VFileMessage.prototype.message = ''\nvfile_message_VFileMessage.prototype.stack = ''\nvfile_message_VFileMessage.prototype.fatal = null\nvfile_message_VFileMessage.prototype.column = null\nvfile_message_VFileMessage.prototype.line = null\nvfile_message_VFileMessage.prototype.source = null\nvfile_message_VFileMessage.prototype.ruleId = null\nvfile_message_VFileMessage.prototype.position = null\n\n// CONCATENATED MODULE: ./node_modules/vfile/lib/minpath.browser.js\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst minpath_browser_path = {basename: minpath_browser_basename, dirname: minpath_browser_dirname, extname: minpath_browser_extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction minpath_browser_basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction minpath_browser_dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction minpath_browser_extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n\n// CONCATENATED MODULE: ./node_modules/vfile/lib/minproc.browser.js\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nconst proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n\n// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.shared.js\n/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nfunction isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n\n// CONCATENATED MODULE: ./node_modules/vfile/lib/minurl.browser.js\n/// <reference lib=\"dom\" />\n\n\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nfunction urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/vfile/lib/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\n\n\n\n\n\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nclass lib_VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || is_buffer_default()(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? minpath_browser_path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    lib_assertPath(this.basename, 'dirname')\n    this.path = minpath_browser_path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? minpath_browser_path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath_browser_path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? minpath_browser_path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    lib_assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath_browser_path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath_browser_path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath_browser_path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new vfile_message_VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath_browser_path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath_browser_path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction lib_assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/bail/index.js\n/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nfunction bail(error) {\n  if (error) {\n    throw error\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/extend/index.js\nvar extend = __webpack_require__(\"6dBs\");\nvar extend_default = /*#__PURE__*/__webpack_require__.n(extend);\n\n// CONCATENATED MODULE: ./node_modules/is-plain-obj/index.js\nfunction isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n\n// CONCATENATED MODULE: ./node_modules/trough/index.js\n/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nfunction trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nfunction wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/unified/lib/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\n\n\n\n\n\n\n\n// Expose a frozen processor.\nconst unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend_default()(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObject(entry[1]) && isPlainObject(value)) {\n          value = extend_default()(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObject(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new lib_VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || is_buffer_default()(value)\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-string/index.js\n/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nfunction mdast_util_to_string_toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && mdast_util_to_string_all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && mdast_util_to_string_all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction mdast_util_to_string_all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-chunked/index.js\n/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nfunction splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nfunction push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-combine-extensions/index.js\n/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\n\n\nconst micromark_util_combine_extensions_hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nfunction combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = micromark_util_combine_extensions_hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!micromark_util_combine_extensions_hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      micromark_util_combine_extensions_constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction micromark_util_combine_extensions_constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nfunction combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = micromark_util_combine_extensions_hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nconst unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-character/index.js\n/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nconst asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nconst asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nconst asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nconst asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nconst asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nconst asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nfunction markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nfunction markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nconst unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nconst unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-factory-space/index.js\n/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nfunction factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/content.js\n/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/** @type {InitialConstruct} */\nconst content_content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/document.js\n/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\n\n\n\n/** @type {InitialConstruct} */\n\nconst document_document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/blank-line.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/** @type {Construct} */\nconst blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-subtokenize/index.js\n/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nfunction subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/content.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nconst lib_content_content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/flow.js\n/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n\n/** @type {InitialConstruct} */\nconst flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(lib_content_content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/initialize/text.js\n/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nconst resolver = {\n  resolveAll: createResolver()\n}\nconst text_string = initializeFactory('string')\nconst text_text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-resolve-all/index.js\n/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nfunction resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/create-tokenizer.js\n/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\n\n\n\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nfunction createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/thematic-break.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\nconst thematic_break_thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/list.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\n\n\n\n\n/** @type {Construct} */\n\nconst list_list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematic_break_thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list_list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/block-quote.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/** @type {Construct} */\nconst block_quote_blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: block_quote_exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(block_quote_blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction block_quote_exit(effects) {\n  effects.exit('blockQuote')\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-factory-destination/index.js\n/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nfunction factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-factory-label/index.js\n/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nfunction factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-factory-title/index.js\n/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nfunction factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-factory-whitespace/index.js\n/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nfunction factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-normalize-identifier/index.js\n/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/definition.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n\n\n\n\n\n/** @type {Construct} */\nconst definition_definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-indented.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/** @type {Construct} */\nconst codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/heading-atx.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n\n/** @type {Construct} */\nconst headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/setext-underline.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\nconst setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-html-tag-name/index.js\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nconst htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nconst htmlRawNames = ['pre', 'script', 'style', 'textarea']\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/html-flow.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\n\nconst htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-fenced.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\nconst codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/character-entities/index.js\n/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nconst characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n\n// CONCATENATED MODULE: ./node_modules/decode-named-character-reference/index.js\n\n\nconst decode_named_character_reference_own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nfunction decodeNamedCharacterReference(value) {\n  return decode_named_character_reference_own.call(characterEntities, value) ? characterEntities[value] : false\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/character-reference.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\nconst characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/character-escape.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/** @type {Construct} */\nconst characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/line-ending.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n\n/** @type {Construct} */\nconst lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-end.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n\n\n\n\n\n\n/** @type {Construct} */\nconst labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-start-image.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n/** @type {Construct} */\n\nconst labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-classify-character/index.js\n/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/attention.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n\n\n\n/** @type {Construct} */\nconst attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/autolink.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/** @type {Construct} */\nconst autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/html-text.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n\n\n/** @type {Construct} */\nconst htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/label-start-link.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n/** @type {Construct} */\n\nconst labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/hard-break-escape.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/** @type {Construct} */\nconst hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-core-commonmark/lib/code-text.js\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\n\n\n/** @type {Construct} */\nconst code_text_codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: code_text_previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction code_text_previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/constructs.js\n/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\n\n/** @type {Extension['document']} */\n\nconst constructs_document = {\n  [42]: list_list,\n  [43]: list_list,\n  [45]: list_list,\n  [48]: list_list,\n  [49]: list_list,\n  [50]: list_list,\n  [51]: list_list,\n  [52]: list_list,\n  [53]: list_list,\n  [54]: list_list,\n  [55]: list_list,\n  [56]: list_list,\n  [57]: list_list,\n  [62]: block_quote_blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nconst contentInitial = {\n  [91]: definition_definition\n}\n/** @type {Extension['flowInitial']} */\n\nconst flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nconst constructs_flow = {\n  [35]: headingAtx,\n  [42]: thematic_break_thematicBreak,\n  [45]: [setextUnderline, thematic_break_thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematic_break_thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nconst constructs_string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nconst constructs_text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: code_text_codeText\n}\n/** @type {Extension['insideSpan']} */\n\nconst insideSpan = {\n  null: [attention, resolver]\n}\n/** @type {Extension['attentionMarkers']} */\n\nconst constructs_attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nconst disable = {\n  null: []\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/parse.js\n/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\n\n\n\n\n\n\n\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nfunction parse_parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [constructs_namespaceObject].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content_content),\n    document: create(document_document),\n    flow: create(flow),\n    string: create(text_string),\n    text: create(text_text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/preprocess.js\n/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nfunction preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark/lib/postprocess.js\n/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-decode-numeric-character-reference/index.js\n/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nfunction decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-decode-string/index.js\n\n\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-from-markdown/lib/index.js\n/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\n\n\n\n\n\n\n\n\n\nconst lib_own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nconst fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse_parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (lib_own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return mdast_util_to_string_toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (lib_own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = lib_own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/remark-parse/lib/index.js\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\n\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nfunction remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n\n// CONCATENATED MODULE: ./node_modules/remark-parse/index.js\n\n\n/* harmony default export */ var remark_parse = (remarkParse);\n\n// CONCATENATED MODULE: ./node_modules/unist-builder/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nvar u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n\n// CONCATENATED MODULE: ./node_modules/unist-util-is/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nconst unist_util_is_is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nconst convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return unist_util_is_ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction unist_util_is_ok() {\n  return true\n}\n\n// CONCATENATED MODULE: ./node_modules/unist-util-visit-parents/color.browser.js\n/**\n * @param {string} d\n * @returns {string}\n */\nfunction color(d) {\n  return d\n}\n\n// CONCATENATED MODULE: ./node_modules/unist-util-visit-parents/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\n\n\n\n/**\n * Continue traversing as normal\n */\nconst CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nconst SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nconst EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nconst visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n// CONCATENATED MODULE: ./node_modules/unist-util-visit/index.js\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\n\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nconst unist_util_visit_visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\n\n\n// CONCATENATED MODULE: ./node_modules/unist-util-position/index.js\n/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nconst pointStart = unist_util_position_point('start')\nconst pointEnd = unist_util_position_point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nfunction unist_util_position_position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction unist_util_position_point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/unist-util-generated/index.js\n/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nfunction generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-definitions/index.js\n/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\n\n\nconst mdast_util_definitions_own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nfunction mdast_util_definitions_definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  unist_util_visit_visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !mdast_util_definitions_own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && mdast_util_definitions_own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/traverse.js\n/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\n\n\nconst traverse_own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      traverse_own.call(data, 'hName') ||\n      traverse_own.call(data, 'hProperties') ||\n      traverse_own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', traverse_all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction traverse_one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (traverse_own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: traverse_all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nfunction traverse_all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = traverse_one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-encode/index.js\nconst characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nfunction encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/micromark-util-sanitize-uri/index.js\n\n\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nfunction sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/wrap.js\n/**\n * @typedef {import('./index.js').Content} Content\n */\n\n\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nfunction wrap_wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/footer.js\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\n\n\n\n\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nfunction footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = traverse_all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap_wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap_wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js\n/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nfunction blockquote(h, node) {\n  return h(node, 'blockquote', wrap_wrap(traverse_all(h, node), true))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/break.js\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nfunction break_hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/code.js\n/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nfunction code_code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/delete.js\n/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nfunction strikethrough(h, node) {\n  return h(node, 'del', traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js\n/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nfunction emphasis_emphasis(h, node) {\n  return h(node, 'em', traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js\n/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/footnote.js\n/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nfunction footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/heading.js\n/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nfunction heading_heading(h, node) {\n  return h(node, 'h' + node.depth, traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/html.js\n/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nfunction html_html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n\n// EXTERNAL MODULE: ./node_modules/mdurl/encode.js\nvar mdurl_encode = __webpack_require__(\"xGQ6\");\nvar encode_default = /*#__PURE__*/__webpack_require__.n(mdurl_encode);\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/revert.js\n/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\n\n\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nfunction revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = traverse_all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js\n/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nfunction imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: encode_default()(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/image.js\n/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nfunction image_image(h, node) {\n  /** @type {Properties} */\n  const props = {src: encode_default()(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js\n/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nfunction inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js\n/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nfunction linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: encode_default()(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/link.js\n/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nfunction link_link(h, node) {\n  /** @type {Properties} */\n  const props = {href: encode_default()(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/list-item.js\n/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nfunction list_item_listItem(h, node, parent) {\n  const result = traverse_all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/list.js\n/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nfunction handlers_list_list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = traverse_all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap_wrap(items, true))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js\n/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nfunction paragraph_paragraph(h, node) {\n  return h(node, 'p', traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/root.js\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nfunction root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap_wrap(traverse_all(h, node))))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/strong.js\n/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nfunction strong_strong(h, node) {\n  return h(node, 'strong', traverse_all(h, node))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/table.js\n/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\n\n\n\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nfunction table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? traverse_all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap_wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap_wrap(\n      [h(result[0].position, 'thead', wrap_wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap_wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n\n// CONCATENATED MODULE: ./node_modules/trim-lines/index.js\nconst tab = 9 /* `\\t` */\nconst trim_lines_space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nfunction trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === trim_lines_space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === trim_lines_space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/text.js\n/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\n\n\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nfunction handlers_text_text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js\n/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nfunction handlers_thematic_break_thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/handlers/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst handlers = {\n  blockquote: blockquote,\n  break: break_hardBreak,\n  code: code_code,\n  delete: strikethrough,\n  emphasis: emphasis_emphasis,\n  footnoteReference: footnoteReference,\n  footnote: footnote,\n  heading: heading_heading,\n  html: html_html,\n  imageReference: imageReference,\n  image: image_image,\n  inlineCode: inlineCode,\n  linkReference: linkReference,\n  link: link_link,\n  listItem: list_item_listItem,\n  list: handlers_list_list,\n  paragraph: paragraph_paragraph,\n  root: root,\n  strong: strong_strong,\n  table: table,\n  text: handlers_text_text,\n  thematicBreak: handlers_thematic_break_thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n\n// CONCATENATED MODULE: ./node_modules/mdast-util-to-hast/lib/index.js\n/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\n\n\n\n\n\n\n\n\n\nconst mdast_util_to_hast_lib_own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction lib_factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = mdast_util_definitions_definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  unist_util_visit_visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!mdast_util_to_hast_lib_own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nfunction toHast(tree, options) {\n  const h = lib_factory(tree, options)\n  const node = traverse_one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/remark-rehype/lib/index.js\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\n\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\n/* harmony default export */ var lib = (remarkRehype);\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(\"17x9\");\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/schema.js\n/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nclass Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/merge.js\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\n\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nfunction merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/normalize.js\n/**\n * @param {string} value\n * @returns {string}\n */\nfunction normalize_normalize(value) {\n  return value.toLowerCase()\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/info.js\nclass Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/types.js\nlet powers = 0\n\nconst types_boolean = increment()\nconst booleanish = increment()\nconst overloadedBoolean = increment()\nconst number = increment()\nconst spaceSeparated = increment()\nconst commaSeparated = increment()\nconst commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/defined-info.js\n\n\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types_namespaceObject)\n\nclass defined_info_DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types_namespaceObject[check]) === types_namespaceObject[check])\n      }\n    }\n  }\n}\n\ndefined_info_DefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/create.js\n/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\n\n\n\n\nconst create_own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nfunction create_create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (create_own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new defined_info_DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize_normalize(prop)] = prop\n      normal[normalize_normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/xlink.js\n\n\nconst xlink = create_create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/xml.js\n\n\nconst xml = create_create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-sensitive-transform.js\n/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/util/case-insensitive-transform.js\n\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/xmlns.js\n\n\n\nconst xmlns = create_create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/aria.js\n\n\n\nconst aria = create_create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/html.js\n\n\n\n\nconst lib_html_html = create_create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: types_boolean,\n    allowPaymentRequest: types_boolean,\n    allowUserMedia: types_boolean,\n    alt: null,\n    as: null,\n    async: types_boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: types_boolean,\n    autoPlay: types_boolean,\n    capture: types_boolean,\n    charSet: null,\n    checked: types_boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: types_boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: types_boolean,\n    defer: types_boolean,\n    dir: null,\n    dirName: null,\n    disabled: types_boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: types_boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: types_boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: types_boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: types_boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: types_boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: types_boolean,\n    muted: types_boolean,\n    name: null,\n    nonce: null,\n    noModule: types_boolean,\n    noValidate: types_boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: types_boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: types_boolean,\n    poster: null,\n    preload: null,\n    readOnly: types_boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: types_boolean,\n    reversed: types_boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: types_boolean,\n    seamless: types_boolean,\n    selected: types_boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: types_boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: types_boolean, // Lists. Use CSS to reduce space between items instead\n    declare: types_boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: types_boolean, // `<frame>`\n    noHref: types_boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: types_boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: types_boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: types_boolean,\n    disableRemotePlayback: types_boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/svg.js\n\n\n\n\nconst svg = create_create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: types_boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n\n// CONCATENATED MODULE: ./node_modules/property-information/index.js\n/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst property_information_html = merge([xml, xlink, xmlns, aria, lib_html_html], 'html')\nconst property_information_svg = merge([xml, xlink, xmlns, aria, svg], 'svg')\n\n// CONCATENATED MODULE: ./node_modules/react-markdown/lib/rehype-filter.js\n\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nfunction rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      unist_util_visit_visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n\n// EXTERNAL MODULE: ./node_modules/react-markdown/node_modules/react-is/index.js\nvar react_is = __webpack_require__(\"rVUt\");\nvar react_is_default = /*#__PURE__*/__webpack_require__.n(react_is);\n\n// CONCATENATED MODULE: ./node_modules/hast-util-whitespace/index.js\n/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nfunction whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/find.js\n/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\n\n\n\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nfunction find(schema, value) {\n  const normal = normalize_normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = defined_info_DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n\n// CONCATENATED MODULE: ./node_modules/property-information/lib/hast-to-react.js\nconst hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n\n// CONCATENATED MODULE: ./node_modules/space-separated-tokens/index.js\n/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nfunction space_separated_tokens_parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nfunction space_separated_tokens_stringify(values) {\n  return values.join(' ').trim()\n}\n\n// CONCATENATED MODULE: ./node_modules/comma-separated-tokens/index.js\n/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nfunction comma_separated_tokens_parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nfunction comma_separated_tokens_stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n\n// EXTERNAL MODULE: ./node_modules/style-to-object/index.js\nvar style_to_object = __webpack_require__(\"CC3I\");\nvar style_to_object_default = /*#__PURE__*/__webpack_require__.n(style_to_object);\n\n// CONCATENATED MODULE: ./node_modules/react-markdown/lib/ast-to-react.js\n/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\n\n\n\n\n\n\n\n\nconst ast_to_react_own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nfunction childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = property_information_svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (ast_to_react_own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && ast_to_react_own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === react_default.a.Fragment\n\n  if (!react_is_default.a.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? react_default.a.createElement(component, properties, children)\n    : react_default.a.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? comma_separated_tokens_stringify(result) : space_separated_tokens_stringify(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      ast_to_react_own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style_to_object_default()(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n\n// CONCATENATED MODULE: ./node_modules/react-markdown/lib/react-markdown.js\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\n\n\n\n\n\n\n\n\n\n\n\nconst react_markdown_own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nfunction ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (react_markdown_own.call(deprecated, key) && react_markdown_own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remark_parse)\n    .use(options.remarkPlugins || [])\n    .use(lib, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new lib_VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = react_default.a.createElement(\n    react_default.a.Fragment,\n    {},\n    childrenToReact({options, schema: property_information_html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = react_default.a.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: prop_types_default.a.string,\n  // Layout options:\n  className: prop_types_default.a.string,\n  // Filter options:\n  allowElement: prop_types_default.a.func,\n  allowedElements: prop_types_default.a.arrayOf(prop_types_default.a.string),\n  disallowedElements: prop_types_default.a.arrayOf(prop_types_default.a.string),\n  unwrapDisallowed: prop_types_default.a.bool,\n  // Plugin options:\n  remarkPlugins: prop_types_default.a.arrayOf(\n    prop_types_default.a.oneOfType([\n      prop_types_default.a.object,\n      prop_types_default.a.func,\n      prop_types_default.a.arrayOf(\n        prop_types_default.a.oneOfType([\n          prop_types_default.a.bool,\n          prop_types_default.a.string,\n          prop_types_default.a.object,\n          prop_types_default.a.func,\n          prop_types_default.a.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            prop_types_default.a.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: prop_types_default.a.arrayOf(\n    prop_types_default.a.oneOfType([\n      prop_types_default.a.object,\n      prop_types_default.a.func,\n      prop_types_default.a.arrayOf(\n        prop_types_default.a.oneOfType([\n          prop_types_default.a.bool,\n          prop_types_default.a.string,\n          prop_types_default.a.object,\n          prop_types_default.a.func,\n          prop_types_default.a.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            prop_types_default.a.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: prop_types_default.a.bool,\n  rawSourcePos: prop_types_default.a.bool,\n  skipHtml: prop_types_default.a.bool,\n  includeElementIndex: prop_types_default.a.bool,\n  transformLinkUri: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.bool]),\n  linkTarget: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.string]),\n  transformImageUri: prop_types_default.a.func,\n  components: prop_types_default.a.object\n}\n\n// CONCATENATED MODULE: ./node_modules/react-markdown/index.js\n/**\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\n * @typedef {import('./lib/ast-to-react.js').Components} Components\n */\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"Lc7W\":\n/***/ (function(module, exports) {\n\n// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n\n\n/***/ }),\n\n/***/ \"YT/e\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n\n\n/***/ }),\n\n/***/ \"rVUt\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(\"YT/e\");\n} else {}\n\n\n/***/ }),\n\n/***/ \"xGQ6\":\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/extend/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/is-buffer/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/style-to-object/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/lib/uri-transformer.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-stringify-position/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile-message/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile/lib/minpath.browser.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile/lib/minproc.browser.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile/lib/minurl.shared.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile/lib/minurl.browser.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/vfile/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/bail/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/is-plain-obj/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/trough/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unified/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-string/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-chunked/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-combine-extensions/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-character/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-factory-space/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/initialize/content.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/initialize/document.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/blank-line.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-subtokenize/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/content.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/initialize/flow.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/initialize/text.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-resolve-all/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/create-tokenizer.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/thematic-break.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/list.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/block-quote.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-factory-destination/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-factory-label/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-factory-title/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-factory-whitespace/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-normalize-identifier/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/definition.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/code-indented.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/heading-atx.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/setext-underline.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-html-tag-name/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/html-flow.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/code-fenced.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/character-entities/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/decode-named-character-reference/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/character-reference.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/character-escape.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/line-ending.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/label-end.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/label-start-image.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-classify-character/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/attention.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/autolink.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/html-text.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/label-start-link.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/hard-break-escape.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-core-commonmark/lib/code-text.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/constructs.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/parse.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/preprocess.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark/lib/postprocess.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-decode-numeric-character-reference/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-decode-string/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-from-markdown/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/remark-parse/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/remark-parse/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-builder/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-is/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-visit-parents/color.browser.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-visit-parents/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-visit/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-position/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/unist-util-generated/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-definitions/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/traverse.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-encode/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/micromark-util-sanitize-uri/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/wrap.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/footer.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/break.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/code.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/delete.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/heading.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/html.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/revert.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/image.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/link.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/list.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/root.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/strong.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/table.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/trim-lines/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/text.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/handlers/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdast-util-to-hast/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/remark-rehype/lib/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/schema.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/merge.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/normalize.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/info.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/types.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/defined-info.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/create.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/xlink.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/xml.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/case-sensitive-transform.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/util/case-insensitive-transform.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/xmlns.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/aria.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/html.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/svg.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/lib/rehype-filter.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/hast-util-whitespace/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/find.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/property-information/lib/hast-to-react.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/space-separated-tokens/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/comma-separated-tokens/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/lib/ast-to-react.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/lib/react-markdown.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/inline-style-parser/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/react-markdown/node_modules/react-is/index.js","/Users/dmytro.borodin/Documents/NextJS/nextjs-blog-app/node_modules/mdurl/encode.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,2BAA2B,kDAAkD;;AAE7E;AACA,MAAM;AACN,2BAA2B,6BAA6B;AACxD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACVA,YAAY,mBAAO,CAAC,MAAqB;;AAEzC;AACA;AACA;AACA;AACA,eAAe;AACf,kCAAkC;AAClC;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,SAAS;AACrD;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,4BAA4B;AAC5B;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC5CA;AACA,aAAa,sBAAsB;AACnC,aAAa,qBAAqB;AAClC,aAAa,yBAAyB;AACtC,aAAa,UAAU,6CAA6C;AACpE;;AAEA;AACA;AACA;AACA;AACA,WAAW,kCAAkC;AAC7C,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,sCAAQ;AACnB;;AAEA;AACA;AACA,WAAW,sCAAQ;AACnB;;AAEA;AACA;AACA,WAAW,mCAAK;AAChB;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA,SAAS,mCAAK;AACd,SAAS,mCAAK,8BAA8B,mCAAK;AACjD;;AAEA;AACA,WAAW,mBAAmB;AAC9B,aAAa;AACb;AACA,SAAS,sCAAQ;AACjB,SAAS,mCAAK,2BAA2B,mCAAK;AAC9C;;AAEA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA,SAAS,mCAAK;AACd;AACA;;;AC7DA;AACA,aAAa,qBAAqB;AAClC,aAAa,yBAAyB;AACtC,aAAa,sBAAsB;AACnC,aAAa,UAAU,6CAA6C;AACpE;;AAE+D;;AAExD,MAAM,0BAAY;AACzB;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,6BAA6B;AAC1C,aAAa,OAAO;AACpB;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA,eAAe,SAAS;AACxB;AACA;AACA,cAAc,yBAAyB;AACvC;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;AACZ,0BAAY;;;ACzJZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,MAAM,oBAAI,IAAI,QAAQ,mCAAS,kCAAS;;AAE/C;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA,SAAS,wBAAQ;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA,SAAS,uBAAO;AAChB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA,SAAS,uBAAO;AAChB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACzYA;AACA;AACA;AACO,cAAc;;AAErB;AACA;AACA;;;ACPA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B,cAAc,aAAa;AAC3B;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;;AAEwC;;AAExC;;AAEA;AACA,WAAW,WAAW;AACtB;AACO;AACP;AACA;AACA,GAAG,WAAW,KAAK;AACnB,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,IAAI;AACf;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEwC;;;ACrExC;AACA,aAAa,qBAAqB;AAClC,aAAa,yBAAyB;AACtC,aAAa,sBAAsB;AACnC,aAAa,2BAA2B,6CAA6C;AACrF,aAAa,iCAAiC;AAC9C,aAAa,2BAA2B;AACxC,aAAa,4BAA4B;AACzC;AACA,aAAa,6FAA6F;AAC1G;AACA;AACA;AACA;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,iBAAiB;AAC/B,cAAc,wBAAwB;AACtC,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,cAAc,uBAAuB,oBAAoB;AACzD;AACA;AACA;AACA,aAAa,wBAAwB;AACrC,aAAa,kEAAkE;AAC/E;;AAE8B;AACY;AACT;AACA;AACW;;AAE5C;AACA,KAAK,0BAA0B;AAC/B;AACA;;AAEO,MAAM,SAAK;AAClB;AACA;AACA;AACA,6DAA6D,eAAe;AAC5E,gDAAgD,cAAc;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA,KAAK,uCAAuC,mBAAM;AAClD;AACA,iBAAiB;AACjB,KAAK,UAAU,KAAK;AACpB,iBAAiB;AACjB,KAAK;AACL;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA,eAAe,IAAI;;AAEnB;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA;AACA,QAAQ,KAAK;AACb,aAAa,SAAS;AACtB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,oBAAI;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAU;AACd,gBAAgB,oBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,oBAAI;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA,2CAA2C,oBAAI;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,cAAU;;AAEd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,oBAAI;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAI;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAI;AACpB;;AAEA;AACA;AACA;AACA,aAAa,eAAe;AAC5B;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,aAAa,6BAA6B;AAC1C;AACA,aAAa,OAAO;AACpB;AACA,eAAe;AACf;AACA;AACA;AACA,wBAAwB,0BAAY;;AAEpC;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,aAAa,6BAA6B;AAC1C;AACA,aAAa,OAAO;AACpB;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA,aAAa,6BAA6B;AAC1C;AACA,aAAa,OAAO;AACpB;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA,4BAA4B,oBAAI;AAChC;AACA,4DAA4D,oBAAI;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,aAAa;AACb;AACA,SAAS,cAAU;AACnB;AACA;AACA;AACA;;;ACnaA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;;;;;;;ACXe;AACf;AACA;AACA;;AAEA;AACA;AACA;;;ACPA;AACA,aAAa,8DAA8D;AAC3E,aAAa,8BAA8B;AAC3C;AACA,aAAa,+BAA+B;AAC5C;AACA,aAAa,6BAA6B;AAC1C;AACA,cAAc,oBAAoB;AAClC;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACO;AACP,aAAa,kBAAkB;AAC/B;AACA,aAAa,SAAS;AACtB,oBAAoB;;AAEpB;;AAEA,aAAa,IAAI;AACjB;AACA;AACA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,qBAAqB;AACpC,eAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,WAAW,WAAW;AACtB,WAAW,SAAS;AACpB;AACO;AACP,aAAa,QAAQ;AACrB;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ,aAAa,WAAW;AACxB,eAAe;AACf;AACA;AACA;AACA,eAAe,IAAI;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,mCAAmC,MAAM;;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,IAAI;AACjB;AACA;AACA;AACA;AACA;;;AC/JA;AACA,aAAa,qBAAqB;AAClC,aAAa,gCAAgC;AAC7C,aAAa,2BAA2B;AACxC,aAAa,uBAAuB;AACpC,aAAa,oBAAoB;AACjC,aAAa,oBAAoB;AACjC,aAAa,uBAAuB;AACpC,aAAa,2BAA2B;AACxC,aAAa,yBAAyB;AACtC,aAAa,oBAAoB;AACjC,aAAa,sBAAsB;AACnC,aAAa,yBAAyB;AACtC,aAAa,6BAA6B;AAC1C;AACA;AACA,cAAc,KAAK;AACnB,cAAc,MAAM;AACpB;;AAEyB;AACO;AACL;AACU;AACR;AACF;;AAE3B;AACO;;AAEP,cAAc;;AAEd;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,MAAM;AAC7B,aAAa,uBAAuB;AACpC;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,gBAAM,SAAS;;AAEpC;AACA;;AAEA;AACA,aAAa,+BAA+B;AAC5C,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC,aAAa,WAAW;AACxB,eAAe;AACf;AACA;AACA,eAAe,kCAAkC;AACjD;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,iEAAiE;AACjE;;AAEA;;AAEA;AACA,eAAe,kCAAkC;AACjD,iBAAiB;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA,+CAA+C;AAC/C;AACA;;AAEA;AACA,eAAe,6BAA6B;AAC5C,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB,eAAe,WAAW;AAC1B,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB,yCAAyC;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,aAAU,cAAc,aAAU;AAC9C,kBAAkB,gBAAM;AACxB;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,uBAAuB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB,aAAa,4BAA4B;AACzC,aAAa,YAAY;AACzB,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,4BAA4B;AAC3C,eAAe,uBAAuB;AACtC,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B,iBAAiB,KAAK;AACtB,iBAAiB,MAAM;AACvB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,qBAAqB;AAClC;AACA,eAAe,eAAe;AAC9B;AACA,eAAe,kBAAkB;AACjC;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,eAAe,WAAW;AAC1B,eAAe,KAAK;AACpB,iBAAiB;AACjB;AACA;AACA,MAAM,IAAI;AACV;AACA;AACA;AACA;;AAEA;AACA,aAAa,gBAAgB;AAC7B,aAAa,gBAAgB;AAC7B,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,eAAe,6BAA6B;AAC5C,eAAe,uCAAuC;AACtD,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,qBAAqB,QAAQ;AAC7B;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,iBAAiB,qBAAqB;AACtC,iBAAiB,gBAAgB;AACjC,mBAAmB;AACnB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,yBAAyB;AACtC;AACA,eAAe,kBAAkB;AACjC;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,eAAe,qBAAqB;AACpC,iBAAiB;AACjB;AACA;AACA;AACA,MAAM,IAAI;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,aAAa;AACb;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO,aAAU;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA,8CAA8C,SAAK;AACnD;;AAEA;AACA,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA,sCAAsC,mBAAQ;AAC9C;;;ACtlBA;AACA;AACA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACO,SAAS,6BAAQ;AACxB,OAAO,uBAAuB;AAC9B;AACA;;AAEA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wBAAG;AAClC,gCAAgC,wBAAG;AACnC;AACA;AACA;;AAEA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,aAAa;AACb;AACA,SAAS,wBAAG;AACZ,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,WAAW,IAAI;AACf,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;AACA;AACA,aAAa,UAAU;;AAEvB;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,WAAW,IAAI;AACf,WAAW,IAAI;AACf,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;;AAEA;AACA;;;ACpEA;AACA,aAAa,mDAAmD;AAChE,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,6CAA6C;AAC1D;;AAE6C;;AAE7C,MAAM,gDAAc,KAAK;;AAEzB;AACA;AACA;AACA,WAAW,YAAY;AACvB,aAAa,oBAAoB;AACjC;AACO;AACP,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,UAAU;AACrB,aAAa;AACb;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,kBAAkB,gDAAc;AAChC,yCAAyC;AACzC;AACA,eAAe,OAAO;AACtB;;AAEA;AACA,WAAW,gDAAc;AACzB;AACA,MAAM,4CAAU;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa;AACb;AACA,SAAS,4CAAU;AACnB;AACA,aAAa,UAAU;AACvB;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,EAAE,MAAM;AACR;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,aAAa,cAAc;AAC3B;AACO;AACP,aAAa,cAAc;AAC3B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,kBAAkB,gDAAc;AAChC,yCAAyC;AACzC;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,cAAc;;;ACPd;AACA,aAAa,oCAAoC;AACjD;AAC0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;;AAEO,gDAAgD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,sCAAsC,uBAAuB;AACpE;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,eAAe,eAAe;AAC9B;;AAEA;AACA;AACA;AACA;;;AClMA;AACA,aAAa,uCAAuC;AACpD,aAAa,qCAAqC;AAClD;AACsD;AACtD;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACtCA;AACA,aAAa,gDAAgD;AAC7D,aAAa,2CAA2C;AACxD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACoD;AACO;;AAE3D,WAAW,iBAAiB;AACrB,MAAM,eAAO;AACpB;AACA;AACA,WAAW,YAAY;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;AC9EA;AACA,aAAa,gDAAgD;AAC7D,aAAa,2CAA2C;AACxD,aAAa,yCAAyC;AACtD,aAAa,+CAA+C;AAC5D,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;;AAEA;AACA,aAAa,wBAAwB;AACrC,aAAa,wBAAwB;AACrC;AACoD;AACO;AACd;AAC7C,WAAW,iBAAiB;;AAErB,MAAM,iBAAQ;AACrB;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,WAAW,YAAY;;AAEvB;AACA;AACA,aAAa,YAAY;;AAEzB;AACA;AACA,aAAa,0BAA0B;;AAEvC;AACA,aAAa,gBAAgB;;AAE7B;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,iBAAiB,gBAAgB;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA,OAAO;;AAEP,MAAM,MAAM;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,QAAQ;AACrB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,iBAAiB,kBAAkB;;AAEnC;AACA,iBAAiB,gBAAgB;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oDAAoD;AACpD;AACA,OAAO;;AAEP,MAAM,MAAM;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;;;ACpXA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACoD;AACO;;AAE3D,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA,SAAS,YAAY;AACrB,aAAa,MAAM;;AAEnB;AACA,4BAA4B,kBAAkB;AAC9C;AACA;;;ACtBA;AACA,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AAC6C;;AAE7C;AACA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP,aAAa,uBAAuB;AACpC;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,iBAAiB;;AAE9B;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,kBAAkB;;AAE/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA,QAAQ,MAAM;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,aAAa,SAAS;;AAEtB;AACA;AACA;AACA;AACA,aAAa,mBAAmB;;AAEhC;AACA,aAAa,uBAAuB;;AAEpC;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,gBAAgB;;AAE7B;AACA;AACA,aAAa,gBAAgB;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;ACtPA;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACoD;AACO;AACL;;AAEtD;AACA;AACA,UAAU;AACV;AACO,MAAM,mBAAO;AACpB;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA,EAAE,WAAW;AACb;AACA;AACA,WAAW,UAAU;;AAErB;AACA,aAAa,MAAM;AACnB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AC3HA;AACA,aAAa,gDAAgD;AAC7D,aAAa,2CAA2C;AACxD,aAAa,qCAAqC;AAClD;AAC4D;AACR;AACO;;AAE3D,WAAW,iBAAiB;AACrB;AACP;AACA;AACA,WAAW,YAAY;;AAEvB;AACA;AACA;AACA;AACA,IAAI,SAAS;AACb;AACA;AACA;AACA;AACA,MAAM,YAAY;AAClB;AACA;AACA;AACA;AACA,0BAA0B,mBAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChEA;AACA,aAAa,wCAAwC;AACrD,aAAa,2CAA2C;AACxD,aAAa,yCAAyC;AACtD,aAAa,gDAAgD;AAC7D,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACO;AACP;AACA;AACO,MAAM,WAAM;AACZ,MAAM,SAAI;AACjB;AACA,WAAW,gBAAgB;AAC3B,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,YAAY;;AAEzB;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;;AAEA;AACA;AACA,aAAa,SAAS;;AAEtB;AACA;AACA,eAAe,iBAAiB;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;;AAEnC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+BAA+B;AAC/B;AACA,mCAAmC;;AAEnC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;ACzNA;AACA,aAAa,+CAA+C;AAC5D,aAAa,qCAAqC;AAClD,aAAa,wCAAwC;AACrD;;AAEA;AACA;AACA;AACA,YAAY,sBAAsB,GAAG;AACrC,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,aAAa;AACb;AACO;AACP,aAAa,WAAW;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC7BA;AACA,aAAa,oCAAoC;AACjD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,uCAAuC;AACpD,aAAa,qCAAqC;AAClD,aAAa,yCAAyC;AACtD,aAAa,gDAAgD;AAC7D,aAAa,+CAA+C;AAC5D,aAAa,+CAA+C;AAC5D,aAAa,4CAA4C;AACzD;;AAEA;AACA;AACA,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,KAAK;AAChB,aAAa;AACb;AAC2D;AACR;AACE;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,iBAAiB;AAC5B,WAAW,qCAAqC;AAChD,aAAa;AACb;AACO;AACP,aAAa,MAAM;AACnB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;;AAEpC;AACA,aAAa,YAAY;;AAEzB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,kBAAkB;;AAE/B;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,yBAAyB;;AAEtC;AACA,aAAa,IAAI;AACjB;;AAEA;AACA;AACA;;AAEA;;AAEA,qBAAqB,UAAU;AAC/B;AACA,GAAG;AACH;AACA;;AAEA,aAAa,kCAAkC;;AAE/C;AACA;AACA;AACA,aAAa,+BAA+B;;AAE5C;AACA;AACA;AACA,aAAa,uBAAuB;;AAEpC;AACA,2BAA2B;AAC3B;AACA,aAAa,8BAA8B;;AAE3C;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,KAAK;AAClB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAmB;;AAEhC;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA,aAAa,iBAAiB;;AAE9B;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gBAAgB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,wBAAwB;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sCAAsC;AACrD,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,iBAAiB;AACjB;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA,iBAAiB,OAAO;;AAExB;AACA,iBAAiB,UAAU;;AAE3B;AACA,iBAAiB,KAAK;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC,mBAAmB;AACnB;;AAEA;AACA;AACA,mBAAmB,MAAM;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B,mBAAmB;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B,mBAAmB;AACnB;;AAEA;AACA;AACA,mBAAmB,MAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM;;AAEvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,2BAA2B;AACtC,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;;AAErB;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEA;AACA;AACA,aAAa,SAAS;;AAEtB;AACA,aAAa,kBAAkB;;AAE/B;;AAEA;AACA;AACA,eAAe,OAAO;;AAEtB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;ACllBA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACoD;AACsB;;AAE1E,WAAW,UAAU;AACd,MAAM,4BAAa;AAC1B;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,kBAAkB;;AAE/B;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB,aAAa,YAAY;AACzB;;AAEA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AC5DA;AACA,aAAa,yCAAyC;AACtD,aAAa,+CAA+C;AAC5D,aAAa,sCAAsC;AACnD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;;AAEA;AACA,aAAa,2BAA2B,0CAA0C;AAClF,aAAa,mBAAmB,oCAAoC;AACpE;AACoD;AACc;AACzB;AACQ;AACjD,WAAW,UAAU;;AAEd,MAAM,SAAI;AACjB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,UAAU;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,0BAA0B,4BAAa;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,SAAS;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,kDAAkD,aAAa;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA,sBAAsB,SAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV,UAAU;AACV;;AAEA;AACA;AACA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;;AC5QA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,sCAAsC;AACnD,aAAa,qCAAqC;AAClD;AACoD;AACE;;AAEtD,WAAW,UAAU;AACd,MAAM,sBAAU;AACvB;AACA;AACA;AACA;AACA,GAAG;AACH,MAAM;AACN;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA,SAAS,YAAY;AACrB;AACA,oBAAoB,sBAAU;AAC9B;AACA;AACA;AACA;AACA,WAAW,OAAO;;AAElB,SAAS,gBAAI;AACb;AACA;;;AC1EA;AACA,aAAa,uCAAuC;AACpD,aAAa,qCAAqC;AAClD;AAKiC;;AAEjC;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,YAAY;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC,kBAAkB;AAC1D;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,YAAY;AACpB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACtJA;AACA,aAAa,uCAAuC;AACpD,aAAa,+CAA+C;AAC5D,aAAa,qCAAqC;AAClD;AAC0E;;AAE1E;AACA,UAAU;AACV,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACO;AACP;AACA;AACA,aAAa,QAAQ;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AC3GA;AACA,aAAa,uCAAuC;AACpD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACoD;AACO;;AAE3D;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACO;AACP,aAAa,kBAAkB;AAC/B;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AC3FA;AACA,aAAa,uCAAuC;AACpD,aAAa,qCAAqC;AAClD;AACoD;AACsB;;AAE1E;AACA,WAAW,QAAQ;AACnB,WAAW,MAAM;AACjB;AACO;AACP,aAAa,QAAQ;AACrB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB,aAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACpCA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACgE;AACZ;AACA;AACA;AACU;AACS;AAItC;;AAEjC,WAAW,UAAU;AACd,MAAM,qBAAU;AACvB;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,iBAAiB;AAC9B;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,WAAW,yBAAyB;AACpC,QAAQ,iBAAiB;AACzB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,aAAa,YAAY;AACzB;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,4BAA4B,kBAAkB;AAC9C;AACA;;;AClIA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACoD;AACO;;AAE3D,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,WAAW,YAAY;AACvB;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;;AAEA,WAAW,YAAY;AACvB;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;;;AC5GA;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AACoD;AAKnB;AACY;;AAE7C,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,MAAM;;AAEnB;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,yBAAyB;AAClD;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,wCAAwC,yBAAyB;AACjE;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AClJA;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACoD;AACO;;AAE3D,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;AACA,aAAa,iBAAiB;;AAE9B;AACA,aAAa,iBAAiB;;AAE9B;AACA,aAAa,iBAAiB;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;AACzB,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C,GAAG;AACH;AACA,GAAG;;AAEH;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,kBAAkB;;AAE/B;AACA,aAAa,QAAQ;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;;;ACrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;;ACpFP;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AAOiC;AACwC;AAChC;AACzC,WAAW,UAAU;;AAEd;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,KAAK;;AAElB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B;AACA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA;AACA;AACA;;AAEA,UAAU,cAAc;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,UAAU;AAChD;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,yBAAyB;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,sCAAsC,aAAa;AACnD;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA,4BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,kBAAkB;AAC3C;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,UAAU;;AAEvB;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;;;AChjBA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACoD;AAInB;;AAEjC,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,UAAU;;AAEvB;AACA;AACA;AACA;AACA,aAAa,UAAU;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,kBAAkB;;AAE/B;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,YAAY;AACpB;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA,aAAa,YAAY;AACzB;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,yBAAyB,kBAAkB;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,aAAa,UAAU;;AAEvB;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA,aAAa,UAAU;;AAEvB;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,YAAY;AACzB;AACA,eAAe,MAAM;;AAErB;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACznlEoD;;AAEpD,MAAM,oCAAG,KAAK;;AAEd;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACO;AACP,SAAS,oCAAG,MAAM,iBAAiB,WAAW,iBAAiB;AAC/D;;;ACjBA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AAC8E;AAK7C;;AAEjC,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,+BAA+B;;AAE5C;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;AACA;;AAEA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,eAAe,MAAM;AACrB;;AAEA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC,SAAS,6BAA6B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACvGA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACyD;;AAEzD,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACtCA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACoD;AACO;;AAE3D,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;;;ACzBA;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACgE;AACZ;AACA;AACU;AACI;AACf;AACoB;AAClB;;AAErD,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;AACA,aAAa,MAAM;;AAEnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;;AAEpB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,iBAAiB;;AAE9B;AACA,aAAa,iBAAiB;;AAE9B;AACA,aAAa,QAAQ;;AAErB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA,UAAU,IAAI;;AAEd,UAAU,IAAI;;AAEd,UAAU,IAAI;AACd;AACA,IAAI,UAAU;AACd;AACA;AACA;AACA;AACA;;AAEA,UAAU,IAAI;AACd;AACA;AACA;AACA;AACA;;AAEA,UAAU,IAAI;;AAEd,UAAU,IAAI;AACd,EAAE,MAAM;AACR;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,QAAQ;;AAErB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,MAAM,mBAAmB;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,WAAW,yBAAyB;AACpC,QAAQ,iBAAiB;AACzB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,aAAa,YAAY;AACzB;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,MAAM,mBAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AC9WA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACuC;AACvC,WAAW,UAAU;;AAEd;AACP;AACA;AACA,cAAc,QAAQ;AACtB;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;ACtDA;AACA,aAAa,oCAAoC;AACjD;AAKiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACO;AACP;AACA;AACA,IAAI,yBAAyB;AAC7B,IAAI,iBAAiB;AACrB;AACA;AACA;;AAEA,MAAM,kBAAkB;AACxB;AACA;AACA;;;ACjCA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD,aAAa,qCAAqC;AAClD;AACmD;AACgB;AACd;;AAErD,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,MAAM;;AAEnB;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,QAAQ;;AAErB;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,mCAAmC;AACnC,iCAAiC;AACjC;AACA;AACA;AACA,mCAAmC;AACnC,iCAAiC;AACjC;AACA,gDAAgD;AAChD,mDAAmD;AACnD;;AAEA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA,WAAW;;AAEX,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,IAAI;AAC3B;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,IAAI;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC,aAAa,kBAAkB;;AAE/B;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;;AC1OA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AAMiC;;AAEjC,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA,WAAW,UAAU;AACrB;AACA,aAAa,MAAM;;AAEnB;AACA,wDAAwD,iBAAiB;AACzE;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,iBAAiB;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,uDAAuD,YAAY;AACnE;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,WAAW,iBAAiB;AAC5B;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3IA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;AACoD;AAOnB;;AAEjC,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,4BAA4B;;AAEzC;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,UAAU;AAClB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA,sCAAsC,yBAAyB;AAC/D;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,UAAU;AAChD;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iBAAiB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA,QAAQ,aAAa;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,sCAAsC,yBAAyB;AAC/D;AACA;;AAEA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,yBAAyB;AAChD;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AC9dA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AACuC;AACvC,WAAW,UAAU;;AAEd;AACP;AACA;AACA,cAAc,QAAQ;AACtB;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA,aAAa,yCAAyC;AACtD,aAAa,yCAAyC;AACtD,aAAa,qCAAqC;AAClD;AAC2D;;AAE3D,WAAW,UAAU;AACd;AACP;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;;ACnCA;AACA,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,yCAAyC;AACtD,aAAa,wCAAwC;AACrD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD;AAC2D;;AAE3D,WAAW,UAAU;AACd,MAAM,kBAAQ;AACrB;AACA;AACA;AACA,UAAU;AACV;AACA,WAAW,SAAS;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,iBAAiB;;AAE9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;;AAEpB,SAAS,kBAAQ;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA,aAAa,MAAM;;AAEnB;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,kBAAkB;AAC1B;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,GAAG;;AAEH,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA,MAAM,kBAAkB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH,aAAa,MAAM;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;;ACzLA;AACA,aAAa,yCAAyC;AACtD;AAsBkC;AAC0B;AAC5D,WAAW,sBAAsB;;AAE1B,MAAM,mBAAQ;AACrB,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,SAAI;AACZ,QAAQ,sBAAU;AAClB;AACA,WAAW,4BAA4B;;AAEhC;AACP,QAAQ,qBAAU;AAClB;AACA,WAAW,yBAAyB;;AAE7B;AACP,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB,QAAQ,YAAY;AACpB;AACA,WAAW,kBAAkB;;AAEtB,MAAM,eAAI;AACjB,QAAQ,UAAU;AAClB,QAAQ,4BAAa;AACrB,SAAS,eAAe,EAAE,4BAAa;AACvC,QAAQ,QAAQ;AAChB,QAAQ,eAAe;AACvB,QAAQ,4BAAa;AACrB,QAAQ,UAAU;AAClB,SAAS,UAAU;AACnB;AACA,WAAW,oBAAoB;;AAExB,MAAM,iBAAM;AACnB,QAAQ,kBAAkB;AAC1B,QAAQ,eAAe;AACvB;AACA,WAAW,kBAAkB;;AAEtB,MAAM,eAAI;AACjB,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,UAAU;AAClB,QAAQ,eAAe;AACvB,QAAQ,kBAAkB;AAC1B,QAAQ,SAAS;AACjB,SAAS,QAAQ,EAAE,QAAQ;AAC3B,QAAQ,cAAc;AACtB,SAAS,eAAe,EAAE,eAAe;AACzC,QAAQ,QAAQ;AAChB,QAAQ,SAAS;AACjB,QAAQ,kBAAQ;AAChB;AACA,WAAW,wBAAwB;;AAE5B;AACP,SAAS,SAAS,EAAE,QAAW;AAC/B;AACA,WAAW,8BAA8B;;AAElC,MAAM,2BAAgB;AAC7B;AACA;AACA,WAAW,qBAAqB;;AAEzB;AACP;AACA;;;ACxGA;AACA,aAAa,gDAAgD;AAC7D,aAAa,uDAAuD;AACpE,aAAa,4CAA4C;AACzD,aAAa,4CAA4C;AACzD,aAAa,sCAAsC;AACnD;AACmE;AACpB;AACE;AACR;AACQ;AACI;AACD;AACpD;AACA,WAAW,aAAa;AACxB,aAAa;AACb;;AAEO,SAAS,WAAK,aAAa;AAClC,aAAa,wBAAwB;AACrC;AACA,qBAAqB,iBAAiB;AACtC;AACA,KAAK,0BAAiB;AACtB;AACA,aAAa,aAAa;;AAE1B;AACA;AACA,YAAY;AACZ;AACA,oBAAoB,eAAO;AAC3B,qBAAqB,iBAAQ;AAC7B,iBAAiB,IAAI;AACrB,mBAAmB,WAAM;AACzB,iBAAiB,SAAI;AACrB;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;;AAEA;AACA;AACA,eAAe,OAAO;;AAEtB;AACA,aAAa,eAAe;AAC5B;AACA;AACA;;;ACnDA;AACA,aAAa,wCAAwC;AACrD,aAAa,qCAAqC;AAClD,aAAa,qCAAqC;AAClD,aAAa,oCAAoC;AACjD;;AAEA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEO;AACP;AACA;AACA,aAAa,kBAAkB;;AAE/B;AACA,aAAa,kBAAkB;;AAE/B;AACA;AACA,aAAa,aAAa;;AAE1B;AACA,eAAe,QAAQ;AACvB;AACA,eAAe,sBAAsB;;AAErC;AACA,eAAe,OAAO;;AAEtB;AACA,eAAe,OAAO;;AAEtB;AACA,eAAe,OAAO;;AAEtB;AACA,eAAe,KAAK;;AAEpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AChIA;AACA,aAAa,qCAAqC;AAClD;AACsD;AACtD;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;;AAEO;AACP,UAAU,WAAW;AACrB;AACA;;AAEA;AACA;;;ACfA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC7B8E;AACmB;AACjG;AACA,iBAAiB,cAAc,IAAI,UAAU,IAAI,UAAU,KAAK,EAAE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;AAEO;AACP;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;;AAEA,SAAS,6BAA6B;AACtC;;;ACvCA;AACA,aAAa,wCAAwC;AACrD,aAAa,qCAAqC;AAClD,aAAa,4CAA4C;AACzD,aAAa,qCAAqC;AAClD,aAAa,+CAA+C;AAC5D,aAAa,qCAAqC;AAClD,aAAa,uBAAuB;AACpC,aAAa,sBAAsB;AACnC,aAAa,gCAAgC;AAC7C,aAAa,wBAAwB;AACrC,aAAa,aAAa;AAC1B,aAAa,2BAA2B;AACxC,aAAa,sBAAsB;AACnC,aAAa,2BAA2B;AACxC,aAAa,qBAAqB;AAClC,aAAa,2BAA2B;AACxC,aAAa,yBAAyB;AACtC,aAAa,wBAAwB;AACrC,aAAa,qBAAqB;AAClC,aAAa,sBAAsB;AACnC,aAAa,+BAA+B;AAC5C,aAAa,2BAA2B;AACxC,aAAa,qBAAqB;AAClC,aAAa,8BAA8B;AAC3C,aAAa,qBAAqB;AAClC,aAAa,yBAAyB;AACtC,aAAa,0BAA0B;AACvC,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,qBAAqB;AAClC,aAAa,8BAA8B;AAC3C;AACA,aAAa,eAAe,oDAAoD;AAChF;;AAEA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,kBAAkB;AAChC,cAAc,mBAAmB;AACjC,cAAc,kBAAkB;AAChC,cAAc,wEAAwE;AACtF;AACA,aAAa,sDAAsD;AACnE;AACA,aAAa,0BAA0B;AACvC,aAAa,6CAA6C;AAC1D,aAAa,uBAAuB;AACpC;AACA,aAAa,0DAA0D,4FAA4F;AACnK,aAAa,6BAA6B;AAC1C;AACA;AACA,aAAa,4FAA4F;AACzG,aAAa,kFAAkF;AAC/F;AACA;AACA;AACA,cAAc,uBAAuB;AACrC,cAAc,uCAAuC;AACrD,cAAc,uCAAuC;AACrD;AACA,cAAc,6CAA6C;AAC3D;AACA,cAAc,+BAA+B;AAC7C;AACA,cAAc,iCAAiC;AAC/C;AACA,cAAc,2FAA2F;AACzG;AACA,cAAc,oEAAoE;AAClF;AACA,cAAc,kCAAkC;AAChD;AACA,cAAc,oBAAoB;AAClC;AACA;AACA,cAAc,qDAAqD;AACnE,aAAa,mCAAmC;AAChD;AAC6C;AACD;AACU;AACE;AACyC;AACxC;AACc;AACO;AACf;AAC/D,MAAM,OAAG,KAAK;AACd;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,WAAW;AACjB,QAAQ,WAAK,2BAA2B,UAAU;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA,8BAA8B;AAC9B,aAAa,oBAAoB;AACjaAAa,YAAY;;AAEzB;AACA;AACA;AACA,aAAa,aAAa;AAC1B,eAAe;AACf;;AAEA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA;AACA,eAAe,wBAAwB;;AAEvC;AACA,eAAe,6BAA6B;;AAE5C;AACA,eAAe,cAAc;;AAE7B;AACA,eAAe,uCAAuC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,UAAU,OAAG;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,aAAa;AAC1B,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;;AAE/B;AACA,eAAe,iBAAiB;;AAEhC;AACA,eAAe,iBAAiB;;AAEhC;AACA,eAAe,kBAAkB;;AAEjC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,gBAAgB,OAAO;AACvB,aAAa,EAAE;AACf,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uBAAuB;AACpC,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA,cAAc;AACd,eAAe,MAAM;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,yBAAyB;;AAEtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,YAAY;AACZ,gBAAgB,KAAK;AACrB,YAAY;AACZ,aAAa,EAAE;AACf,aAAa,MAAM;AACnB,aAAa,aAAa;AAC1B,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;;AAEA;AACA;AACA;AACA,cAAc;AACd,eAAe,MAAM;AACrB,iBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,YAAY;AACZ,aAAa,MAAM;AACnB,aAAa,YAAY;AACzB,eAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,eAAe;AACf;;AAEA;AACA,WAAW,6BAAQ;AACnB,GAAG;AACH;AACA;;AAEA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,QAAQ;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,eAAe,KAAK;;AAEpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,QAAQ,mCAAmC;AAC5D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,SAAS,mCAAmC;AAC7D;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,gBAAgB,mCAAmC;AACpE;AACA;AACA,qBAAqB,YAAY;AACjC,0BAA0B,mBAAmB;AAC7C;AACA,aAAa,OAAO;;AAEpB;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA,iBAAiB,gBAAgB,mCAAmC;AACpE;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,6BAA6B;AAC9C;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,eAAe,OAAO;;AAEtB;;AAEA;AACA,cAAc,+BAA+B;AAC7C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,cAAc,6BAA6B;AAC3C;;AAEA;AACA;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,aAAa,OAAO;;AAEpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA,GAAG;AACH;AACA;;AAEA,gBAAgB,WAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,WAAW;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAU;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,KAAK;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,kCAAkC;AAC7C,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,aAAa;AACb;;AAEA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,QAAQ,OAAG;AACX;AACA,oBAAoB,OAAG;AACvB;;AAEA,2DAA2D;AAC3D;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AC1tCA;AACA,aAAa,qBAAqB;AAClC,aAAa,2CAA2C;AACxD;;AAEqD;;AAErD,WAAW,4DAA4D;AACxD;AACf,aAAa,uCAAuC;AACpD;AACA;AACA,gCAAgC,QAAQ;;AAExC,WAAW,YAAY;AACvB;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,uBAAuB,eAAe;AACtC;;;AC3BwC;;AAEzB,4DAAW;;;ACF1B;AACA,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,wBAAwB;AACrC,aAAa,yBAAyB;AACtC,aAAa,oBAAoB;AACjC;AACA,aAAa,6GAA6G,qBAAqB,MAAM;AACrJ,aAAa,6FAA6F,uBAAuB,MAAM;AACvI,aAAa,8EAA8E,QAAQ,MAAM;AACzG,aAAa,gEAAgE,qBAAqB,EAAE;AACpG,aAAa,gDAAgD,uBAAuB,EAAE;AACtF,aAAa,iCAAiC,QAAQ,EAAE;AACxD;;AAEO;AACP,UAAU;AACV;AACA;AACA,aAAa,OAAO;AACpB,aAAa,sBAAsB;AACnC,aAAa,gBAAgB;AAC7B,eAAe;AACf;AACA;AACA,eAAe,KAAK;AACpB,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;;AC7CA;AACA,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC;AACA,aAAa,OAAO;AACpB,aAAa,wBAAwB;AACrC;AACA,aAAa,uFAAuF;AACpG;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA,WAAW,KAAK;AAChB,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,aAAa;AACb;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,aAAa;AACb;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA,WAAW,QAAQ;AACnB,WAAW,sBAAsB;AACjC,WAAW,sBAAsB;AACjC,aAAa;AACb;;AAEO,MAAM,gBAAE;AACf;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,KAAK;AACpB;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,eAAe,sBAAsB;AACrC,eAAe,QAAQ;AACvB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA,2DAA2D,0BAA0B;AACrF;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe,gBAAE;AACjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,wCAAwC;AACnD,aAAa;AACb;AACA;AACA,aAAa,uBAAuB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,YAAY;AACZ,aAAa,UAAU;AACvB,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB,eAAe;AACf;AACA;AACA,eAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;;AAEA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACA;AACA;;AAEA;AACA,YAAY;AACZ,aAAa,gBAAgB;AAC7B,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,gBAAE;AACX;AACA;;;AC1PA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;AACA;;;ACNA;AACA,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,6BAA6B;AAC1C,aAAa,oCAAoC;AACjD,aAAa,mCAAmC;AAChD,aAAa,yCAAyC;AACtD,aAAa,2CAA2C;AACxD,aAAa,qCAAqC;AAClD;;AAEqC;AACL;;AAEhC;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,eAAe,KAAK;AACpB,eAAe,2CAA2C;AAC1D,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;;AAEA;;AAEA;AACA,iBAAiB,KAAK;AACtB,iBAAiB,QAAQ;AACzB,iBAAiB,cAAc;AAC/B;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA,mBAAmB,iBAAiB;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA,WAAW;AACX;;AAEA;;AAEA;AACA,qBAAqB,YAAY;AACjC;AACA,qBAAqB,YAAY;AACjC;AACA,qBAAqB,OAAO;AAC5B;AACA,qBAAqB,cAAc;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AC3JA;AACA,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,6BAA6B;AAC1C,aAAa,iDAAiD;AAC9D,aAAa,qCAAqC;AAClD;;AAEqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,sBAAK;AAClB;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,eAAe,KAAK;AACpB,eAAe,qCAAqC;AACpD,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,YAAY;;AAElB;AACA,iBAAiB,KAAK;AACtB,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6D;;;AC5D7D;AACA,aAAa,yBAAyB;AACtC,aAAa,qBAAqB;AAClC,aAAa,2BAA2B,iDAAiD;AACzF,aAAa,sBAAsB;AACnC;AACA,aAAa,eAAe;AAC5B;AACA;AACA,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;;AAEO,mBAAmB,yBAAK;AACxB,iBAAiB,yBAAK;;AAE7B;AACA;AACA;AACA,WAAW,cAAc;AACzB,aAAa;AACb;AACO,SAAS,4BAAQ;AACxB,UAAU;AACV;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA,SAAS,yBAAK;AACd;;AAEA;AACA;AACA;AACA,aAAa,cAAc;AAC3B,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,aAAa,OAAO;AACpB,cAAc,UAAU;AACxB,cAAc,UAAU;AACxB;AACA,aAAa,OAAO;AACpB,cAAc,aAAa;AAC3B;;AAEA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA,aAAa,6CAA6C;AAC1D,aAAa,2BAA2B;AACxC;;AAEsC;;AAEtC,MAAM,0BAAG,KAAK;;AAEd;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACO,SAAS,kCAAW;AAC3B,aAAa,2BAA2B;AACxC;;AAEA;AACA;AACA;;AAEA,EAAE,sBAAK;AACP;AACA,eAAe,0BAAG;AAClB;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA,iBAAiB,0BAAG;AACpB;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;AACA;AACA;;;ACnDA;AACA,aAAa,gEAAgE;AAC7E,aAAa,uBAAuB;AACpC,aAAa,6BAA6B;AAC1C,aAAa,6BAA6B;AAC1C;;AAE+B;;AAE/B,MAAM,YAAG,KAAK;;AAEd;AACA;AACA,UAAU;AACV,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,YAAG;AACT,MAAM,YAAG;AACT,MAAM,YAAG;AACT;AACA;AACA,2BAA2B,CAAC;AAC5B;;AAEA,wBAAwB,YAAG;AAC3B;;AAEA;AACA,UAAU;AACV,WAAW,UAAU;AACrB;AACO,SAAS,YAAG;AACnB;AACA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,YAAG;AACT;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;AACV,WAAW,UAAU;AACrB;AACA;AACA;AACA,+BAA+B,mBAAmB,YAAG,UAAU;AAC/D;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,UAAU;AACrB;AACO,SAAS,YAAG;AACnB,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,YAAG;;AAExB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC3GA,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP;;AAEA;AACA,aAAa,OAAO;AACpB,eAAe;AACf;AACA;AACA;AACA,gDAAgD;AAChD;AACA;;;ACvB0D;AACd;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,aAAa;AACb;AACO;AACP,gBAAgB,MAAM;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;;AAEtB;;AAEA;AACA;AACA,MAAM,iBAAiB;AACvB,MAAM,iBAAiB;AACvB;AACA;AACA,KAAK;AACL;AACA,mBAAmB;AACnB;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AC9GA;AACA,aAAa,6BAA6B;AAC1C;;AAE+B;;AAE/B;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B,WAAW,QAAQ;AACnB,aAAa;AACb;AACO,SAAS,SAAI;AACpB,aAAa,eAAe;AAC5B;AACA;;AAEA;AACA,gBAAgB,CAAC;AACjB;;AAEA;AACA,2BAA2B,CAAC;AAC5B;AACA;;AAEA;AACA,gBAAgB,CAAC;AACjB;;AAEA;AACA;;;ACjCA;AACA,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C,aAAa,uBAAuB;AACpC;;AAEuD;AACxB;AACE;AACH;;AAE9B;AACA,WAAW,EAAE;AACb,aAAa;AACb;AACO;AACP;AACA,aAAa,sBAAsB;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,YAAG;AACvB;AACA,mBAAmB,WAAW;AAC9B;AACA,eAAe,sBAAsB;AACrC;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,oBAAoB,yBAAyB;AAC7C;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,4CAA4C;AAClE,SAAS;AACT;;AAEA;AACA,6BAA6B,yBAAyB;AACtD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,4BAA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aAAa,WAAW;AACxB;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA,eAAe,QAAQ;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,iCAAiC,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,CAAC;AACpB;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,CAAC;AAClB;;AAEA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACnHA;AACA,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC,aAAa,0BAA0B;AACvC,aAAa,8BAA8B;AAC3C;;AAE+B;AACG;;AAElC;AACA,UAAU;AACV,WAAW,KAAK;AAChB,aAAa;AACb;AACO,SAAS,kBAAI;AACpB,aAAa,WAAW;AACxB;AACA;AACA,gBAAgB,YAAG;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,SAAI;AAClC;;;AC3CA;AACA,aAAa,0BAA0B;AACvC,aAAa,8BAA8B;AAC3C;;AAEkC;;AAElC;AACA,UAAU;AACV,WAAW,UAAU;AACrB;AACO,SAAS,mBAAS;AACzB,sBAAsB,YAAG;AACzB;;;ACbA;AACA,aAAa,qBAAqB;AAClC,aAAa,8BAA8B;AAC3C;;AAE+B;AACG;AACH;;AAE/B;AACA,UAAU;AACV,WAAW,KAAK;AAChB;AACO;AACP;AACA,yBAAyB,CAAC,SAAS,SAAI,CAAC,YAAG;AAC3C;;;AChBA;AACA,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C;;AAEkC;;AAElC;AACA,UAAU;AACV,WAAW,OAAO;AAClB;AACO,SAAS,aAAM;AACtB,2BAA2B,YAAG;AAC9B;;;ACbA;AACA,aAAa,sBAAsB;AACnC,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C,aAAa,8BAA8B;AAC3C;;AAEwD;AACzB;AACG;;AAElC;AACA,UAAU;AACV,WAAW,MAAM;AACjB;AACO;AACP;AACA;AACA;AACA,aAAa,eAAe;AAC5B;;AAEA;AACA;AACA;AACA,eAAe,eAAe;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,wBAAwB,SAAS,YAAG;AAC3D;AACA;;AAEA,yCAAyC,SAAI;AAC7C;;AAEA;AACA;AACA;AACA,IAAI,SAAI;AACR,sCAAsC,SAAI;AAC1C;AACA;AACA;AACA,uBAAuB,UAAU;AACjC,qBAAqB,QAAQ;AAC7B,eAAe;AACf;AACA,cAAc,SAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3DA;AACA,MAAM,gBAAK;;AAEX;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA,aAAa;AACb;AACA;AACO;AACP;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,gBAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oCAAoC,gBAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;;;ACpEA;AACA,aAAa,qBAAqB;AAClC,aAAa,8BAA8B;AAC3C;;AAEoC;AACL;;AAE/B;AACA,UAAU;AACV,WAAW,KAAK;AAChB;AACO,SAAS,kBAAI;AACpB,yBAAyB,CAAC,SAAS,SAAS;AAC5C;;;ACdA;AACA,aAAa,8BAA8B;AAC3C,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C;;AAEA;AACA,UAAU;AACV,WAAW,cAAc;AACzB,aAAa;AACb;AACO,SAAS,qCAAa;AAC7B;AACA;;;ACb0C;AACN;AACN;AACW;AACH;AACmB;AACnB;AACF;AACN;AACqB;AACnB;AACW;AACM;AACnB;AACS;AACT;AACU;AACV;AACI;AACF;AACF;AACmB;;AAE1C;AACP,EAAE,sBAAU;AACZ,SAAS,eAAS;AAClB,EAAE,eAAI;AACN,UAAU,aAAa;AACvB,EAAE,2BAAQ;AACV,EAAE,oCAAiB;AACnB,EAAE,kBAAQ;AACV,EAAE,wBAAO;AACT,EAAE,eAAI;AACN,EAAE,8BAAc;AAChB,EAAE,kBAAK;AACP,EAAE,sBAAU;AACZ,EAAE,4BAAa;AACf,EAAE,eAAI;AACN,EAAE,4BAAQ;AACV,EAAE,wBAAI;AACN,EAAE,8BAAS;AACX,EAAE,UAAI;AACN,EAAE,qBAAM;AACR,EAAE,YAAK;AACP,EAAE,wBAAI;AACN,EAAE,oDAAa;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;ACvDA;AACA,aAAa,gEAAgE;AAC7E,aAAa,8DAA8D;AAC3E,aAAa,uBAAuB;AACpC,aAAa,2BAA2B;AACxC,aAAa,mCAAmC;AAChD,aAAa,0BAA0B;AACvC,aAAa,uBAAuB;AACpC,aAAa,8BAA8B;AAC3C,aAAa,2CAA2C;AACxD;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,WAAW;AACzB;AACA,cAAc,eAAe;AAC7B;AACA;AACA,aAAa,6CAA6C;AAC1D;AACA;AACA,aAAa,aAAa,aAAa;AACvC;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,IAAI;AACf;AACA,WAAW,YAAY;AACvB;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,sCAAsC;AACjD;AACA,WAAW,OAAO;AAClB;AACA,WAAW,WAAW;AACtB;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW,sCAAsC;AACjD;AACA,WAAW,OAAO;AAClB;AACA,WAAW,gBAAgB;AAC3B;AACA,aAAa;AACb;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB;AACA,cAAc,WAAW;AACzB;AACA,cAAc,OAAO;AACrB;AACA,cAAc,wCAAwC;AACtD;AACA,cAAc,mCAAmC;AACjD;AACA,cAAc,cAAc;AAC5B;AACA,cAAc,uBAAuB;AACrC;AACA,cAAc,SAAS;AACvB;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,4EAA4E;AAC1F;AACA,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA,cAAc,WAAW,2BAA2B,uBAAuB;AAC3E;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA,cAAc,cAAc;AAC5B;AACA,cAAc,QAAQ;AACtB;AACA;AACA,aAAa,wBAAwB;AACrC;AACA,aAAa,4CAA4C;AACzD;AACA;;AAE+B;AACO;AACkB;AACV;AACI;AACjB;AACC;AACU;;AAE5C,MAAM,0BAAG,KAAK;;AAEd;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa;AACb;AACA;AACA,SAAS,WAAO;AAChB;AACA;AACA,aAAa,mCAAmC;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kCAAW;AAC5B;AACA,aAAa,cAAc;AAC3B;AACA,aAAa,uBAAuB;AACpC;AACA;AACA,gBAAgB,GAAG,QAAQ;AAC3B;AACA;;AAEA,EAAE,sBAAK;AACP;;AAEA;AACA;AACA,SAAS,0BAAG;AACZ;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,aAAa,6BAA6B;AAC1C,aAAa,QAAQ;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C;;AAE3C,WAAW,SAAS;AACpB;AACA,0BAA0B,OAAO,UAAU,YAAY,QAAQ;AAC/D;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,QAAQ;AACnB,aAAa,wBAAwB;AACrC;AACO;AACP,YAAY,WAAO;AACnB,eAAe,YAAG;AAClB,eAAe,MAAM;;AAErB;AACA;AACA;AACA;AACA,uBAAuB,CAAC;AACxB;;AAEA,gCAAgC,6BAA6B;AAC7D;;AAE+D;;;AC5R/D;AACA,aAAa,oBAAoB;AACjC,aAAa,qBAAqB;AAClC,aAAa,qCAAqC;AAClD,aAAa,gDAAgD;AAC7D;AACA,aAAa,6BAA6B;AAC1C;;AAEyC;;AAEzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qGAAqG;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oDAAY;;AAE3B;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;;;;;;;ACtEA;AACA,aAAa,yBAAyB;AACtC,aAAa,qBAAqB;AAClC,aAAa,uBAAuB;AACpC;;AAEO;AACP;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAW,WAAW;AACtB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,YAAY;AACvB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AAO;AACrB,gBAAgB,aAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,aAAO;AACjB,aAAa,MAAM;AACnB;AACA,UAAU,cAAc;AACxB;AACA,iBAAiB,aAAO;AACxB;AACA;AACA,cAAc,aAAO;AACrB;AACA,SAAS,cAAc;AACvB,cAAc,aAAO;AACrB,cAAc,aAAO;AACrB,UAAU,MAAM;AAChB,aAAa,MAAM;AACnB,aAAa,cAAc;AAC3B;AACA,YAAY,aAAO;AACnB,cAAc,aAAO;AACrB,cAAc,aAAO;AACrB;AACA,UAAU,MAAM;AAChB;AACA;AACA,UAAU,MAAM;AAChB,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA,mBAAmB,aAAO;AAC1B;AACA,WAAW,UAAU;AACrB,WAAW,MAAM;AACjB;;AAEA;AACA;AACA;AACA,iDAAiD,MAAM;AACvD,aAAa,cAAc;AAC3B;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAO;AACpB,aAAa,aAAO;AACpB;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,gBAAgB,MAAM;AACtB,8CAA8C,SAAS;AACvD;AACA;AACA,kBAAkB,MAAM;AACxB,iBAAiB,MAAM;AACvB,cAAc,aAAO;AACrB,YAAY,aAAO;AACnB,aAAa,aAAO;AACpB,YAAY,aAAO;AACnB;AACA;AACA;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,kDAAkD,MAAM;AACxD,YAAY,MAAM;;AAElB;AACA;AACA;AACA;AACA,6BAA6B,aAAO;AACpC,2BAA2B,aAAO;AAClC;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA,CAAC;;;AC9SuB;AACe;AACkC;;AAElE,YAAY,aAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,aAAa,sBAAsB;AACnC;AACA,WAAW,qBAAqB;AAChC,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,gBAAgB,MAAM;AACtB,eAAe,MAAM;AACrB;AACA,YAAY,MAAM;AAClB;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA,eAAe,MAAM;AACrB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA,cAAc,aAAO;AACrB;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB,QAAQ,cAAc;AACtB,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,kBAAkB,MAAM;AACxB,kBAAkB,MAAM;AACxB;AACA,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,OAAO,MAAM;AACb,QAAQ,MAAM;AACd,QAAQ,MAAM;AACd,QAAQ,MAAM;AACd,QAAQ,MAAM;AACd,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrsBAAsB,MAAM;AAC5B,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA,SAAS,qBAAqB;AAC9B,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C,sBAAsB,qBAAqB;AAC3C,mBAAmB,qBAAqB;AACxC,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,MAAM;AACjC,4BAA4B,MAAM;AAClC;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,mBAAmB,MAAM;AACzB;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC,cAAc,MAAM;AACpB;AACA;AACA,aAAa,MAAM;AACnB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,iBAAiB,MAAM;AACvB,mBAAmB,MAAM;AACzB;AACA,cAAc,MAAM;AACpB,kBAAkB,MAAM;AACxB;AACA,cAAc,MAAM;AACpB,iBAAiB,MAAM;AACvB,iBAAiB,MAAM;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;ACpjBD;AACA,aAAa,kCAAkC;AAC/C,aAAa,sCAAsC;AACnD;;AAEyC;AACL;AACJ;AACI;AACF;AACY;AACH;;AAET;AACgB;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nB,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC;AACA;AACA,aAAa,wBAAwB;AACrC;AACA;AACA,aAAa,OAAO;AACpB;;AAEA;AACA,aAAa,wBAAG;AAChB;AACA;;AAEA;AACA;AACA,UAAU,gBAAG;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,uCAAuC;AACnD,UAAU;AACV;AACA;AACA,0BAA0B,gBAAG;AAC7B;AACA;AACA,+DAA+D,eAAK;;AAEpE,OAAO,kBAAO;AACd;AACA,8BAA8B,KAAK;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAM,eAAK;AACX,MAAM,eAAK;AACX;;AAEA;AACA,WAAW,aAAa;AACxB,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,wBAAwB;AACnC,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;AACA;AACA,eAAe,IAAI;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BAAS;AACtB,gBAAgB,oBAAS;AACzB,YAAY,oBAAS;AACrB,uBAAuB,oBAAS;AAChC,oBAAoB,oBAAS,YAAY,oBAAS,OAAO,oBAAS;AAClE,cAAc,oBAAS,YAAY,oBAAS,OAAO,oBAAS;AAC5D,qBAAqB,oBAAS;AAC9B,cAAc,oBAAS;AACvB;;;AC1LA;AACA,aAAa,uDAAuD;AACpE,aAAa,2CAA2C;AACxD;;AAEuD;;AAES;;;;;;;;ACPhE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mEAAmE;AACnE,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ,YAAY;AACZ,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,8bAA8b;AAC3c,cAAc,kCAAkC,iBAAiB,UAAU,0BAA0B,4CAA4C,kCAAkC,mDAAmD,kBAAkB,kBAAkB,0BAA0B,0BAA0B,kBAAkB,qBAAqB,mBAAmB,eAAe,eAAe,iBAAiB,mBAAmB,qBAAqB;AAC/c,uBAAuB,+BAA+B,UAAU,oCAAoC,UAAU,sCAAsC,iBAAiB,sCAAsC,iBAAiB,8BAA8B,qDAAqD,iCAAiC,iBAAiB,+BAA+B,iBAAiB,2BAA2B,iBAAiB,2BAA2B;AACxd,6BAA6B,iBAAiB,+BAA+B,iBAAiB,iCAAiC,iBAAiB,+BAA+B,iBAAiB,mCAAmC;AACnO,uCAAuC,2PAA2P;;;;;;;;;ACbrR;;AAEb,IAAI,IAAqC;AACzC,mBAAmB,mBAAO,CAAC,MAAkC;AAC7D,CAAC,MAAM,EAEN;;;;;;;;;;ACLY;;;AAGb;;;AAGA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;;AAE5B;;AAEA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;;AAEA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;;;AAGA","file":"x","sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: 'Æ',\n  AMP: '&',\n  Aacute: 'Á',\n  Abreve: 'Ă',\n  Acirc: 'Â',\n  Acy: 'А',\n  Afr: '𝔄',\n  Agrave: 'À',\n  Alpha: 'Α',\n  Amacr: 'Ā',\n  And: '⩓',\n  Aogon: 'Ą',\n  Aopf: '𝔸',\n  ApplyFunction: '⁡',\n  Aring: 'Å',\n  Ascr: '𝒜',\n  Assign: '≔',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Backslash: '∖',\n  Barv: '⫧',\n  Barwed: '⌆',\n  Bcy: 'Б',\n  Because: '∵',\n  Bernoullis: 'ℬ',\n  Beta: 'Β',\n  Bfr: '𝔅',\n  Bopf: '𝔹',\n  Breve: '˘',\n  Bscr: 'ℬ',\n  Bumpeq: '≎',\n  CHcy: 'Ч',\n  COPY: '©',\n  Cacute: 'Ć',\n  Cap: '⋒',\n  CapitalDifferentialD: 'ⅅ',\n  Cayleys: 'ℭ',\n  Ccaron: 'Č',\n  Ccedil: 'Ç',\n  Ccirc: 'Ĉ',\n  Cconint: '∰',\n  Cdot: 'Ċ',\n  Cedilla: '¸',\n  CenterDot: '·',\n  Cfr: 'ℭ',\n  Chi: 'Χ',\n  CircleDot: '⊙',\n  CircleMinus: '⊖',\n  CirclePlus: '⊕',\n  CircleTimes: '⊗',\n  ClockwiseContourIntegral: '∲',\n  CloseCurlyDoubleQuote: '”',\n  CloseCurlyQuote: '’',\n  Colon: '∷',\n  Colone: '⩴',\n  Congruent: '≡',\n  Conint: '∯',\n  ContourIntegral: '∮',\n  Copf: 'ℂ',\n  Coproduct: '∐',\n  CounterClockwiseContourIntegral: '∳',\n  Cross: '⨯',\n  Cscr: '𝒞',\n  Cup: '⋓',\n  CupCap: '≍',\n  DD: 'ⅅ',\n  DDotrahd: '⤑',\n  DJcy: 'Ђ',\n  DScy: 'Ѕ',\n  DZcy: 'Џ',\n  Dagger: '‡',\n  Darr: '↡',\n  Dashv: '⫤',\n  Dcaron: 'Ď',\n  Dcy: 'Д',\n  Del: '∇',\n  Delta: 'Δ',\n  Dfr: '𝔇',\n  DiacriticalAcute: '´',\n  DiacriticalDot: '˙',\n  DiacriticalDoubleAcute: '˝',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '˜',\n  Diamond: '⋄',\n  DifferentialD: 'ⅆ',\n  Dopf: '𝔻',\n  Dot: '¨',\n  DotDot: '⃜',\n  DotEqual: '≐',\n  DoubleContourIntegral: '∯',\n  DoubleDot: '¨',\n  DoubleDownArrow: '⇓',\n  DoubleLeftArrow: '⇐',\n  DoubleLeftRightArrow: '⇔',\n  DoubleLeftTee: '⫤',\n  DoubleLongLeftArrow: '⟸',\n  DoubleLongLeftRightArrow: '⟺',\n  DoubleLongRightArrow: '⟹',\n  DoubleRightArrow: '⇒',\n  DoubleRightTee: '⊨',\n  DoubleUpArrow: '⇑',\n  DoubleUpDownArrow: '⇕',\n  DoubleVerticalBar: '∥',\n  DownArrow: '↓',\n  DownArrowBar: '⤓',\n  DownArrowUpArrow: '⇵',\n  DownBreve: '̑',\n  DownLeftRightVector: '⥐',\n  DownLeftTeeVector: '⥞',\n  DownLeftVector: '↽',\n  DownLeftVectorBar: '⥖',\n  DownRightTeeVector: '⥟',\n  DownRightVector: '⇁',\n  DownRightVectorBar: '⥗',\n  DownTee: '⊤',\n  DownTeeArrow: '↧',\n  Downarrow: '⇓',\n  Dscr: '𝒟',\n  Dstrok: 'Đ',\n  ENG: 'Ŋ',\n  ETH: 'Ð',\n  Eacute: 'É',\n  Ecaron: 'Ě',\n  Ecirc: 'Ê',\n  Ecy: 'Э',\n  Edot: 'Ė',\n  Efr: '𝔈',\n  Egrave: 'È',\n  Element: '∈',\n  Emacr: 'Ē',\n  EmptySmallSquare: '◻',\n  EmptyVerySmallSquare: '▫',\n  Eogon: 'Ę',\n  Eopf: '𝔼',\n  Epsilon: 'Ε',\n  Equal: '⩵',\n  EqualTilde: '≂',\n  Equilibrium: '⇌',\n  Escr: 'ℰ',\n  Esim: '⩳',\n  Eta: 'Η',\n  Euml: 'Ë',\n  Exists: '∃',\n  ExponentialE: 'ⅇ',\n  Fcy: 'Ф',\n  Ffr: '𝔉',\n  FilledSmallSquare: '◼',\n  FilledVerySmallSquare: '▪',\n  Fopf: '𝔽',\n  ForAll: '∀',\n  Fouriertrf: 'ℱ',\n  Fscr: 'ℱ',\n  GJcy: 'Ѓ',\n  GT: '>',\n  Gamma: 'Γ',\n  Gammad: 'Ϝ',\n  Gbreve: 'Ğ',\n  Gcedil: 'Ģ',\n  Gcirc: 'Ĝ',\n  Gcy: 'Г',\n  Gdot: 'Ġ',\n  Gfr: '𝔊',\n  Gg: '⋙',\n  Gopf: '𝔾',\n  GreaterEqual: '≥',\n  GreaterEqualLess: '⋛',\n  GreaterFullEqual: '≧',\n  GreaterGreater: '⪢',\n  GreaterLess: '≷',\n  GreaterSlantEqual: '⩾',\n  GreaterTilde: '≳',\n  Gscr: '𝒢',\n  Gt: '≫',\n  HARDcy: 'Ъ',\n  Hacek: 'ˇ',\n  Hat: '^',\n  Hcirc: 'Ĥ',\n  Hfr: 'ℌ',\n  HilbertSpace: 'ℋ',\n  Hopf: 'ℍ',\n  HorizontalLine: '─',\n  Hscr: 'ℋ',\n  Hstrok: 'Ħ',\n  HumpDownHump: '≎',\n  HumpEqual: '≏',\n  IEcy: 'Е',\n  IJlig: 'Ĳ',\n  IOcy: 'Ё',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Icy: 'И',\n  Idot: 'İ',\n  Ifr: 'ℑ',\n  Igrave: 'Ì',\n  Im: 'ℑ',\n  Imacr: 'Ī',\n  ImaginaryI: 'ⅈ',\n  Implies: '⇒',\n  Int: '∬',\n  Integral: '∫',\n  Intersection: '⋂',\n  InvisibleComma: '⁣',\n  InvisibleTimes: '⁢',\n  Iogon: 'Į',\n  Iopf: '𝕀',\n  Iota: 'Ι',\n  Iscr: 'ℐ',\n  Itilde: 'Ĩ',\n  Iukcy: 'І',\n  Iuml: 'Ï',\n  Jcirc: 'Ĵ',\n  Jcy: 'Й',\n  Jfr: '𝔍',\n  Jopf: '𝕁',\n  Jscr: '𝒥',\n  Jsercy: 'Ј',\n  Jukcy: 'Є',\n  KHcy: 'Х',\n  KJcy: 'Ќ',\n  Kappa: 'Κ',\n  Kcedil: 'Ķ',\n  Kcy: 'К',\n  Kfr: '𝔎',\n  Kopf: '𝕂',\n  Kscr: '𝒦',\n  LJcy: 'Љ',\n  LT: '<',\n  Lacute: 'Ĺ',\n  Lambda: 'Λ',\n  Lang: '⟪',\n  Laplacetrf: 'ℒ',\n  Larr: '↞',\n  Lcaron: 'Ľ',\n  Lcedil: 'Ļ',\n  Lcy: 'Л',\n  LeftAngleBracket: '⟨',\n  LeftArrow: '←',\n  LeftArrowBar: '⇤',\n  LeftArrowRightArrow: '⇆',\n  LeftCeiling: '⌈',\n  LeftDoubleBracket: '⟦',\n  LeftDownTeeVector: '⥡',\n  LeftDownVector: '⇃',\n  LeftDownVectorBar: '⥙',\n  LeftFloor: '⌊',\n  LeftRightArrow: '↔',\n  LeftRightVector: '⥎',\n  LeftTee: '⊣',\n  LeftTeeArrow: '↤',\n  LeftTeeVector: '⥚',\n  LeftTriangle: '⊲',\n  LeftTriangleBar: '⧏',\n  LeftTriangleEqual: '⊴',\n  LeftUpDownVector: '⥑',\n  LeftUpTeeVector: '⥠',\n  LeftUpVector: '↿',\n  LeftUpVectorBar: '⥘',\n  LeftVector: '↼',\n  LeftVectorBar: '⥒',\n  Leftarrow: '⇐',\n  Leftrightarrow: '⇔',\n  LessEqualGreater: '⋚',\n  LessFullEqual: '≦',\n  LessGreater: '≶',\n  LessLess: '⪡',\n  LessSlantEqual: '⩽',\n  LessTilde: '≲',\n  Lfr: '𝔏',\n  Ll: '⋘',\n  Lleftarrow: '⇚',\n  Lmidot: 'Ŀ',\n  LongLeftArrow: '⟵',\n  LongLeftRightArrow: '⟷',\n  LongRightArrow: '⟶',\n  Longleftarrow: '⟸',\n  Longleftrightarrow: '⟺',\n  Longrightarrow: '⟹',\n  Lopf: '𝕃',\n  LowerLeftArrow: '↙',\n  LowerRightArrow: '↘',\n  Lscr: 'ℒ',\n  Lsh: '↰',\n  Lstrok: 'Ł',\n  Lt: '≪',\n  Map: '⤅',\n  Mcy: 'М',\n  MediumSpace: ' ',\n  Mellintrf: 'ℳ',\n  Mfr: '𝔐',\n  MinusPlus: '∓',\n  Mopf: '𝕄',\n  Mscr: 'ℳ',\n  Mu: 'Μ',\n  NJcy: 'Њ',\n  Nacute: 'Ń',\n  Ncaron: 'Ň',\n  Ncedil: 'Ņ',\n  Ncy: 'Н',\n  NegativeMediumSpace: '​',\n  NegativeThickSpace: '​',\n  NegativeThinSpace: '​',\n  NegativeVeryThinSpace: '​',\n  NestedGreaterGreater: '≫',\n  NestedLessLess: '≪',\n  NewLine: '\\n',\n  Nfr: '𝔑',\n  NoBreak: '⁠',\n  NonBreakingSpace: ' ',\n  Nopf: 'ℕ',\n  Not: '⫬',\n  NotCongruent: '≢',\n  NotCupCap: '≭',\n  NotDoubleVerticalBar: '∦',\n  NotElement: '∉',\n  NotEqual: '≠',\n  NotEqualTilde: '≂̸',\n  NotExists: '∄',\n  NotGreater: '≯',\n  NotGreaterEqual: '≱',\n  NotGreaterFullEqual: '≧̸',\n  NotGreaterGreater: '≫̸',\n  NotGreaterLess: '≹',\n  NotGreaterSlantEqual: '⩾̸',\n  NotGreaterTilde: '≵',\n  NotHumpDownHump: '≎̸',\n  NotHumpEqual: '≏̸',\n  NotLeftTriangle: '⋪',\n  NotLeftTriangleBar: '⧏̸',\n  NotLeftTriangleEqual: '⋬',\n  NotLess: '≮',\n  NotLessEqual: '≰',\n  NotLessGreater: '≸',\n  NotLessLess: '≪̸',\n  NotLessSlantEqual: '⩽̸',\n  NotLessTilde: '≴',\n  NotNestedGreaterGreater: '⪢̸',\n  NotNestedLessLess: '⪡̸',\n  NotPrecedes: '⊀',\n  NotPrecedesEqual: '⪯̸',\n  NotPrecedesSlantEqual: '⋠',\n  NotReverseElement: '∌',\n  NotRightTriangle: '⋫',\n  NotRightTriangleBar: '⧐̸',\n  NotRightTriangleEqual: '⋭',\n  NotSquareSubset: '⊏̸',\n  NotSquareSubsetEqual: '⋢',\n  NotSquareSuperset: '⊐̸',\n  NotSquareSupersetEqual: '⋣',\n  NotSubset: '⊂⃒',\n  NotSubsetEqual: '⊈',\n  NotSucceeds: '⊁',\n  NotSucceedsEqual: '⪰̸',\n  NotSucceedsSlantEqual: '⋡',\n  NotSucceedsTilde: '≿̸',\n  NotSuperset: '⊃⃒',\n  NotSupersetEqual: '⊉',\n  NotTilde: '≁',\n  NotTildeEqual: '≄',\n  NotTildeFullEqual: '≇',\n  NotTildeTilde: '≉',\n  NotVerticalBar: '∤',\n  Nscr: '𝒩',\n  Ntilde: 'Ñ',\n  Nu: 'Ν',\n  OElig: 'Œ',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Ocy: 'О',\n  Odblac: 'Ő',\n  Ofr: '𝔒',\n  Ograve: 'Ò',\n  Omacr: 'Ō',\n  Omega: 'Ω',\n  Omicron: 'Ο',\n  Oopf: '𝕆',\n  OpenCurlyDoubleQuote: '“',\n  OpenCurlyQuote: '‘',\n  Or: '⩔',\n  Oscr: '𝒪',\n  Oslash: 'Ø',\n  Otilde: 'Õ',\n  Otimes: '⨷',\n  Ouml: 'Ö',\n  OverBar: '‾',\n  OverBrace: '⏞',\n  OverBracket: '⎴',\n  OverParenthesis: '⏜',\n  PartialD: '∂',\n  Pcy: 'П',\n  Pfr: '𝔓',\n  Phi: 'Φ',\n  Pi: 'Π',\n  PlusMinus: '±',\n  Poincareplane: 'ℌ',\n  Popf: 'ℙ',\n  Pr: '⪻',\n  Precedes: '≺',\n  PrecedesEqual: '⪯',\n  PrecedesSlantEqual: '≼',\n  PrecedesTilde: '≾',\n  Prime: '″',\n  Product: '∏',\n  Proportion: '∷',\n  Proportional: '∝',\n  Pscr: '𝒫',\n  Psi: 'Ψ',\n  QUOT: '\"',\n  Qfr: '𝔔',\n  Qopf: 'ℚ',\n  Qscr: '𝒬',\n  RBarr: '⤐',\n  REG: '®',\n  Racute: 'Ŕ',\n  Rang: '⟫',\n  Rarr: '↠',\n  Rarrtl: '⤖',\n  Rcaron: 'Ř',\n  Rcedil: 'Ŗ',\n  Rcy: 'Р',\n  Re: 'ℜ',\n  ReverseElement: '∋',\n  ReverseEquilibrium: '⇋',\n  ReverseUpEquilibrium: '⥯',\n  Rfr: 'ℜ',\n  Rho: 'Ρ',\n  RightAngleBracket: '⟩',\n  RightArrow: '→',\n  RightArrowBar: '⇥',\n  RightArrowLeftArrow: '⇄',\n  RightCeiling: '⌉',\n  RightDoubleBracket: '⟧',\n  RightDownTeeVector: '⥝',\n  RightDownVector: '⇂',\n  RightDownVectorBar: '⥕',\n  RightFloor: '⌋',\n  RightTee: '⊢',\n  RightTeeArrow: '↦',\n  RightTeeVector: '⥛',\n  RightTriangle: '⊳',\n  RightTriangleBar: '⧐',\n  RightTriangleEqual: '⊵',\n  RightUpDownVector: '⥏',\n  RightUpTeeVector: '⥜',\n  RightUpVector: '↾',\n  RightUpVectorBar: '⥔',\n  RightVector: '⇀',\n  RightVectorBar: '⥓',\n  Rightarrow: '⇒',\n  Ropf: 'ℝ',\n  RoundImplies: '⥰',\n  Rrightarrow: '⇛',\n  Rscr: 'ℛ',\n  Rsh: '↱',\n  RuleDelayed: '⧴',\n  SHCHcy: 'Щ',\n  SHcy: 'Ш',\n  SOFTcy: 'Ь',\n  Sacute: 'Ś',\n  Sc: '⪼',\n  Scaron: 'Š',\n  Scedil: 'Ş',\n  Scirc: 'Ŝ',\n  Scy: 'С',\n  Sfr: '𝔖',\n  ShortDownArrow: '↓',\n  ShortLeftArrow: '←',\n  ShortRightArrow: '→',\n  ShortUpArrow: '↑',\n  Sigma: 'Σ',\n  SmallCircle: '∘',\n  Sopf: '𝕊',\n  Sqrt: '√',\n  Square: '□',\n  SquareIntersection: '⊓',\n  SquareSubset: '⊏',\n  SquareSubsetEqual: '⊑',\n  SquareSuperset: '⊐',\n  SquareSupersetEqual: '⊒',\n  SquareUnion: '⊔',\n  Sscr: '𝒮',\n  Star: '⋆',\n  Sub: '⋐',\n  Subset: '⋐',\n  SubsetEqual: '⊆',\n  Succeeds: '≻',\n  SucceedsEqual: '⪰',\n  SucceedsSlantEqual: '≽',\n  SucceedsTilde: '≿',\n  SuchThat: '∋',\n  Sum: '∑',\n  Sup: '⋑',\n  Superset: '⊃',\n  SupersetEqual: '⊇',\n  Supset: '⋑',\n  THORN: 'Þ',\n  TRADE: '™',\n  TSHcy: 'Ћ',\n  TScy: 'Ц',\n  Tab: '\\t',\n  Tau: 'Τ',\n  Tcaron: 'Ť',\n  Tcedil: 'Ţ',\n  Tcy: 'Т',\n  Tfr: '𝔗',\n  Therefore: '∴',\n  Theta: 'Θ',\n  ThickSpace: '  ',\n  ThinSpace: ' ',\n  Tilde: '∼',\n  TildeEqual: '≃',\n  TildeFullEqual: '≅',\n  TildeTilde: '≈',\n  Topf: '𝕋',\n  TripleDot: '⃛',\n  Tscr: '𝒯',\n  Tstrok: 'Ŧ',\n  Uacute: 'Ú',\n  Uarr: '↟',\n  Uarrocir: '⥉',\n  Ubrcy: 'Ў',\n  Ubreve: 'Ŭ',\n  Ucirc: 'Û',\n  Ucy: 'У',\n  Udblac: 'Ű',\n  Ufr: '𝔘',\n  Ugrave: 'Ù',\n  Umacr: 'Ū',\n  UnderBar: '_',\n  UnderBrace: '⏟',\n  UnderBracket: '⎵',\n  UnderParenthesis: '⏝',\n  Union: '⋃',\n  UnionPlus: '⊎',\n  Uogon: 'Ų',\n  Uopf: '𝕌',\n  UpArrow: '↑',\n  UpArrowBar: '⤒',\n  UpArrowDownArrow: '⇅',\n  UpDownArrow: '↕',\n  UpEquilibrium: '⥮',\n  UpTee: '⊥',\n  UpTeeArrow: '↥',\n  Uparrow: '⇑',\n  Updownarrow: '⇕',\n  UpperLeftArrow: '↖',\n  UpperRightArrow: '↗',\n  Upsi: 'ϒ',\n  Upsilon: 'Υ',\n  Uring: 'Ů',\n  Uscr: '𝒰',\n  Utilde: 'Ũ',\n  Uuml: 'Ü',\n  VDash: '⊫',\n  Vbar: '⫫',\n  Vcy: 'В',\n  Vdash: '⊩',\n  Vdashl: '⫦',\n  Vee: '⋁',\n  Verbar: '‖',\n  Vert: '‖',\n  VerticalBar: '∣',\n  VerticalLine: '|',\n  VerticalSeparator: '❘',\n  VerticalTilde: '≀',\n  VeryThinSpace: ' ',\n  Vfr: '𝔙',\n  Vopf: '𝕍',\n  Vscr: '𝒱',\n  Vvdash: '⊪',\n  Wcirc: 'Ŵ',\n  Wedge: '⋀',\n  Wfr: '𝔚',\n  Wopf: '𝕎',\n  Wscr: '𝒲',\n  Xfr: '𝔛',\n  Xi: 'Ξ',\n  Xopf: '𝕏',\n  Xscr: '𝒳',\n  YAcy: 'Я',\n  YIcy: 'Ї',\n  YUcy: 'Ю',\n  Yacute: 'Ý',\n  Ycirc: 'Ŷ',\n  Ycy: 'Ы',\n  Yfr: '𝔜',\n  Yopf: '𝕐',\n  Yscr: '𝒴',\n  Yuml: 'Ÿ',\n  ZHcy: 'Ж',\n  Zacute: 'Ź',\n  Zcaron: 'Ž',\n  Zcy: 'З',\n  Zdot: 'Ż',\n  ZeroWidthSpace: '​',\n  Zeta: 'Ζ',\n  Zfr: 'ℨ',\n  Zopf: 'ℤ',\n  Zscr: '𝒵',\n  aacute: 'á',\n  abreve: 'ă',\n  ac: '∾',\n  acE: '∾̳',\n  acd: '∿',\n  acirc: 'â',\n  acute: '´',\n  acy: 'а',\n  aelig: 'æ',\n  af: '⁡',\n  afr: '𝔞',\n  agrave: 'à',\n  alefsym: 'ℵ',\n  aleph: 'ℵ',\n  alpha: 'α',\n  amacr: 'ā',\n  amalg: '⨿',\n  amp: '&',\n  and: '∧',\n  andand: '⩕',\n  andd: '⩜',\n  andslope: '⩘',\n  andv: '⩚',\n  ang: '∠',\n  ange: '⦤',\n  angle: '∠',\n  angmsd: '∡',\n  angmsdaa: '⦨',\n  angmsdab: '⦩',\n  angmsdac: '⦪',\n  angmsdad: '⦫',\n  angmsdae: '⦬',\n  angmsdaf: '⦭',\n  angmsdag: '⦮',\n  angmsdah: '⦯',\n  angrt: '∟',\n  angrtvb: '⊾',\n  angrtvbd: '⦝',\n  angsph: '∢',\n  angst: 'Å',\n  angzarr: '⍼',\n  aogon: 'ą',\n  aopf: '𝕒',\n  ap: '≈',\n  apE: '⩰',\n  apacir: '⩯',\n  ape: '≊',\n  apid: '≋',\n  apos: \"'\",\n  approx: '≈',\n  approxeq: '≊',\n  aring: 'å',\n  ascr: '𝒶',\n  ast: '*',\n  asymp: '≈',\n  asympeq: '≍',\n  atilde: 'ã',\n  auml: 'ä',\n  awconint: '∳',\n  awint: '⨑',\n  bNot: '⫭',\n  backcong: '≌',\n  backepsilon: '϶',\n  backprime: '‵',\n  backsim: '∽',\n  backsimeq: '⋍',\n  barvee: '⊽',\n  barwed: '⌅',\n  barwedge: '⌅',\n  bbrk: '⎵',\n  bbrktbrk: '⎶',\n  bcong: '≌',\n  bcy: 'б',\n  bdquo: '„',\n  becaus: '∵',\n  because: '∵',\n  bemptyv: '⦰',\n  bepsi: '϶',\n  bernou: 'ℬ',\n  beta: 'β',\n  beth: 'ℶ',\n  between: '≬',\n  bfr: '𝔟',\n  bigcap: '⋂',\n  bigcirc: '◯',\n  bigcup: '⋃',\n  bigodot: '⨀',\n  bigoplus: '⨁',\n  bigotimes: '⨂',\n  bigsqcup: '⨆',\n  bigstar: '★',\n  bigtriangledown: '▽',\n  bigtriangleup: '△',\n  biguplus: '⨄',\n  bigvee: '⋁',\n  bigwedge: '⋀',\n  bkarow: '⤍',\n  blacklozenge: '⧫',\n  blacksquare: '▪',\n  blacktriangle: '▴',\n  blacktriangledown: '▾',\n  blacktriangleleft: '◂',\n  blacktriangleright: '▸',\n  blank: '␣',\n  blk12: '▒',\n  blk14: '░',\n  blk34: '▓',\n  block: '█',\n  bne: '=⃥',\n  bnequiv: '≡⃥',\n  bnot: '⌐',\n  bopf: '𝕓',\n  bot: '⊥',\n  bottom: '⊥',\n  bowtie: '⋈',\n  boxDL: '╗',\n  boxDR: '╔',\n  boxDl: '╖',\n  boxDr: '╓',\n  boxH: '═',\n  boxHD: '╦',\n  boxHU: '╩',\n  boxHd: '╤',\n  boxHu: '╧',\n  boxUL: '╝',\n  boxUR: '╚',\n  boxUl: '╜',\n  boxUr: '╙',\n  boxV: '║',\n  boxVH: '╬',\n  boxVL: '╣',\n  boxVR: '╠',\n  boxVh: '╫',\n  boxVl: '╢',\n  boxVr: '╟',\n  boxbox: '⧉',\n  boxdL: '╕',\n  boxdR: '╒',\n  boxdl: '┐',\n  boxdr: '┌',\n  boxh: '─',\n  boxhD: '╥',\n  boxhU: '╨',\n  boxhd: '┬',\n  boxhu: '┴',\n  boxminus: '⊟',\n  boxplus: '⊞',\n  boxtimes: '⊠',\n  boxuL: '╛',\n  boxuR: '╘',\n  boxul: '┘',\n  boxur: '└',\n  boxv: '│',\n  boxvH: '╪',\n  boxvL: '╡',\n  boxvR: '╞',\n  boxvh: '┼',\n  boxvl: '┤',\n  boxvr: '├',\n  bprime: '‵',\n  breve: '˘',\n  brvbar: '¦',\n  bscr: '𝒷',\n  bsemi: '⁏',\n  bsim: '∽',\n  bsime: '⋍',\n  bsol: '\\\\',\n  bsolb: '⧅',\n  bsolhsub: '⟈',\n  bull: '•',\n  bullet: '•',\n  bump: '≎',\n  bumpE: '⪮',\n  bumpe: '≏',\n  bumpeq: '≏',\n  cacute: 'ć',\n  cap: '∩',\n  capand: '⩄',\n  capbrcup: '⩉',\n  capcap: '⩋',\n  capcup: '⩇',\n  capdot: '⩀',\n  caps: '∩︀',\n  caret: '⁁',\n  caron: 'ˇ',\n  ccaps: '⩍',\n  ccaron: 'č',\n  ccedil: 'ç',\n  ccirc: 'ĉ',\n  ccups: '⩌',\n  ccupssm: '⩐',\n  cdot: 'ċ',\n  cedil: '¸',\n  cemptyv: '⦲',\n  cent: '¢',\n  centerdot: '·',\n  cfr: '𝔠',\n  chcy: 'ч',\n  check: '✓',\n  checkmark: '✓',\n  chi: 'χ',\n  cir: '○',\n  cirE: '⧃',\n  circ: 'ˆ',\n  circeq: '≗',\n  circlearrowleft: '↺',\n  circlearrowright: '↻',\n  circledR: '®',\n  circledS: 'Ⓢ',\n  circledast: '⊛',\n  circledcirc: '⊚',\n  circleddash: '⊝',\n  cire: '≗',\n  cirfnint: '⨐',\n  cirmid: '⫯',\n  cirscir: '⧂',\n  clubs: '♣',\n  clubsuit: '♣',\n  colon: ':',\n  colone: '≔',\n  coloneq: '≔',\n  comma: ',',\n  commat: '@',\n  comp: '∁',\n  compfn: '∘',\n  complement: '∁',\n  complexes: 'ℂ',\n  cong: '≅',\n  congdot: '⩭',\n  conint: '∮',\n  copf: '𝕔',\n  coprod: '∐',\n  copy: '©',\n  copysr: '℗',\n  crarr: '↵',\n  cross: '✗',\n  cscr: '𝒸',\n  csub: '⫏',\n  csube: '⫑',\n  csup: '⫐',\n  csupe: '⫒',\n  ctdot: '⋯',\n  cudarrl: '⤸',\n  cudarrr: '⤵',\n  cuepr: '⋞',\n  cuesc: '⋟',\n  cularr: '↶',\n  cularrp: '⤽',\n  cup: '∪',\n  cupbrcap: '⩈',\n  cupcap: '⩆',\n  cupcup: '⩊',\n  cupdot: '⊍',\n  cupor: '⩅',\n  cups: '∪︀',\n  curarr: '↷',\n  curarrm: '⤼',\n  curlyeqprec: '⋞',\n  curlyeqsucc: '⋟',\n  curlyvee: '⋎',\n  curlywedge: '⋏',\n  curren: '¤',\n  curvearrowleft: '↶',\n  curvearrowright: '↷',\n  cuvee: '⋎',\n  cuwed: '⋏',\n  cwconint: '∲',\n  cwint: '∱',\n  cylcty: '⌭',\n  dArr: '⇓',\n  dHar: '⥥',\n  dagger: '†',\n  daleth: 'ℸ',\n  darr: '↓',\n  dash: '‐',\n  dashv: '⊣',\n  dbkarow: '⤏',\n  dblac: '˝',\n  dcaron: 'ď',\n  dcy: 'д',\n  dd: 'ⅆ',\n  ddagger: '‡',\n  ddarr: '⇊',\n  ddotseq: '⩷',\n  deg: '°',\n  delta: 'δ',\n  demptyv: '⦱',\n  dfisht: '⥿',\n  dfr: '𝔡',\n  dharl: '⇃',\n  dharr: '⇂',\n  diam: '⋄',\n  diamond: '⋄',\n  diamondsuit: '♦',\n  diams: '♦',\n  die: '¨',\n  digamma: 'ϝ',\n  disin: '⋲',\n  div: '÷',\n  divide: '÷',\n  divideontimes: '⋇',\n  divonx: '⋇',\n  djcy: 'ђ',\n  dlcorn: '⌞',\n  dlcrop: '⌍',\n  dollar: '$',\n  dopf: '𝕕',\n  dot: '˙',\n  doteq: '≐',\n  doteqdot: '≑',\n  dotminus: '∸',\n  dotplus: '∔',\n  dotsquare: '⊡',\n  doublebarwedge: '⌆',\n  downarrow: '↓',\n  downdownarrows: '⇊',\n  downharpoonleft: '⇃',\n  downharpoonright: '⇂',\n  drbkarow: '⤐',\n  drcorn: '⌟',\n  drcrop: '⌌',\n  dscr: '𝒹',\n  dscy: 'ѕ',\n  dsol: '⧶',\n  dstrok: 'đ',\n  dtdot: '⋱',\n  dtri: '▿',\n  dtrif: '▾',\n  duarr: '⇵',\n  duhar: '⥯',\n  dwangle: '⦦',\n  dzcy: 'џ',\n  dzigrarr: '⟿',\n  eDDot: '⩷',\n  eDot: '≑',\n  eacute: 'é',\n  easter: '⩮',\n  ecaron: 'ě',\n  ecir: '≖',\n  ecirc: 'ê',\n  ecolon: '≕',\n  ecy: 'э',\n  edot: 'ė',\n  ee: 'ⅇ',\n  efDot: '≒',\n  efr: '𝔢',\n  eg: '⪚',\n  egrave: 'è',\n  egs: '⪖',\n  egsdot: '⪘',\n  el: '⪙',\n  elinters: '⏧',\n  ell: 'ℓ',\n  els: '⪕',\n  elsdot: '⪗',\n  emacr: 'ē',\n  empty: '∅',\n  emptyset: '∅',\n  emptyv: '∅',\n  emsp13: ' ',\n  emsp14: ' ',\n  emsp: ' ',\n  eng: 'ŋ',\n  ensp: ' ',\n  eogon: 'ę',\n  eopf: '𝕖',\n  epar: '⋕',\n  eparsl: '⧣',\n  eplus: '⩱',\n  epsi: 'ε',\n  epsilon: 'ε',\n  epsiv: 'ϵ',\n  eqcirc: '≖',\n  eqcolon: '≕',\n  eqsim: '≂',\n  eqslantgtr: '⪖',\n  eqslantless: '⪕',\n  equals: '=',\n  equest: '≟',\n  equiv: '≡',\n  equivDD: '⩸',\n  eqvparsl: '⧥',\n  erDot: '≓',\n  erarr: '⥱',\n  escr: 'ℯ',\n  esdot: '≐',\n  esim: '≂',\n  eta: 'η',\n  eth: 'ð',\n  euml: 'ë',\n  euro: '€',\n  excl: '!',\n  exist: '∃',\n  expectation: 'ℰ',\n  exponentiale: 'ⅇ',\n  fallingdotseq: '≒',\n  fcy: 'ф',\n  female: '♀',\n  ffilig: 'ﬃ',\n  fflig: 'ﬀ',\n  ffllig: 'ﬄ',\n  ffr: '𝔣',\n  filig: 'ﬁ',\n  fjlig: 'fj',\n  flat: '♭',\n  fllig: 'ﬂ',\n  fltns: '▱',\n  fnof: 'ƒ',\n  fopf: '𝕗',\n  forall: '∀',\n  fork: '⋔',\n  forkv: '⫙',\n  fpartint: '⨍',\n  frac12: '½',\n  frac13: '⅓',\n  frac14: '¼',\n  frac15: '⅕',\n  frac16: '⅙',\n  frac18: '⅛',\n  frac23: '⅔',\n  frac25: '⅖',\n  frac34: '¾',\n  frac35: '⅗',\n  frac38: '⅜',\n  frac45: '⅘',\n  frac56: '⅚',\n  frac58: '⅝',\n  frac78: '⅞',\n  frasl: '⁄',\n  frown: '⌢',\n  fscr: '𝒻',\n  gE: '≧',\n  gEl: '⪌',\n  gacute: 'ǵ',\n  gamma: 'γ',\n  gammad: 'ϝ',\n  gap: '⪆',\n  gbreve: 'ğ',\n  gcirc: 'ĝ',\n  gcy: 'г',\n  gdot: 'ġ',\n  ge: '≥',\n  gel: '⋛',\n  geq: '≥',\n  geqq: '≧',\n  geqslant: '⩾',\n  ges: '⩾',\n  gescc: '⪩',\n  gesdot: '⪀',\n  gesdoto: '⪂',\n  gesdotol: '⪄',\n  gesl: '⋛︀',\n  gesles: '⪔',\n  gfr: '𝔤',\n  gg: '≫',\n  ggg: '⋙',\n  gimel: 'ℷ',\n  gjcy: 'ѓ',\n  gl: '≷',\n  glE: '⪒',\n  gla: '⪥',\n  glj: '⪤',\n  gnE: '≩',\n  gnap: '⪊',\n  gnapprox: '⪊',\n  gne: '⪈',\n  gneq: '⪈',\n  gneqq: '≩',\n  gnsim: '⋧',\n  gopf: '𝕘',\n  grave: '`',\n  gscr: 'ℊ',\n  gsim: '≳',\n  gsime: '⪎',\n  gsiml: '⪐',\n  gt: '>',\n  gtcc: '⪧',\n  gtcir: '⩺',\n  gtdot: '⋗',\n  gtlPar: '⦕',\n  gtquest: '⩼',\n  gtrapprox: '⪆',\n  gtrarr: '⥸',\n  gtrdot: '⋗',\n  gtreqless: '⋛',\n  gtreqqless: '⪌',\n  gtrless: '≷',\n  gtrsim: '≳',\n  gvertneqq: '≩︀',\n  gvnE: '≩︀',\n  hArr: '⇔',\n  hairsp: ' ',\n  half: '½',\n  hamilt: 'ℋ',\n  hardcy: 'ъ',\n  harr: '↔',\n  harrcir: '⥈',\n  harrw: '↭',\n  hbar: 'ℏ',\n  hcirc: 'ĥ',\n  hearts: '♥',\n  heartsuit: '♥',\n  hellip: '…',\n  hercon: '⊹',\n  hfr: '𝔥',\n  hksearow: '⤥',\n  hkswarow: '⤦',\n  hoarr: '⇿',\n  homtht: '∻',\n  hookleftarrow: '↩',\n  hookrightarrow: '↪',\n  hopf: '𝕙',\n  horbar: '―',\n  hscr: '𝒽',\n  hslash: 'ℏ',\n  hstrok: 'ħ',\n  hybull: '⁃',\n  hyphen: '‐',\n  iacute: 'í',\n  ic: '⁣',\n  icirc: 'î',\n  icy: 'и',\n  iecy: 'е',\n  iexcl: '¡',\n  iff: '⇔',\n  ifr: '𝔦',\n  igrave: 'ì',\n  ii: 'ⅈ',\n  iiiint: '⨌',\n  iiint: '∭',\n  iinfin: '⧜',\n  iiota: '℩',\n  ijlig: 'ĳ',\n  imacr: 'ī',\n  image: 'ℑ',\n  imagline: 'ℐ',\n  imagpart: 'ℑ',\n  imath: 'ı',\n  imof: '⊷',\n  imped: 'Ƶ',\n  in: '∈',\n  incare: '℅',\n  infin: '∞',\n  infintie: '⧝',\n  inodot: 'ı',\n  int: '∫',\n  intcal: '⊺',\n  integers: 'ℤ',\n  intercal: '⊺',\n  intlarhk: '⨗',\n  intprod: '⨼',\n  iocy: 'ё',\n  iogon: 'į',\n  iopf: '𝕚',\n  iota: 'ι',\n  iprod: '⨼',\n  iquest: '¿',\n  iscr: '𝒾',\n  isin: '∈',\n  isinE: '⋹',\n  isindot: '⋵',\n  isins: '⋴',\n  isinsv: '⋳',\n  isinv: '∈',\n  it: '⁢',\n  itilde: 'ĩ',\n  iukcy: 'і',\n  iuml: 'ï',\n  jcirc: 'ĵ',\n  jcy: 'й',\n  jfr: '𝔧',\n  jmath: 'ȷ',\n  jopf: '𝕛',\n  jscr: '𝒿',\n  jsercy: 'ј',\n  jukcy: 'є',\n  kappa: 'κ',\n  kappav: 'ϰ',\n  kcedil: 'ķ',\n  kcy: 'к',\n  kfr: '𝔨',\n  kgreen: 'ĸ',\n  khcy: 'х',\n  kjcy: 'ќ',\n  kopf: '𝕜',\n  kscr: '𝓀',\n  lAarr: '⇚',\n  lArr: '⇐',\n  lAtail: '⤛',\n  lBarr: '⤎',\n  lE: '≦',\n  lEg: '⪋',\n  lHar: '⥢',\n  lacute: 'ĺ',\n  laemptyv: '⦴',\n  lagran: 'ℒ',\n  lambda: 'λ',\n  lang: '⟨',\n  langd: '⦑',\n  langle: '⟨',\n  lap: '⪅',\n  laquo: '«',\n  larr: '←',\n  larrb: '⇤',\n  larrbfs: '⤟',\n  larrfs: '⤝',\n  larrhk: '↩',\n  larrlp: '↫',\n  larrpl: '⤹',\n  larrsim: '⥳',\n  larrtl: '↢',\n  lat: '⪫',\n  latail: '⤙',\n  late: '⪭',\n  lates: '⪭︀',\n  lbarr: '⤌',\n  lbbrk: '❲',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '⦋',\n  lbrksld: '⦏',\n  lbrkslu: '⦍',\n  lcaron: 'ľ',\n  lcedil: 'ļ',\n  lceil: '⌈',\n  lcub: '{',\n  lcy: 'л',\n  ldca: '⤶',\n  ldquo: '“',\n  ldquor: '„',\n  ldrdhar: '⥧',\n  ldrushar: '⥋',\n  ldsh: '↲',\n  le: '≤',\n  leftarrow: '←',\n  leftarrowtail: '↢',\n  leftharpoondown: '↽',\n  leftharpoonup: '↼',\n  leftleftarrows: '⇇',\n  leftrightarrow: '↔',\n  leftrightarrows: '⇆',\n  leftrightharpoons: '⇋',\n  leftrightsquigarrow: '↭',\n  leftthreetimes: '⋋',\n  leg: '⋚',\n  leq: '≤',\n  leqq: '≦',\n  leqslant: '⩽',\n  les: '⩽',\n  lescc: '⪨',\n  lesdot: '⩿',\n  lesdoto: '⪁',\n  lesdotor: '⪃',\n  lesg: '⋚︀',\n  lesges: '⪓',\n  lessapprox: '⪅',\n  lessdot: '⋖',\n  lesseqgtr: '⋚',\n  lesseqqgtr: '⪋',\n  lessgtr: '≶',\n  lesssim: '≲',\n  lfisht: '⥼',\n  lfloor: '⌊',\n  lfr: '𝔩',\n  lg: '≶',\n  lgE: '⪑',\n  lhard: '↽',\n  lharu: '↼',\n  lharul: '⥪',\n  lhblk: '▄',\n  ljcy: 'љ',\n  ll: '≪',\n  llarr: '⇇',\n  llcorner: '⌞',\n  llhard: '⥫',\n  lltri: '◺',\n  lmidot: 'ŀ',\n  lmoust: '⎰',\n  lmoustache: '⎰',\n  lnE: '≨',\n  lnap: '⪉',\n  lnapprox: '⪉',\n  lne: '⪇',\n  lneq: '⪇',\n  lneqq: '≨',\n  lnsim: '⋦',\n  loang: '⟬',\n  loarr: '⇽',\n  lobrk: '⟦',\n  longleftarrow: '⟵',\n  longleftrightarrow: '⟷',\n  longmapsto: '⟼',\n  longrightarrow: '⟶',\n  looparrowleft: '↫',\n  looparrowright: '↬',\n  lopar: '⦅',\n  lopf: '𝕝',\n  loplus: '⨭',\n  lotimes: '⨴',\n  lowast: '∗',\n  lowbar: '_',\n  loz: '◊',\n  lozenge: '◊',\n  lozf: '⧫',\n  lpar: '(',\n  lparlt: '⦓',\n  lrarr: '⇆',\n  lrcorner: '⌟',\n  lrhar: '⇋',\n  lrhard: '⥭',\n  lrm: '‎',\n  lrtri: '⊿',\n  lsaquo: '‹',\n  lscr: '𝓁',\n  lsh: '↰',\n  lsim: '≲',\n  lsime: '⪍',\n  lsimg: '⪏',\n  lsqb: '[',\n  lsquo: '‘',\n  lsquor: '‚',\n  lstrok: 'ł',\n  lt: '<',\n  ltcc: '⪦',\n  ltcir: '⩹',\n  ltdot: '⋖',\n  lthree: '⋋',\n  ltimes: '⋉',\n  ltlarr: '⥶',\n  ltquest: '⩻',\n  ltrPar: '⦖',\n  ltri: '◃',\n  ltrie: '⊴',\n  ltrif: '◂',\n  lurdshar: '⥊',\n  luruhar: '⥦',\n  lvertneqq: '≨︀',\n  lvnE: '≨︀',\n  mDDot: '∺',\n  macr: '¯',\n  male: '♂',\n  malt: '✠',\n  maltese: '✠',\n  map: '↦',\n  mapsto: '↦',\n  mapstodown: '↧',\n  mapstoleft: '↤',\n  mapstoup: '↥',\n  marker: '▮',\n  mcomma: '⨩',\n  mcy: 'м',\n  mdash: '—',\n  measuredangle: '∡',\n  mfr: '𝔪',\n  mho: '℧',\n  micro: 'µ',\n  mid: '∣',\n  midast: '*',\n  midcir: '⫰',\n  middot: '·',\n  minus: '−',\n  minusb: '⊟',\n  minusd: '∸',\n  minusdu: '⨪',\n  mlcp: '⫛',\n  mldr: '…',\n  mnplus: '∓',\n  models: '⊧',\n  mopf: '𝕞',\n  mp: '∓',\n  mscr: '𝓂',\n  mstpos: '∾',\n  mu: 'μ',\n  multimap: '⊸',\n  mumap: '⊸',\n  nGg: '⋙̸',\n  nGt: '≫⃒',\n  nGtv: '≫̸',\n  nLeftarrow: '⇍',\n  nLeftrightarrow: '⇎',\n  nLl: '⋘̸',\n  nLt: '≪⃒',\n  nLtv: '≪̸',\n  nRightarrow: '⇏',\n  nVDash: '⊯',\n  nVdash: '⊮',\n  nabla: '∇',\n  nacute: 'ń',\n  nang: '∠⃒',\n  nap: '≉',\n  napE: '⩰̸',\n  napid: '≋̸',\n  napos: 'ŉ',\n  napprox: '≉',\n  natur: '♮',\n  natural: '♮',\n  naturals: 'ℕ',\n  nbsp: ' ',\n  nbump: '≎̸',\n  nbumpe: '≏̸',\n  ncap: '⩃',\n  ncaron: 'ň',\n  ncedil: 'ņ',\n  ncong: '≇',\n  ncongdot: '⩭̸',\n  ncup: '⩂',\n  ncy: 'н',\n  ndash: '–',\n  ne: '≠',\n  neArr: '⇗',\n  nearhk: '⤤',\n  nearr: '↗',\n  nearrow: '↗',\n  nedot: '≐̸',\n  nequiv: '≢',\n  nesear: '⤨',\n  nesim: '≂̸',\n  nexist: '∄',\n  nexists: '∄',\n  nfr: '𝔫',\n  ngE: '≧̸',\n  nge: '≱',\n  ngeq: '≱',\n  ngeqq: '≧̸',\n  ngeqslant: '⩾̸',\n  nges: '⩾̸',\n  ngsim: '≵',\n  ngt: '≯',\n  ngtr: '≯',\n  nhArr: '⇎',\n  nharr: '↮',\n  nhpar: '⫲',\n  ni: '∋',\n  nis: '⋼',\n  nisd: '⋺',\n  niv: '∋',\n  njcy: 'њ',\n  nlArr: '⇍',\n  nlE: '≦̸',\n  nlarr: '↚',\n  nldr: '‥',\n  nle: '≰',\n  nleftarrow: '↚',\n  nleftrightarrow: '↮',\n  nleq: '≰',\n  nleqq: '≦̸',\n  nleqslant: '⩽̸',\n  nles: '⩽̸',\n  nless: '≮',\n  nlsim: '≴',\n  nlt: '≮',\n  nltri: '⋪',\n  nltrie: '⋬',\n  nmid: '∤',\n  nopf: '𝕟',\n  not: '¬',\n  notin: '∉',\n  notinE: '⋹̸',\n  notindot: '⋵̸',\n  notinva: '∉',\n  notinvb: '⋷',\n  notinvc: '⋶',\n  notni: '∌',\n  notniva: '∌',\n  notnivb: '⋾',\n  notnivc: '⋽',\n  npar: '∦',\n  nparallel: '∦',\n  nparsl: '⫽⃥',\n  npart: '∂̸',\n  npolint: '⨔',\n  npr: '⊀',\n  nprcue: '⋠',\n  npre: '⪯̸',\n  nprec: '⊀',\n  npreceq: '⪯̸',\n  nrArr: '⇏',\n  nrarr: '↛',\n  nrarrc: '⤳̸',\n  nrarrw: '↝̸',\n  nrightarrow: '↛',\n  nrtri: '⋫',\n  nrtrie: '⋭',\n  nsc: '⊁',\n  nsccue: '⋡',\n  nsce: '⪰̸',\n  nscr: '𝓃',\n  nshortmid: '∤',\n  nshortparallel: '∦',\n  nsim: '≁',\n  nsime: '≄',\n  nsimeq: '≄',\n  nsmid: '∤',\n  nspar: '∦',\n  nsqsube: '⋢',\n  nsqsupe: '⋣',\n  nsub: '⊄',\n  nsubE: '⫅̸',\n  nsube: '⊈',\n  nsubset: '⊂⃒',\n  nsubseteq: '⊈',\n  nsubseteqq: '⫅̸',\n  nsucc: '⊁',\n  nsucceq: '⪰̸',\n  nsup: '⊅',\n  nsupE: '⫆̸',\n  nsupe: '⊉',\n  nsupset: '⊃⃒',\n  nsupseteq: '⊉',\n  nsupseteqq: '⫆̸',\n  ntgl: '≹',\n  ntilde: 'ñ',\n  ntlg: '≸',\n  ntriangleleft: '⋪',\n  ntrianglelefteq: '⋬',\n  ntriangleright: '⋫',\n  ntrianglerighteq: '⋭',\n  nu: 'ν',\n  num: '#',\n  numero: '№',\n  numsp: ' ',\n  nvDash: '⊭',\n  nvHarr: '⤄',\n  nvap: '≍⃒',\n  nvdash: '⊬',\n  nvge: '≥⃒',\n  nvgt: '>⃒',\n  nvinfin: '⧞',\n  nvlArr: '⤂',\n  nvle: '≤⃒',\n  nvlt: '<⃒',\n  nvltrie: '⊴⃒',\n  nvrArr: '⤃',\n  nvrtrie: '⊵⃒',\n  nvsim: '∼⃒',\n  nwArr: '⇖',\n  nwarhk: '⤣',\n  nwarr: '↖',\n  nwarrow: '↖',\n  nwnear: '⤧',\n  oS: 'Ⓢ',\n  oacute: 'ó',\n  oast: '⊛',\n  ocir: '⊚',\n  ocirc: 'ô',\n  ocy: 'о',\n  odash: '⊝',\n  odblac: 'ő',\n  odiv: '⨸',\n  odot: '⊙',\n  odsold: '⦼',\n  oelig: 'œ',\n  ofcir: '⦿',\n  ofr: '𝔬',\n  ogon: '˛',\n  ograve: 'ò',\n  ogt: '⧁',\n  ohbar: '⦵',\n  ohm: 'Ω',\n  oint: '∮',\n  olarr: '↺',\n  olcir: '⦾',\n  olcross: '⦻',\n  oline: '‾',\n  olt: '⧀',\n  omacr: 'ō',\n  omega: 'ω',\n  omicron: 'ο',\n  omid: '⦶',\n  ominus: '⊖',\n  oopf: '𝕠',\n  opar: '⦷',\n  operp: '⦹',\n  oplus: '⊕',\n  or: '∨',\n  orarr: '↻',\n  ord: '⩝',\n  order: 'ℴ',\n  orderof: 'ℴ',\n  ordf: 'ª',\n  ordm: 'º',\n  origof: '⊶',\n  oror: '⩖',\n  orslope: '⩗',\n  orv: '⩛',\n  oscr: 'ℴ',\n  oslash: 'ø',\n  osol: '⊘',\n  otilde: 'õ',\n  otimes: '⊗',\n  otimesas: '⨶',\n  ouml: 'ö',\n  ovbar: '⌽',\n  par: '∥',\n  para: '¶',\n  parallel: '∥',\n  parsim: '⫳',\n  parsl: '⫽',\n  part: '∂',\n  pcy: 'п',\n  percnt: '%',\n  period: '.',\n  permil: '‰',\n  perp: '⊥',\n  pertenk: '‱',\n  pfr: '𝔭',\n  phi: 'φ',\n  phiv: 'ϕ',\n  phmmat: 'ℳ',\n  phone: '☎',\n  pi: 'π',\n  pitchfork: '⋔',\n  piv: 'ϖ',\n  planck: 'ℏ',\n  planckh: 'ℎ',\n  plankv: 'ℏ',\n  plus: '+',\n  plusacir: '⨣',\n  plusb: '⊞',\n  pluscir: '⨢',\n  plusdo: '∔',\n  plusdu: '⨥',\n  pluse: '⩲',\n  plusmn: '±',\n  plussim: '⨦',\n  plustwo: '⨧',\n  pm: '±',\n  pointint: '⨕',\n  popf: '𝕡',\n  pound: '£',\n  pr: '≺',\n  prE: '⪳',\n  prap: '⪷',\n  prcue: '≼',\n  pre: '⪯',\n  prec: '≺',\n  precapprox: '⪷',\n  preccurlyeq: '≼',\n  preceq: '⪯',\n  precnapprox: '⪹',\n  precneqq: '⪵',\n  precnsim: '⋨',\n  precsim: '≾',\n  prime: '′',\n  primes: 'ℙ',\n  prnE: '⪵',\n  prnap: '⪹',\n  prnsim: '⋨',\n  prod: '∏',\n  profalar: '⌮',\n  profline: '⌒',\n  profsurf: '⌓',\n  prop: '∝',\n  propto: '∝',\n  prsim: '≾',\n  prurel: '⊰',\n  pscr: '𝓅',\n  psi: 'ψ',\n  puncsp: ' ',\n  qfr: '𝔮',\n  qint: '⨌',\n  qopf: '𝕢',\n  qprime: '⁗',\n  qscr: '𝓆',\n  quaternions: 'ℍ',\n  quatint: '⨖',\n  quest: '?',\n  questeq: '≟',\n  quot: '\"',\n  rAarr: '⇛',\n  rArr: '⇒',\n  rAtail: '⤜',\n  rBarr: '⤏',\n  rHar: '⥤',\n  race: '∽̱',\n  racute: 'ŕ',\n  radic: '√',\n  raemptyv: '⦳',\n  rang: '⟩',\n  rangd: '⦒',\n  range: '⦥',\n  rangle: '⟩',\n  raquo: '»',\n  rarr: '→',\n  rarrap: '⥵',\n  rarrb: '⇥',\n  rarrbfs: '⤠',\n  rarrc: '⤳',\n  rarrfs: '⤞',\n  rarrhk: '↪',\n  rarrlp: '↬',\n  rarrpl: '⥅',\n  rarrsim: '⥴',\n  rarrtl: '↣',\n  rarrw: '↝',\n  ratail: '⤚',\n  ratio: '∶',\n  rationals: 'ℚ',\n  rbarr: '⤍',\n  rbbrk: '❳',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '⦌',\n  rbrksld: '⦎',\n  rbrkslu: '⦐',\n  rcaron: 'ř',\n  rcedil: 'ŗ',\n  rceil: '⌉',\n  rcub: '}',\n  rcy: 'р',\n  rdca: '⤷',\n  rdldhar: '⥩',\n  rdquo: '”',\n  rdquor: '”',\n  rdsh: '↳',\n  real: 'ℜ',\n  realine: 'ℛ',\n  realpart: 'ℜ',\n  reals: 'ℝ',\n  rect: '▭',\n  reg: '®',\n  rfisht: '⥽',\n  rfloor: '⌋',\n  rfr: '𝔯',\n  rhard: '⇁',\n  rharu: '⇀',\n  rharul: '⥬',\n  rho: 'ρ',\n  rhov: 'ϱ',\n  rightarrow: '→',\n  rightarrowtail: '↣',\n  rightharpoondown: '⇁',\n  rightharpoonup: '⇀',\n  rightleftarrows: '⇄',\n  rightleftharpoons: '⇌',\n  rightrightarrows: '⇉',\n  rightsquigarrow: '↝',\n  rightthreetimes: '⋌',\n  ring: '˚',\n  risingdotseq: '≓',\n  rlarr: '⇄',\n  rlhar: '⇌',\n  rlm: '‏',\n  rmoust: '⎱',\n  rmoustache: '⎱',\n  rnmid: '⫮',\n  roang: '⟭',\n  roarr: '⇾',\n  robrk: '⟧',\n  ropar: '⦆',\n  ropf: '𝕣',\n  roplus: '⨮',\n  rotimes: '⨵',\n  rpar: ')',\n  rpargt: '⦔',\n  rppolint: '⨒',\n  rrarr: '⇉',\n  rsaquo: '›',\n  rscr: '𝓇',\n  rsh: '↱',\n  rsqb: ']',\n  rsquo: '’',\n  rsquor: '’',\n  rthree: '⋌',\n  rtimes: '⋊',\n  rtri: '▹',\n  rtrie: '⊵',\n  rtrif: '▸',\n  rtriltri: '⧎',\n  ruluhar: '⥨',\n  rx: '℞',\n  sacute: 'ś',\n  sbquo: '‚',\n  sc: '≻',\n  scE: '⪴',\n  scap: '⪸',\n  scaron: 'š',\n  sccue: '≽',\n  sce: '⪰',\n  scedil: 'ş',\n  scirc: 'ŝ',\n  scnE: '⪶',\n  scnap: '⪺',\n  scnsim: '⋩',\n  scpolint: '⨓',\n  scsim: '≿',\n  scy: 'с',\n  sdot: '⋅',\n  sdotb: '⊡',\n  sdote: '⩦',\n  seArr: '⇘',\n  searhk: '⤥',\n  searr: '↘',\n  searrow: '↘',\n  sect: '§',\n  semi: ';',\n  seswar: '⤩',\n  setminus: '∖',\n  setmn: '∖',\n  sext: '✶',\n  sfr: '𝔰',\n  sfrown: '⌢',\n  sharp: '♯',\n  shchcy: 'щ',\n  shcy: 'ш',\n  shortmid: '∣',\n  shortparallel: '∥',\n  shy: '­',\n  sigma: 'σ',\n  sigmaf: 'ς',\n  sigmav: 'ς',\n  sim: '∼',\n  simdot: '⩪',\n  sime: '≃',\n  simeq: '≃',\n  simg: '⪞',\n  simgE: '⪠',\n  siml: '⪝',\n  simlE: '⪟',\n  simne: '≆',\n  simplus: '⨤',\n  simrarr: '⥲',\n  slarr: '←',\n  smallsetminus: '∖',\n  smashp: '⨳',\n  smeparsl: '⧤',\n  smid: '∣',\n  smile: '⌣',\n  smt: '⪪',\n  smte: '⪬',\n  smtes: '⪬︀',\n  softcy: 'ь',\n  sol: '/',\n  solb: '⧄',\n  solbar: '⌿',\n  sopf: '𝕤',\n  spades: '♠',\n  spadesuit: '♠',\n  spar: '∥',\n  sqcap: '⊓',\n  sqcaps: '⊓︀',\n  sqcup: '⊔',\n  sqcups: '⊔︀',\n  sqsub: '⊏',\n  sqsube: '⊑',\n  sqsubset: '⊏',\n  sqsubseteq: '⊑',\n  sqsup: '⊐',\n  sqsupe: '⊒',\n  sqsupset: '⊐',\n  sqsupseteq: '⊒',\n  squ: '□',\n  square: '□',\n  squarf: '▪',\n  squf: '▪',\n  srarr: '→',\n  sscr: '𝓈',\n  ssetmn: '∖',\n  ssmile: '⌣',\n  sstarf: '⋆',\n  star: '☆',\n  starf: '★',\n  straightepsilon: 'ϵ',\n  straightphi: 'ϕ',\n  strns: '¯',\n  sub: '⊂',\n  subE: '⫅',\n  subdot: '⪽',\n  sube: '⊆',\n  subedot: '⫃',\n  submult: '⫁',\n  subnE: '⫋',\n  subne: '⊊',\n  subplus: '⪿',\n  subrarr: '⥹',\n  subset: '⊂',\n  subseteq: '⊆',\n  subseteqq: '⫅',\n  subsetneq: '⊊',\n  subsetneqq: '⫋',\n  subsim: '⫇',\n  subsub: '⫕',\n  subsup: '⫓',\n  succ: '≻',\n  succapprox: '⪸',\n  succcurlyeq: '≽',\n  succeq: '⪰',\n  succnapprox: '⪺',\n  succneqq: '⪶',\n  succnsim: '⋩',\n  succsim: '≿',\n  sum: '∑',\n  sung: '♪',\n  sup1: '¹',\n  sup2: '²',\n  sup3: '³',\n  sup: '⊃',\n  supE: '⫆',\n  supdot: '⪾',\n  supdsub: '⫘',\n  supe: '⊇',\n  supedot: '⫄',\n  suphsol: '⟉',\n  suphsub: '⫗',\n  suplarr: '⥻',\n  supmult: '⫂',\n  supnE: '⫌',\n  supne: '⊋',\n  supplus: '⫀',\n  supset: '⊃',\n  supseteq: '⊇',\n  supseteqq: '⫆',\n  supsetneq: '⊋',\n  supsetneqq: '⫌',\n  supsim: '⫈',\n  supsub: '⫔',\n  supsup: '⫖',\n  swArr: '⇙',\n  swarhk: '⤦',\n  swarr: '↙',\n  swarrow: '↙',\n  swnwar: '⤪',\n  szlig: 'ß',\n  target: '⌖',\n  tau: 'τ',\n  tbrk: '⎴',\n  tcaron: 'ť',\n  tcedil: 'ţ',\n  tcy: 'т',\n  tdot: '⃛',\n  telrec: '⌕',\n  tfr: '𝔱',\n  there4: '∴',\n  therefore: '∴',\n  theta: 'θ',\n  thetasym: 'ϑ',\n  thetav: 'ϑ',\n  thickapprox: '≈',\n  thicksim: '∼',\n  thinsp: ' ',\n  thkap: '≈',\n  thksim: '∼',\n  thorn: 'þ',\n  tilde: '˜',\n  times: '×',\n  timesb: '⊠',\n  timesbar: '⨱',\n  timesd: '⨰',\n  tint: '∭',\n  toea: '⤨',\n  top: '⊤',\n  topbot: '⌶',\n  topcir: '⫱',\n  topf: '𝕥',\n  topfork: '⫚',\n  tosa: '⤩',\n  tprime: '‴',\n  trade: '™',\n  triangle: '▵',\n  triangledown: '▿',\n  triangleleft: '◃',\n  trianglelefteq: '⊴',\n  triangleq: '≜',\n  triangleright: '▹',\n  trianglerighteq: '⊵',\n  tridot: '◬',\n  trie: '≜',\n  triminus: '⨺',\n  triplus: '⨹',\n  trisb: '⧍',\n  tritime: '⨻',\n  trpezium: '⏢',\n  tscr: '𝓉',\n  tscy: 'ц',\n  tshcy: 'ћ',\n  tstrok: 'ŧ',\n  twixt: '≬',\n  twoheadleftarrow: '↞',\n  twoheadrightarrow: '↠',\n  uArr: '⇑',\n  uHar: '⥣',\n  uacute: 'ú',\n  uarr: '↑',\n  ubrcy: 'ў',\n  ubreve: 'ŭ',\n  ucirc: 'û',\n  ucy: 'у',\n  udarr: '⇅',\n  udblac: 'ű',\n  udhar: '⥮',\n  ufisht: '⥾',\n  ufr: '𝔲',\n  ugrave: 'ù',\n  uharl: '↿',\n  uharr: '↾',\n  uhblk: '▀',\n  ulcorn: '⌜',\n  ulcorner: '⌜',\n  ulcrop: '⌏',\n  ultri: '◸',\n  umacr: 'ū',\n  uml: '¨',\n  uogon: 'ų',\n  uopf: '𝕦',\n  uparrow: '↑',\n  updownarrow: '↕',\n  upharpoonleft: '↿',\n  upharpoonright: '↾',\n  uplus: '⊎',\n  upsi: 'υ',\n  upsih: 'ϒ',\n  upsilon: 'υ',\n  upuparrows: '⇈',\n  urcorn: '⌝',\n  urcorner: '⌝',\n  urcrop: '⌎',\n  uring: 'ů',\n  urtri: '◹',\n  uscr: '𝓊',\n  utdot: '⋰',\n  utilde: 'ũ',\n  utri: '▵',\n  utrif: '▴',\n  uuarr: '⇈',\n  uuml: 'ü',\n  uwangle: '⦧',\n  vArr: '⇕',\n  vBar: '⫨',\n  vBarv: '⫩',\n  vDash: '⊨',\n  vangrt: '⦜',\n  varepsilon: 'ϵ',\n  varkappa: 'ϰ',\n  varnothing: '∅',\n  varphi: 'ϕ',\n  varpi: 'ϖ',\n  varpropto: '∝',\n  varr: '↕',\n  varrho: 'ϱ',\n  varsigma: 'ς',\n  varsubsetneq: '⊊︀',\n  varsubsetneqq: '⫋︀',\n  varsupsetneq: '⊋︀',\n  varsupsetneqq: '⫌︀',\n  vartheta: 'ϑ',\n  vartriangleleft: '⊲',\n  vartriangleright: '⊳',\n  vcy: 'в',\n  vdash: '⊢',\n  vee: '∨',\n  veebar: '⊻',\n  veeeq: '≚',\n  vellip: '⋮',\n  verbar: '|',\n  vert: '|',\n  vfr: '𝔳',\n  vltri: '⊲',\n  vnsub: '⊂⃒',\n  vnsup: '⊃⃒',\n  vopf: '𝕧',\n  vprop: '∝',\n  vrtri: '⊳',\n  vscr: '𝓋',\n  vsubnE: '⫋︀',\n  vsubne: '⊊︀',\n  vsupnE: '⫌︀',\n  vsupne: '⊋︀',\n  vzigzag: '⦚',\n  wcirc: 'ŵ',\n  wedbar: '⩟',\n  wedge: '∧',\n  wedgeq: '≙',\n  weierp: '℘',\n  wfr: '𝔴',\n  wopf: '𝕨',\n  wp: '℘',\n  wr: '≀',\n  wreath: '≀',\n  wscr: '𝓌',\n  xcap: '⋂',\n  xcirc: '◯',\n  xcup: '⋃',\n  xdtri: '▽',\n  xfr: '𝔵',\n  xhArr: '⟺',\n  xharr: '⟷',\n  xi: 'ξ',\n  xlArr: '⟸',\n  xlarr: '⟵',\n  xmap: '⟼',\n  xnis: '⋻',\n  xodot: '⨀',\n  xopf: '𝕩',\n  xoplus: '⨁',\n  xotime: '⨂',\n  xrArr: '⟹',\n  xrarr: '⟶',\n  xscr: '𝓍',\n  xsqcup: '⨆',\n  xuplus: '⨄',\n  xutri: '△',\n  xvee: '⋁',\n  xwedge: '⋀',\n  yacute: 'ý',\n  yacy: 'я',\n  ycirc: 'ŷ',\n  ycy: 'ы',\n  yen: '¥',\n  yfr: '𝔶',\n  yicy: 'ї',\n  yopf: '𝕪',\n  yscr: '𝓎',\n  yucy: 'ю',\n  yuml: 'ÿ',\n  zacute: 'ź',\n  zcaron: 'ž',\n  zcy: 'з',\n  zdot: 'ż',\n  zeetrf: 'ℨ',\n  zeta: 'ζ',\n  zfr: '𝔷',\n  zhcy: 'ж',\n  zigrarr: '⇝',\n  zopf: '𝕫',\n  zscr: '𝓏',\n  zwj: '‍',\n  zwnj: '‌'\n}\n","import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you’re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return d\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\n * @typedef {import('./lib/ast-to-react.js').Components} Components\n */\n\nexport {uriTransformer} from './lib/uri-transformer.js'\n\nexport {ReactMarkdown as default} from './lib/react-markdown.js'\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n"]}}